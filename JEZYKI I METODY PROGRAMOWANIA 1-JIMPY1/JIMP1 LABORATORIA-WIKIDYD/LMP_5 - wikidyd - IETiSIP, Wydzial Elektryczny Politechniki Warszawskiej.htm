<!DOCTYPE html PUBLIC "-//W3C//DTD HTML 4.01//EN" "http://www.w3.org/TR/html4/strict.dtd">
<html><head>
<meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
<meta name="robots" content="index,nofollow">

<title>LMP/5 - wikidyd - IETiSIP, Wydzial Elektryczny Politechniki Warszawskiej</title>
<script type="text/javascript" src="LMP_5%20-%20wikidyd%20-%20IETiSIP,%20Wydzial%20Elektryczny%20Politechniki%20Warszawskiej_files/common.js"></script>

<script type="text/javascript">
<!--
var search_hint = "Search";
//-->
</script>


<link rel="stylesheet" type="text/css" charset="utf-8" media="all" href="LMP_5%20-%20wikidyd%20-%20IETiSIP,%20Wydzial%20Elektryczny%20Politechniki%20Warszawskiej_files/common.css">
<link rel="stylesheet" type="text/css" charset="utf-8" media="screen" href="LMP_5%20-%20wikidyd%20-%20IETiSIP,%20Wydzial%20Elektryczny%20Politechniki%20Warszawskiej_files/screen.css">
<link rel="stylesheet" type="text/css" charset="utf-8" media="print" href="LMP_5%20-%20wikidyd%20-%20IETiSIP,%20Wydzial%20Elektryczny%20Politechniki%20Warszawskiej_files/print.css">
<link rel="stylesheet" type="text/css" charset="utf-8" media="projection" href="LMP_5%20-%20wikidyd%20-%20IETiSIP,%20Wydzial%20Elektryczny%20Politechniki%20Warszawskiej_files/projection.css">

<!-- css only for MS IE6/IE7 browsers -->
<!--[if lt IE 8]>
   <link rel="stylesheet" type="text/css" charset="utf-8" media="all" href="/moin_static193/rightsidebar/css/msie.css">
<![endif]-->





<link rel="Start" href="http://wikidyd.iem.pw.edu.pl/WikiDyd">
<link rel="Alternate" title="Wiki Markup" href="http://wikidyd.iem.pw.edu.pl/LMP/5?action=raw">
<link rel="Alternate" media="print" title="Print View" href="http://wikidyd.iem.pw.edu.pl/LMP/5?action=print">
<link rel="Up" href="http://wikidyd.iem.pw.edu.pl/LMP">
<link rel="Appendix" title="lmp5.tgz" href="http://wikidyd.iem.pw.edu.pl/LMP/5?action=AttachFile&amp;do=view&amp;target=lmp5.tgz">
<link rel="Appendix" title="nevergiveup.png" href="http://wikidyd.iem.pw.edu.pl/LMP/5?action=AttachFile&amp;do=view&amp;target=nevergiveup.png">
<link rel="Search" href="http://wikidyd.iem.pw.edu.pl/FindPage">
<link rel="Index" href="http://wikidyd.iem.pw.edu.pl/TitleIndex">
<link rel="Glossary" href="http://wikidyd.iem.pw.edu.pl/WordIndex">
<link rel="Help" href="http://wikidyd.iem.pw.edu.pl/HelpOnFormatting">
</head>

<body dir="ltr" lang="en">

<div id="header">

<form id="searchform" method="get" action="/LMP/5">
<div>
<input name="action" value="fullsearch" type="hidden">
<input name="context" value="180" type="hidden">
<label style="display: none;" for="searchinput">Search:</label>
<input class="disabled" id="searchinput" name="value" value="Search" size="20" onfocus="searchFocus(this)" onblur="searchBlur(this)" onkeyup="searchChange(this)" onchange="searchChange(this)" alt="Search" type="text">
<input disabled="disabled" id="titlesearch" name="titlesearch" value="Titles" alt="Search Titles" type="submit">
<input disabled="disabled" id="fullsearch" name="fullsearch" value="Text" alt="Search Full Text" type="submit">
</div>
</form>
<script type="text/javascript">
<!--// Initialize search form
var f = document.getElementById('searchform');
f.getElementsByTagName('label')[0].style.display = 'none';
var e = document.getElementById('searchinput');
searchChange(e);
searchBlur(e);
//-->
</script>


<div id="locationline">
<div id="interwiki"><span><a href="http://wikidyd.iem.pw.edu.pl/WikiDyd" rel="nofollow">wikidyd - IETiSIP, Wydzial Elektryczny Politechniki Warszawskiej</a></span></div>

<ul id="pagelocation">
<li><a href="http://wikidyd.iem.pw.edu.pl/LMP">LMP</a></li><li><a class="backlink" href="http://wikidyd.iem.pw.edu.pl/LMP/5?action=fullsearch&amp;context=180&amp;value=linkto%3A%22LMP%2F5%22" rel="nofollow" title="Click to do a full-text search for this title">5</a></li>
</ul>

</div>

</div>

<div id="sidebar">
<div class="sidepanel">
<h1>Wiki</h1>

<ul id="navibar">
<li class="wikilink"><a href="http://wikidyd.iem.pw.edu.pl/RecentChanges">RecentChanges</a></li><li class="wikilink"><a href="http://wikidyd.iem.pw.edu.pl/FindPage">FindPage</a></li><li class="wikilink"><a href="http://wikidyd.iem.pw.edu.pl/HelpContents">HelpContents</a></li><li class="current"><a href="http://wikidyd.iem.pw.edu.pl/LMP/5">LMP/5</a></li>
</ul>

</div>
<div class="sidepanel">
<h1>Page</h1>
<ul class="editbar"><li><span class="disabled">Immutable Page</span></li><li class="toggleCommentsButton" style=""><a href="#" class="nbcomment" onclick="toggleComments();return false;">Comments</a></li><li><a class="nbinfo" href="http://wikidyd.iem.pw.edu.pl/LMP/5?action=info" rel="nofollow">Info</a></li><li><a class="nbattachments" href="http://wikidyd.iem.pw.edu.pl/LMP/5?action=AttachFile" rel="nofollow">Attachments</a></li><li>
<form class="actionsmenu" method="GET" action="/LMP/5">
<div>
    
    <select name="action" onchange="if ((this.selectedIndex != 0) &amp;&amp;
                      (this.options[this.selectedIndex].disabled == false)) {
                this.form.submit();
            }
            this.selectedIndex = 0;">
        <option selected="selected" value="show">More Actions:</option><option value="raw">Raw Text</option>
<option value="print">Print View</option>
<option value="refresh">Delete Cache</option>
<option value="show" disabled="disabled" class="disabled">------------------------</option>
<option value="SpellCheck">Check Spelling</option>
<option value="LikePages">Like Pages</option>
<option value="LocalSiteMap">Local Site Map</option>
<option value="show" disabled="disabled" class="disabled">------------------------</option>
<option value="RenamePage" disabled="disabled" class="disabled">Rename Page</option>
<option value="DeletePage" disabled="disabled" class="disabled">Delete Page</option>
<option value="show" disabled="disabled" class="disabled">------------------------</option>
<option value="show" disabled="disabled" class="disabled">Subscribe User</option>
<option value="show" disabled="disabled" class="disabled">------------------------</option>
<option value="show" disabled="disabled" class="disabled">Remove Spam</option>
<option value="show" disabled="disabled" class="disabled">Revert to this revision</option>
<option value="PackagePages">Package Pages</option>
<option value="SyncPages">Sync Pages</option>
<option value="show" disabled="disabled" class="disabled">------------------------</option>
<option value="Load">Load</option>
<option value="Save">Save</option>
<option value="SlideShow">SlideShow</option>
    </select>
    
    
</div>
<script type="text/javascript">
<!--// Init menu
actionsMenuInit('More Actions:');
//-->
</script>
</form>
</li></ul>

</div>
<div class="sidepanel">
<h1>User</h1>
<ul id="username"><li><a href="http://wikidyd.iem.pw.edu.pl/LMP/5?action=login" id="login" rel="nofollow">Login</a></li></ul>
</div>
</div>

<div id="page" dir="ltr" lang="en">
<div dir="ltr" id="content" lang="en"><span class="anchor" id="top"></span>
<span class="anchor" id="line-1"></span><div><table><tbody><tr>  <td style="border-width: 0px; ; width: 66%"><p class="line862">Materiały zostały opracowane w ramach realizacji Programu Rozwojowego Politechniki Warszawskiej. </p></td>
  <td style="border-width: 0px;  text-align: right;"><p class="line862"> <img alt="http://prpw.iem.pw.edu.pl/images/KAPITAL_LUDZKI.gif" class="external_image" src="LMP_5%20-%20wikidyd%20-%20IETiSIP,%20Wydzial%20Elektryczny%20Politechniki%20Warszawskiej_files/KAPITAL_LUDZKI.gif" title="http://prpw.iem.pw.edu.pl/images/KAPITAL_LUDZKI.gif"> <img alt="http://prpw.iem.pw.edu.pl/images/EU+EFS_P-kolor.gif" class="external_image" src="LMP_5%20-%20wikidyd%20-%20IETiSIP,%20Wydzial%20Elektryczny%20Politechniki%20Warszawskiej_files/EUEFS_P-kolor.gif" title="http://prpw.iem.pw.edu.pl/images/EU+EFS_P-kolor.gif"> </p></td>
</tr>
<tr>  <td colspan="2" style="border-width: 0px;  text-align: center;"><span class="anchor" id="line-2"></span><p class="line891"><small><a class="http" href="http://www.pr.pw.edu.pl/"><img alt="http://www.pr.pw.edu.pl/" class="external_image" src="LMP_5%20-%20wikidyd%20-%20IETiSIP,%20Wydzial%20Elektryczny%20Politechniki%20Warszawskiej_files/small_logo_prpw.jpg" title="http://www.pr.pw.edu.pl/"></a> jest projektem współfinansowanym przez Unię Europejską w ramach <a class="http" href="http://www.efs.gov.pl/">Europejskiego Funduszu społecznego</a>
 (działanie 4.1.1 Programu Operacyjnego Kapitał Ludzki) i ma na celu 
poprawę jakości kształcenia oraz dostosowanie oferty dydaktycznej 
Politechniki Warszawskiej do potrzeb rynku pracy. Będzie on realizowany 
przez Uczelnię w latach 2008-2015.</small> </p></td>
</tr>
</tbody></table></div><span class="anchor" id="line-3"></span><p class="line867"></p><hr class="hr4"><p class="line874"> <span class="anchor" id="line-4"></span><span class="anchor" id="line-5"></span></p><p class="line867">
</p><h3 id="Laboratorium_metodyki_programowania">Laboratorium metodyki programowania</h3>
<span class="anchor" id="line-6"></span><p class="line867">
</p><h2 id="A.2BAQY-wiczenie_5:_Uruchamianie_program.2BAPM-w">Ćwiczenie 5: Uruchamianie programów</h2>
<span class="anchor" id="line-7"></span><span class="anchor" id="line-8"></span><p class="line867">
</p><h4 id="Scenariusz">Scenariusz</h4>
<span class="anchor" id="line-9"></span><ol type="a"><li>Student loguje się do systemu LOP (Laboratorium Otwartego Programowania). <span class="anchor" id="line-10"></span></li><li>Student przechodzi do katalogu roboczego dla zajęć LMP. <span class="anchor" id="line-11"></span></li><li>Student pobiera z repozytorium kod programów. <span class="anchor" id="line-12"></span></li><li>Po
 wyjaśnieniach prowadzącego student przystępuje do kompilacji i 
uruchomienia programów. Porównuje wynik działania z kodem źródłowym. <span class="anchor" id="line-13"></span></li><li>Student modyfikuje programy według wskazówek prowadzącego (patrz opis szczegółowy). Powtarza próbę kompilacji i uruchomienia. <span class="anchor" id="line-14"></span></li><li>Ćwiczenie zaliczeniowe: student rozszerza funkcjonalność programu według zamówienia prowadzącego. <span class="anchor" id="line-15"></span><span class="anchor" id="line-16"></span></li></ol><p class="line867">
</p><h4 id="Opis_szczeg.2BAPMBQg-owy">Opis szczegółowy</h4>
<span class="anchor" id="line-17"></span><span class="anchor" id="line-18"></span><p class="line874">W
 trakcie zajęć nauczymy się podstaw sprawdzania, czy nasz program działa
 poprawnie i postępowania w sytuacji, kiedy z początku jest inaczej. <span class="anchor" id="line-19"></span></p><ul><li style="list-style-type:none"><p class="line862">Podstawowa zasada jest prosta: <em>Walcz do końca, nigdy się nie poddawaj!</em>  <span class="anchor" id="line-20"></span></p><ul><li style="list-style-type:none"><p class="line891"><img alt="nigdy się nie poddawaj!" class="attachment" src="LMP_5%20-%20wikidyd%20-%20IETiSIP,%20Wydzial%20Elektryczny%20Politechniki%20Warszawskiej_files/5.png" title="nigdy się nie poddawaj!" width="200"> <span class="anchor" id="line-21"></span><span class="anchor" id="line-22"></span></p></li></ul></li></ul><p class="line867">
</p><h5 id="Rozpocz.2BARk-cie_pracy">Rozpoczęcie pracy</h5>
<span class="anchor" id="line-23"></span><span class="anchor" id="line-24"></span><p class="line862">Zajęcia
 będą prowadzone na komputerze stud.iem.pw.edu.pl. W celu rozpoczęcia 
pracy należy zalogować się na tym komputerze za pomocą usługi ssh. Można
 w tym celu wykorzystać albo dostępny w każdym praktycznie systemie 
Unix/Linux program <a class="http" href="http://www.openbsd.org/cgi-bin/man.cgi?query=ssh&amp;sektion=1">ssh</a> albo klienta SSH dla systemu Windows - <a class="http" href="http://www.chiark.greenend.org.uk/%7Esgtatham/putty/">PuTTY</a>.
 Na maszynach studenckich w IETiSIP PW można podnieść różne dystrybucje 
Uniksa/Linuksa lub system Windows, ale w każdej z nich jest 
zainstalowane oprogramowanie ssh.  <span class="anchor" id="line-25"></span><span class="anchor" id="line-26"></span></p><p class="line874">Do
 logowania na maszynie stud.iem.pw.edu.pl należy użyć takiego samego 
loginu i hasła jakie wykorzystywane sa do dostępu do usług wydziałowych 
(poczta, e-dziekanat, itd.). <span class="anchor" id="line-27"></span><span class="anchor" id="line-28"></span></p><p class="line862">Po zalogowaniu się należy przejść do <a href="http://wikidyd.iem.pw.edu.pl/LMP/1">utworzonego na pierwszych zajęciach</a> katalogu lmp: <span class="anchor" id="line-29"></span><span class="anchor" id="line-30"></span><span class="anchor" id="line-31"></span></p><pre><span class="anchor" id="line-1"></span> cd lmp</pre><span class="anchor" id="line-32"></span><span class="anchor" id="line-33"></span><p class="line867"><span class="anchor" id="line-34"></span><span class="anchor" id="line-35"></span></p><div class="comment" style="display:none"><span class="anchor" id="line-1-1"></span><p class="line867"><a href="http://wikidyd.iem.pw.edu.pl/LMP/5/SVN">Pobranie kodu z repozytorium</a> </p></div><span class="anchor" id="line-36"></span><span class="anchor" id="line-37"></span><p class="line867">
</p><h5 id="Kod_do_zaj.2BARkBBw-">Kod do zajęć</h5>
<span class="anchor" id="line-38"></span><span class="anchor" id="line-39"></span><p class="line867"><a class="attachment" href="http://wikidyd.iem.pw.edu.pl/LMP/5?action=AttachFile&amp;do=view&amp;target=lmp5.tgz" title="">lmp5.tgz</a> <span class="anchor" id="line-40"></span><span class="anchor" id="line-41"></span></p><p class="line867">
</p><h5 id="Praca_nad_kodem">Praca nad kodem</h5>
<span class="anchor" id="line-42"></span><span class="anchor" id="line-43"></span><span class="anchor" id="line-44"></span><p class="line867">
</p><h5 id="Program">Program</h5>
<span class="anchor" id="line-45"></span><span class="anchor" id="line-46"></span><p class="line874">Celem zajęć będzie uruchomienie programów porównujących szybkość działania dwóch algorytmów sortowania wektorów. <span class="anchor" id="line-47"></span><span class="anchor" id="line-48"></span></p><p class="line874">Pierwszy algorytm to tak zwane ,,sortowanie przez wstawianie". <span class="anchor" id="line-49"></span><span class="anchor" id="line-50"></span></p><p class="line867"><strong>Sortowanie przez wstawianie - Insertion Sort (insort)</strong> <span class="anchor" id="line-51"></span><span class="anchor" id="line-52"></span></p><p class="line874">Insort
 to algorytm iteracyjny. Przegląda wektor poczynając od drugiego 
elementu i w każdej iteracji dokłada rozważany element do już 
posortowanego wektora. <span class="anchor" id="line-53"></span><span class="anchor" id="line-54"></span></p><p class="line874">Rozważmy dla przykładu wektor składający się z siedmiu elementów: <span class="anchor" id="line-55"></span><span class="anchor" id="line-56"></span></p><p class="line874">v= [ 3.0, 2.1, 1.4, 4.6, 7.7, 5.8, 6.1 ] <span class="anchor" id="line-57"></span><span class="anchor" id="line-58"></span></p><p class="line867"><em>Pierwsza iteracja</em> <span class="anchor" id="line-59"></span><span class="anchor" id="line-60"></span><span class="anchor" id="line-61"></span></p><pre><span class="anchor" id="line-1-1"></span>i= 1; // v[i] == 2.1</pre><span class="anchor" id="line-62"></span><p class="line874">Rozpoczynamy
 od drugiego elementu (2.1). Przed nim znajduje się ,,już posortowany" 
jednoelementowy wektor [3.0]. Naszym zadaniem jest przejrzenie tego 
wektora, poczynając od ostatniego elementu, a kończąc na takim, który 
jest mniejszy od elementu rozpatrywanego (czyli 2.1). Ponieważ 
posortowany wektor się wydłuży, będziemy potrzebowali miejsce na nowy 
element - aby je przygotować, kopiujemy rozpatrywany element do zmiennej
 tymczasowej. Przeglądając elementy przesuwamy te, które okażą się 
większe od zmiennej tymczasowej o jedno miejsce w prawo. W ten sposób, 
gdy znajdziemy element nie większy od sprawdzanego, będziemy mogli 
wstawić za niego zmienną tymczasową. <span class="anchor" id="line-63"></span>Nasza pierwsza iteracja wygląda więc tak: <span class="anchor" id="line-64"></span><span class="anchor" id="line-65"></span><span class="anchor" id="line-66"></span><span class="anchor" id="line-67"></span><span class="anchor" id="line-68"></span><span class="anchor" id="line-69"></span></p><pre><span class="anchor" id="line-1-2"></span>v= [ 3.0, 2.1, 1.4, 4.6, 7.7, 5.8, 6.1 ]
<span class="anchor" id="line-2"></span>tmp= 2.1
<span class="anchor" id="line-3"></span>v= [ 3.0, 3.0, 1.4, 4.6, 7.7, 5.8, 6.1 ]
<span class="anchor" id="line-4"></span>v= [ 2.1, 3.0, 1.4, 4.6, 7.7, 5.8, 6.1 ]</pre><span class="anchor" id="line-70"></span><span class="anchor" id="line-71"></span><p class="line867"><em>Druga iteracja</em> <span class="anchor" id="line-72"></span><span class="anchor" id="line-73"></span><span class="anchor" id="line-74"></span></p><pre><span class="anchor" id="line-1-3"></span>i= 2; // v[i] == 1.4</pre><span class="anchor" id="line-75"></span><p class="line874">Trzeci
 element to 1.4. Przed nim znajduje się już posortowany dwuelementowy 
wektor [2.1, 3.0]. Postępujemy podobnie, jak poprzednio: <span class="anchor" id="line-76"></span><span class="anchor" id="line-77"></span><span class="anchor" id="line-78"></span><span class="anchor" id="line-79"></span><span class="anchor" id="line-80"></span><span class="anchor" id="line-81"></span><span class="anchor" id="line-82"></span></p><pre><span class="anchor" id="line-1-4"></span>v= [ 2.1, 3.0, 1.4, 4.6, 7.7, 5.8, 6.1 ]
<span class="anchor" id="line-2-1"></span>tmp= 1.4
<span class="anchor" id="line-3-1"></span>v= [ 2.1, 3.0, 3.0, 4.6, 7.7, 5.8, 6.1 ]
<span class="anchor" id="line-4-1"></span>v= [ 2.1, 2.1, 3.0, 4.6, 7.7, 5.8, 6.1 ]
<span class="anchor" id="line-5"></span>v= [ 1.4, 2.1, 3.0, 4.6, 7.7, 5.8, 6.1 ]</pre><span class="anchor" id="line-83"></span><span class="anchor" id="line-84"></span><p class="line867"><em>Trzecia iteracja</em> <span class="anchor" id="line-85"></span><span class="anchor" id="line-86"></span><span class="anchor" id="line-87"></span></p><pre><span class="anchor" id="line-1-5"></span>i= 3; // v[i] == 4.6</pre><span class="anchor" id="line-88"></span><p class="line867"><span class="anchor" id="line-89"></span><span class="anchor" id="line-90"></span><span class="anchor" id="line-91"></span><span class="anchor" id="line-92"></span></p><pre><span class="anchor" id="line-1-6"></span>v= [ 1.4, 2.1, 3.0, 4.6, 7.7, 5.8, 6.1 ]
<span class="anchor" id="line-2-2"></span>tmp= 4.6
<span class="anchor" id="line-3-2"></span>v= [ 1.4, 2.1, 3.0, 4.6, 7.7, 5.8, 6.1 ]</pre><span class="anchor" id="line-93"></span><span class="anchor" id="line-94"></span><p class="line874">A
 oto funkcja w C, która realizuje ten algorytm (UWAGA: funkcja zawiera 
błędy składniowe i merytoryczne - zadaniem Państwa jest ich znalezienie i
 poprawienie). <span class="anchor" id="line-95"></span><span class="anchor" id="line-96"></span></p><p class="line867"><span class="anchor" id="line-97"></span><span class="anchor" id="line-98"></span><span class="anchor" id="line-99"></span><span class="anchor" id="line-100"></span><span class="anchor" id="line-101"></span><span class="anchor" id="line-102"></span><span class="anchor" id="line-103"></span><span class="anchor" id="line-104"></span><span class="anchor" id="line-105"></span><span class="anchor" id="line-106"></span><span class="anchor" id="line-107"></span><span class="anchor" id="line-108"></span><span class="anchor" id="line-109"></span><span class="anchor" id="line-110"></span><span class="anchor" id="line-1-2"></span></p><div class="highlight cpp"><div class="codearea" dir="ltr" lang="en">
<script type="text/javascript">
function isnumbered(obj) {
  return obj.childNodes.length && obj.firstChild.childNodes.length && obj.firstChild.firstChild.className == 'LineNumber';
}
function nformat(num,chrs,add) {
  var nlen = Math.max(0,chrs-(''+num).length), res = '';
  while (nlen>0) { res += ' '; nlen-- }
  return res+num+add;
}
function addnumber(did, nstart, nstep) {
  var c = document.getElementById(did), l = c.firstChild, n = 1;
  if (!isnumbered(c)) {
    if (typeof nstart == 'undefined') nstart = 1;
    if (typeof nstep  == 'undefined') nstep = 1;
    var n = nstart;
    while (l != null) {
      if (l.tagName == 'SPAN') {
        var s = document.createElement('SPAN');
        var a = document.createElement('A');
        s.className = 'LineNumber';
        a.appendChild(document.createTextNode(nformat(n,4,'')));
        a.href = '#' + did + '_' + n;
        s.appendChild(a);
        s.appendChild(document.createTextNode(' '));
        n += nstep;
        if (l.childNodes.length) {
          l.insertBefore(s, l.firstChild);
        }
        else {
          l.appendChild(s);
        }
      }
      l = l.nextSibling;
    }
  }
  return false;
}
function remnumber(did) {
  var c = document.getElementById(did), l = c.firstChild;
  if (isnumbered(c)) {
    while (l != null) {
      if (l.tagName == 'SPAN' && l.firstChild.className == 'LineNumber') l.removeChild(l.firstChild);
      l = l.nextSibling;
    }
  }
  return false;
}
function togglenumber(did, nstart, nstep) {
  var c = document.getElementById(did);
  if (isnumbered(c)) {
    remnumber(did);
  } else {
    addnumber(did,nstart,nstep);
  }
  return false;
}
</script>

<script type="text/javascript">
document.write('<a href="#" onclick="return togglenumber(\'CA-7da139503599e04896ee2ed8223b82ee6a90e07d\', 1, 1);" \
                class="codenumbers">Toggle line numbers<\/a>');
</script><a href="#" onclick="return togglenumber('CA-7da139503599e04896ee2ed8223b82ee6a90e07d', 1, 1);" class="codenumbers">Toggle line numbers</a>
<pre dir="ltr" id="CA-7da139503599e04896ee2ed8223b82ee6a90e07d" lang="en"><span class="line"><span class="LineNumber"><a href="#CA-7da139503599e04896ee2ed8223b82ee6a90e07d_1">   1</a> </span><span class="LineAnchor" id="CA-7da139503599e04896ee2ed8223b82ee6a90e07d_1"></span><span class="anchor" id="line-1-3"></span><span class="Preprc">#</span><span class="Preprc">include "insort.h"</span><span class="Preprc"></span></span>
<span class="line"><span class="LineNumber"><a href="#CA-7da139503599e04896ee2ed8223b82ee6a90e07d_2">   2</a> </span><span class="LineAnchor" id="CA-7da139503599e04896ee2ed8223b82ee6a90e07d_2"></span><span class="anchor" id="line-2-1"></span><span class="Preprc"></span></span>
<span class="line"><span class="LineNumber"><a href="#CA-7da139503599e04896ee2ed8223b82ee6a90e07d_3">   3</a> </span><span class="LineAnchor" id="CA-7da139503599e04896ee2ed8223b82ee6a90e07d_3"></span><span class="anchor" id="line-3-1"></span><span class="ResWord">void</span></span>
<span class="line"><span class="LineNumber"><a href="#CA-7da139503599e04896ee2ed8223b82ee6a90e07d_4">   4</a> </span><span class="LineAnchor" id="CA-7da139503599e04896ee2ed8223b82ee6a90e07d_4"></span><span class="anchor" id="line-4-1"></span><span class="ID">insort</span> (<span class="ResWord">double</span> <span class="ID">v</span>[], <span class="ResWord">int</span> <span class="ID">n</span>)</span>
<span class="line"><span class="LineNumber"><a href="#CA-7da139503599e04896ee2ed8223b82ee6a90e07d_5">   5</a> </span><span class="LineAnchor" id="CA-7da139503599e04896ee2ed8223b82ee6a90e07d_5"></span><span class="anchor" id="line-5-1"></span>{</span>
<span class="line"><span class="LineNumber"><a href="#CA-7da139503599e04896ee2ed8223b82ee6a90e07d_6">   6</a> </span><span class="LineAnchor" id="CA-7da139503599e04896ee2ed8223b82ee6a90e07d_6"></span><span class="anchor" id="line-6-1"></span>  <span class="ResWord">int</span> <span class="ID">i</span>, <span class="ID">j</span>;</span>
<span class="line"><span class="LineNumber"><a href="#CA-7da139503599e04896ee2ed8223b82ee6a90e07d_7">   7</a> </span><span class="LineAnchor" id="CA-7da139503599e04896ee2ed8223b82ee6a90e07d_7"></span><span class="anchor" id="line-7-1"></span>  <span class="ResWord">for</span> (<span class="ID">i</span> = <span class="Number">1</span>; <span class="ID">i</span> &lt; <span class="ID">n</span>; <span class="ID">i</span>++) {</span>
<span class="line"><span class="LineNumber"><a href="#CA-7da139503599e04896ee2ed8223b82ee6a90e07d_8">   8</a> </span><span class="LineAnchor" id="CA-7da139503599e04896ee2ed8223b82ee6a90e07d_8"></span><span class="anchor" id="line-8-1"></span>    <span class="ResWord">double</span> <span class="ID">tmp</span> = <span class="ID">v</span>[<span class="ID">j</span>];</span>
<span class="line"><span class="LineNumber"><a href="#CA-7da139503599e04896ee2ed8223b82ee6a90e07d_9">   9</a> </span><span class="LineAnchor" id="CA-7da139503599e04896ee2ed8223b82ee6a90e07d_9"></span><span class="anchor" id="line-9-1"></span>    <span class="ResWord">for</span> (<span class="ID">j</span> = <span class="ID">i</span>-<span class="Number">1</span>; <span class="ID">v</span>[<span class="ID">j</span>] &gt; <span class="ID">tmp</span>, <span class="ID">j</span>--)</span>
<span class="line"><span class="LineNumber"><a href="#CA-7da139503599e04896ee2ed8223b82ee6a90e07d_10">  10</a> </span><span class="LineAnchor" id="CA-7da139503599e04896ee2ed8223b82ee6a90e07d_10"></span><span class="anchor" id="line-10-1"></span>      <span class="ID">v</span>[<span class="ID">j</span>+<span class="Number">1</span>] = <span class="ID">v</span>[<span class="ID">j</span>];</span>
<span class="line"><span class="LineNumber"><a href="#CA-7da139503599e04896ee2ed8223b82ee6a90e07d_11">  11</a> </span><span class="LineAnchor" id="CA-7da139503599e04896ee2ed8223b82ee6a90e07d_11"></span><span class="anchor" id="line-11-1"></span>    <span class="ID">v</span>[<span class="ID">j</span>+<span class="Number">1</span>] = <span class="ID">tnp</span>;</span>
<span class="line"><span class="LineNumber"><a href="#CA-7da139503599e04896ee2ed8223b82ee6a90e07d_12">  12</a> </span><span class="LineAnchor" id="CA-7da139503599e04896ee2ed8223b82ee6a90e07d_12"></span><span class="anchor" id="line-12-1"></span>  }</span>
<span class="line"><span class="LineNumber"><a href="#CA-7da139503599e04896ee2ed8223b82ee6a90e07d_13">  13</a> </span><span class="LineAnchor" id="CA-7da139503599e04896ee2ed8223b82ee6a90e07d_13"></span><span class="anchor" id="line-13-1"></span>}</span>
</pre></div></div><span class="anchor" id="line-111"></span><span class="anchor" id="line-112"></span><p class="line874">Kolejny plik to program testujący funkcję: <span class="anchor" id="line-113"></span><span class="anchor" id="line-114"></span><span class="anchor" id="line-115"></span><span class="anchor" id="line-116"></span><span class="anchor" id="line-117"></span><span class="anchor" id="line-118"></span><span class="anchor" id="line-119"></span><span class="anchor" id="line-120"></span><span class="anchor" id="line-121"></span><span class="anchor" id="line-122"></span><span class="anchor" id="line-123"></span><span class="anchor" id="line-124"></span><span class="anchor" id="line-125"></span><span class="anchor" id="line-126"></span><span class="anchor" id="line-127"></span><span class="anchor" id="line-128"></span><span class="anchor" id="line-129"></span><span class="anchor" id="line-130"></span><span class="anchor" id="line-131"></span><span class="anchor" id="line-132"></span><span class="anchor" id="line-133"></span><span class="anchor" id="line-134"></span><span class="anchor" id="line-135"></span><span class="anchor" id="line-136"></span><span class="anchor" id="line-137"></span><span class="anchor" id="line-138"></span><span class="anchor" id="line-139"></span><span class="anchor" id="line-140"></span><span class="anchor" id="line-141"></span><span class="anchor" id="line-142"></span><span class="anchor" id="line-143"></span><span class="anchor" id="line-144"></span><span class="anchor" id="line-145"></span><span class="anchor" id="line-146"></span><span class="anchor" id="line-147"></span><span class="anchor" id="line-148"></span><span class="anchor" id="line-149"></span><span class="anchor" id="line-150"></span><span class="anchor" id="line-151"></span><span class="anchor" id="line-152"></span><span class="anchor" id="line-153"></span><span class="anchor" id="line-154"></span><span class="anchor" id="line-155"></span><span class="anchor" id="line-156"></span><span class="anchor" id="line-1-4"></span></p><div class="highlight cpp"><div class="codearea" dir="ltr" lang="en">
<script type="text/javascript">
document.write('<a href="#" onclick="return togglenumber(\'CA-3274f7582398771d7feb4b0ab015883dc9fc2654\', 1, 1);" \
                class="codenumbers">Toggle line numbers<\/a>');
</script><a href="#" onclick="return togglenumber('CA-3274f7582398771d7feb4b0ab015883dc9fc2654', 1, 1);" class="codenumbers">Toggle line numbers</a>
<pre dir="ltr" id="CA-3274f7582398771d7feb4b0ab015883dc9fc2654" lang="en"><span class="line"><span class="LineNumber"><a href="#CA-3274f7582398771d7feb4b0ab015883dc9fc2654_1">   1</a> </span><span class="LineAnchor" id="CA-3274f7582398771d7feb4b0ab015883dc9fc2654_1"></span><span class="anchor" id="line-1-5"></span><span class="Preprc">#</span><span class="Preprc">include "insort.h"</span><span class="Preprc"></span></span>
<span class="line"><span class="LineNumber"><a href="#CA-3274f7582398771d7feb4b0ab015883dc9fc2654_2">   2</a> </span><span class="LineAnchor" id="CA-3274f7582398771d7feb4b0ab015883dc9fc2654_2"></span><span class="anchor" id="line-2-2"></span><span class="Preprc"></span><span class="Preprc"></span></span>
<span class="line"><span class="LineNumber"><a href="#CA-3274f7582398771d7feb4b0ab015883dc9fc2654_3">   3</a> </span><span class="LineAnchor" id="CA-3274f7582398771d7feb4b0ab015883dc9fc2654_3"></span><span class="anchor" id="line-3-2"></span><span class="Preprc">#</span><span class="Preprc">include &lt;stdio.h&gt;  </span><span class="Comment">// wiadomo po co</span></span>
<span class="line"><span class="LineNumber"><a href="#CA-3274f7582398771d7feb4b0ab015883dc9fc2654_4">   4</a> </span><span class="LineAnchor" id="CA-3274f7582398771d7feb4b0ab015883dc9fc2654_4"></span><span class="anchor" id="line-4-2"></span><span class="Comment"></span><span class="Preprc">#</span><span class="Preprc">include &lt;stdlib.h&gt; </span><span class="Comment">// funkcje atoi, malloc i rand</span></span>
<span class="line"><span class="LineNumber"><a href="#CA-3274f7582398771d7feb4b0ab015883dc9fc2654_5">   5</a> </span><span class="LineAnchor" id="CA-3274f7582398771d7feb4b0ab015883dc9fc2654_5"></span><span class="anchor" id="line-5-2"></span><span class="Comment"></span><span class="Preprc">#</span><span class="Preprc">include &lt;time.h&gt;   </span><span class="Comment">// funkcja time</span></span>
<span class="line"><span class="LineNumber"><a href="#CA-3274f7582398771d7feb4b0ab015883dc9fc2654_6">   6</a> </span><span class="LineAnchor" id="CA-3274f7582398771d7feb4b0ab015883dc9fc2654_6"></span><span class="anchor" id="line-6-2"></span><span class="Comment"></span></span>
<span class="line"><span class="LineNumber"><a href="#CA-3274f7582398771d7feb4b0ab015883dc9fc2654_7">   7</a> </span><span class="LineAnchor" id="CA-3274f7582398771d7feb4b0ab015883dc9fc2654_7"></span><span class="anchor" id="line-7-2"></span><span class="ResWord">void</span> <span class="ID">printv</span>( <span class="ResWord">double</span> <span class="ID">v</span>[], <span class="ResWord">int</span> <span class="ID">n</span> ) {  <span class="Comment">// wypisuje wektor na stdout</span></span>
<span class="line"><span class="LineNumber"><a href="#CA-3274f7582398771d7feb4b0ab015883dc9fc2654_8">   8</a> </span><span class="LineAnchor" id="CA-3274f7582398771d7feb4b0ab015883dc9fc2654_8"></span><span class="anchor" id="line-8-2"></span><span class="Comment"></span>  <span class="ResWord">int</span> <span class="ID">i</span>;</span>
<span class="line"><span class="LineNumber"><a href="#CA-3274f7582398771d7feb4b0ab015883dc9fc2654_9">   9</a> </span><span class="LineAnchor" id="CA-3274f7582398771d7feb4b0ab015883dc9fc2654_9"></span><span class="anchor" id="line-9-2"></span>  <span class="ResWord">int</span> <span class="ID">np</span>=  <span class="ID">n</span> &gt; <span class="ID">MAX_ELEM_2_PRINT</span> ? <span class="ID">MAX_ELEM_2_PRINT</span> : <span class="ID">n</span>;  <span class="Comment">// UWAGA: przy kompilacji trzeba zdefiniować MAX_ELEM_2_PRINT</span></span>
<span class="line"><span class="LineNumber"><a href="#CA-3274f7582398771d7feb4b0ab015883dc9fc2654_10">  10</a> </span><span class="LineAnchor" id="CA-3274f7582398771d7feb4b0ab015883dc9fc2654_10"></span><span class="anchor" id="line-10-2"></span><span class="Comment"></span>                                                         <span class="Comment">//   np.: -DMAX_ELEM_2_PRINT=10</span></span>
<span class="line"><span class="LineNumber"><a href="#CA-3274f7582398771d7feb4b0ab015883dc9fc2654_11">  11</a> </span><span class="LineAnchor" id="CA-3274f7582398771d7feb4b0ab015883dc9fc2654_11"></span><span class="anchor" id="line-11-2"></span><span class="Comment"></span>  <span class="ID">printf</span>( <span class="String">"</span><span class="String">[</span><span class="String">"</span> );</span>
<span class="line"><span class="LineNumber"><a href="#CA-3274f7582398771d7feb4b0ab015883dc9fc2654_12">  12</a> </span><span class="LineAnchor" id="CA-3274f7582398771d7feb4b0ab015883dc9fc2654_12"></span><span class="anchor" id="line-12-2"></span>  <span class="ResWord">for</span>( <span class="ID">i</span>= <span class="Number">0</span>; <span class="ID">i</span> &lt; <span class="ID">np</span>; <span class="ID">i</span>++ )</span>
<span class="line"><span class="LineNumber"><a href="#CA-3274f7582398771d7feb4b0ab015883dc9fc2654_13">  13</a> </span><span class="LineAnchor" id="CA-3274f7582398771d7feb4b0ab015883dc9fc2654_13"></span><span class="anchor" id="line-13-2"></span>    <span class="ID">printf</span>( <span class="String">"</span><span class="String"> %g</span><span class="String">"</span>, <span class="ID">v</span>[<span class="ID">i</span>] );</span>
<span class="line"><span class="LineNumber"><a href="#CA-3274f7582398771d7feb4b0ab015883dc9fc2654_14">  14</a> </span><span class="LineAnchor" id="CA-3274f7582398771d7feb4b0ab015883dc9fc2654_14"></span><span class="anchor" id="line-14-1"></span>  <span class="ID">printf</span>( <span class="String">"</span><span class="String">%s ]</span><span class="SPChar">\n</span><span class="String">"</span>, <span class="ID">np</span> &lt; <span class="ID">n</span> ? <span class="String">"</span><span class="String"> ... </span><span class="String">"</span> : <span class="String">"</span><span class="String">"</span> );</span>
<span class="line"><span class="LineNumber"><a href="#CA-3274f7582398771d7feb4b0ab015883dc9fc2654_15">  15</a> </span><span class="LineAnchor" id="CA-3274f7582398771d7feb4b0ab015883dc9fc2654_15"></span><span class="anchor" id="line-15-1"></span>}</span>
<span class="line"><span class="LineNumber"><a href="#CA-3274f7582398771d7feb4b0ab015883dc9fc2654_16">  16</a> </span><span class="LineAnchor" id="CA-3274f7582398771d7feb4b0ab015883dc9fc2654_16"></span><span class="anchor" id="line-16-1"></span></span>
<span class="line"><span class="LineNumber"><a href="#CA-3274f7582398771d7feb4b0ab015883dc9fc2654_17">  17</a> </span><span class="LineAnchor" id="CA-3274f7582398771d7feb4b0ab015883dc9fc2654_17"></span><span class="anchor" id="line-17-1"></span><span class="ResWord">int</span></span>
<span class="line"><span class="LineNumber"><a href="#CA-3274f7582398771d7feb4b0ab015883dc9fc2654_18">  18</a> </span><span class="LineAnchor" id="CA-3274f7582398771d7feb4b0ab015883dc9fc2654_18"></span><span class="anchor" id="line-18-1"></span><span class="ID">main</span>( <span class="ResWord">int</span> <span class="ID">argc</span>, <span class="ResWord">char</span> **<span class="ID">argv</span> ) {</span>
<span class="line"><span class="LineNumber"><a href="#CA-3274f7582398771d7feb4b0ab015883dc9fc2654_19">  19</a> </span><span class="LineAnchor" id="CA-3274f7582398771d7feb4b0ab015883dc9fc2654_19"></span><span class="anchor" id="line-19-1"></span>  <span class="ResWord">int</span> <span class="ID">n</span>= <span class="ID">argc</span> &gt; <span class="Number">1</span> ? <span class="ID">atoi</span>( <span class="ID">argv</span>[<span class="Number">1</span>] ) : <span class="Number">1000</span>;</span>
<span class="line"><span class="LineNumber"><a href="#CA-3274f7582398771d7feb4b0ab015883dc9fc2654_20">  20</a> </span><span class="LineAnchor" id="CA-3274f7582398771d7feb4b0ab015883dc9fc2654_20"></span><span class="anchor" id="line-20-1"></span>  <span class="ResWord">int</span> <span class="ID">i</span>;</span>
<span class="line"><span class="LineNumber"><a href="#CA-3274f7582398771d7feb4b0ab015883dc9fc2654_21">  21</a> </span><span class="LineAnchor" id="CA-3274f7582398771d7feb4b0ab015883dc9fc2654_21"></span><span class="anchor" id="line-21-1"></span></span>
<span class="line"><span class="LineNumber"><a href="#CA-3274f7582398771d7feb4b0ab015883dc9fc2654_22">  22</a> </span><span class="LineAnchor" id="CA-3274f7582398771d7feb4b0ab015883dc9fc2654_22"></span><span class="anchor" id="line-22-1"></span>  <span class="ResWord">double</span> *<span class="ID">v</span>= <span class="ID">malloc</span>( <span class="ID">n</span> * <span class="ResWord">sizeof</span> *<span class="ID">v</span> );</span>
<span class="line"><span class="LineNumber"><a href="#CA-3274f7582398771d7feb4b0ab015883dc9fc2654_23">  23</a> </span><span class="LineAnchor" id="CA-3274f7582398771d7feb4b0ab015883dc9fc2654_23"></span><span class="anchor" id="line-23-1"></span></span>
<span class="line"><span class="LineNumber"><a href="#CA-3274f7582398771d7feb4b0ab015883dc9fc2654_24">  24</a> </span><span class="LineAnchor" id="CA-3274f7582398771d7feb4b0ab015883dc9fc2654_24"></span><span class="anchor" id="line-24-1"></span>  <span class="ID">srand</span>( <span class="ID">argc</span> &gt; <span class="Number">2</span> ? <span class="ID">atoi</span>(<span class="ID">argv</span>[<span class="Number">2</span>]) : <span class="ID">time</span>(<span class="ResWord">NULL</span>) );</span>
<span class="line"><span class="LineNumber"><a href="#CA-3274f7582398771d7feb4b0ab015883dc9fc2654_25">  25</a> </span><span class="LineAnchor" id="CA-3274f7582398771d7feb4b0ab015883dc9fc2654_25"></span><span class="anchor" id="line-25-1"></span></span>
<span class="line"><span class="LineNumber"><a href="#CA-3274f7582398771d7feb4b0ab015883dc9fc2654_26">  26</a> </span><span class="LineAnchor" id="CA-3274f7582398771d7feb4b0ab015883dc9fc2654_26"></span><span class="anchor" id="line-26-1"></span>  <span class="ResWord">for</span>( <span class="ID">i</span>= <span class="Number">0</span>; <span class="ID">i</span> &lt; <span class="ID">n</span>; <span class="ID">i</span>++ )</span>
<span class="line"><span class="LineNumber"><a href="#CA-3274f7582398771d7feb4b0ab015883dc9fc2654_27">  27</a> </span><span class="LineAnchor" id="CA-3274f7582398771d7feb4b0ab015883dc9fc2654_27"></span><span class="anchor" id="line-27-1"></span>    <span class="ID">v</span>[<span class="ID">i</span>] = <span class="ID">rand</span>() *<span class="Number">10</span> / (<span class="ResWord">double</span>)<span class="ID">RAND_MAX</span> * <span class="ID">n</span>;</span>
<span class="line"><span class="LineNumber"><a href="#CA-3274f7582398771d7feb4b0ab015883dc9fc2654_28">  28</a> </span><span class="LineAnchor" id="CA-3274f7582398771d7feb4b0ab015883dc9fc2654_28"></span><span class="anchor" id="line-28-1"></span></span>
<span class="line"><span class="LineNumber"><a href="#CA-3274f7582398771d7feb4b0ab015883dc9fc2654_29">  29</a> </span><span class="LineAnchor" id="CA-3274f7582398771d7feb4b0ab015883dc9fc2654_29"></span><span class="anchor" id="line-29-1"></span>  <span class="ID">printf</span>( <span class="String">"</span><span class="String">Wygenerowany wektor: </span><span class="String">"</span> );</span>
<span class="line"><span class="LineNumber"><a href="#CA-3274f7582398771d7feb4b0ab015883dc9fc2654_30">  30</a> </span><span class="LineAnchor" id="CA-3274f7582398771d7feb4b0ab015883dc9fc2654_30"></span><span class="anchor" id="line-30-1"></span>  <span class="ID">printv</span>( <span class="ID">v</span>, <span class="ID">n</span> );</span>
<span class="line"><span class="LineNumber"><a href="#CA-3274f7582398771d7feb4b0ab015883dc9fc2654_31">  31</a> </span><span class="LineAnchor" id="CA-3274f7582398771d7feb4b0ab015883dc9fc2654_31"></span><span class="anchor" id="line-31-1"></span></span>
<span class="line"><span class="LineNumber"><a href="#CA-3274f7582398771d7feb4b0ab015883dc9fc2654_32">  32</a> </span><span class="LineAnchor" id="CA-3274f7582398771d7feb4b0ab015883dc9fc2654_32"></span><span class="anchor" id="line-32-1"></span>  <span class="ID">insort</span>( <span class="ID">v</span>, <span class="ID">n</span> );</span>
<span class="line"><span class="LineNumber"><a href="#CA-3274f7582398771d7feb4b0ab015883dc9fc2654_33">  33</a> </span><span class="LineAnchor" id="CA-3274f7582398771d7feb4b0ab015883dc9fc2654_33"></span><span class="anchor" id="line-33-1"></span></span>
<span class="line"><span class="LineNumber"><a href="#CA-3274f7582398771d7feb4b0ab015883dc9fc2654_34">  34</a> </span><span class="LineAnchor" id="CA-3274f7582398771d7feb4b0ab015883dc9fc2654_34"></span><span class="anchor" id="line-34-1"></span>  <span class="ID">printf</span>( <span class="String">"</span><span class="String">Posortowany wektor: </span><span class="String">"</span> );</span>
<span class="line"><span class="LineNumber"><a href="#CA-3274f7582398771d7feb4b0ab015883dc9fc2654_35">  35</a> </span><span class="LineAnchor" id="CA-3274f7582398771d7feb4b0ab015883dc9fc2654_35"></span><span class="anchor" id="line-35-1"></span>  <span class="ID">printv</span>( <span class="ID">v</span>, <span class="ID">n</span> );</span>
<span class="line"><span class="LineNumber"><a href="#CA-3274f7582398771d7feb4b0ab015883dc9fc2654_36">  36</a> </span><span class="LineAnchor" id="CA-3274f7582398771d7feb4b0ab015883dc9fc2654_36"></span><span class="anchor" id="line-36-1"></span></span>
<span class="line"><span class="LineNumber"><a href="#CA-3274f7582398771d7feb4b0ab015883dc9fc2654_37">  37</a> </span><span class="LineAnchor" id="CA-3274f7582398771d7feb4b0ab015883dc9fc2654_37"></span><span class="anchor" id="line-37-1"></span>  <span class="ResWord">for</span>( <span class="ID">i</span>= <span class="Number">1</span>; <span class="ID">i</span> &lt;<span class="ID">n</span>; <span class="ID">i</span>++ )</span>
<span class="line"><span class="LineNumber"><a href="#CA-3274f7582398771d7feb4b0ab015883dc9fc2654_38">  38</a> </span><span class="LineAnchor" id="CA-3274f7582398771d7feb4b0ab015883dc9fc2654_38"></span><span class="anchor" id="line-38-1"></span>    <span class="ResWord">if</span>( <span class="ID">v</span>[<span class="ID">i</span>-<span class="Number">1</span>] &gt; <span class="ID">v</span>[<span class="ID">i</span>] )</span>
<span class="line"><span class="LineNumber"><a href="#CA-3274f7582398771d7feb4b0ab015883dc9fc2654_39">  39</a> </span><span class="LineAnchor" id="CA-3274f7582398771d7feb4b0ab015883dc9fc2654_39"></span><span class="anchor" id="line-39-1"></span>      <span class="ID">fprintf</span>( <span class="ID">stderr</span>, <span class="String">"</span><span class="String">Zly algorytm sortowania: v[%d]==%g &gt; v[%d]==%g</span><span class="SPChar">\n</span><span class="String">"</span>, <span class="ID">i</span>-<span class="Number">1</span>, <span class="ID">v</span>[<span class="ID">i</span>-<span class="Number">1</span>], <span class="ID">i</span>, <span class="ID">v</span>[<span class="ID">i</span>] );</span>
<span class="line"><span class="LineNumber"><a href="#CA-3274f7582398771d7feb4b0ab015883dc9fc2654_40">  40</a> </span><span class="LineAnchor" id="CA-3274f7582398771d7feb4b0ab015883dc9fc2654_40"></span><span class="anchor" id="line-40-1"></span></span>
<span class="line"><span class="LineNumber"><a href="#CA-3274f7582398771d7feb4b0ab015883dc9fc2654_41">  41</a> </span><span class="LineAnchor" id="CA-3274f7582398771d7feb4b0ab015883dc9fc2654_41"></span><span class="anchor" id="line-41-1"></span>  <span class="ResWord">return</span> <span class="Number">0</span>;</span>
<span class="line"><span class="LineNumber"><a href="#CA-3274f7582398771d7feb4b0ab015883dc9fc2654_42">  42</a> </span><span class="LineAnchor" id="CA-3274f7582398771d7feb4b0ab015883dc9fc2654_42"></span><span class="anchor" id="line-42-1"></span>}</span>
</pre></div></div><span class="anchor" id="line-157"></span><span class="anchor" id="line-158"></span><p class="line874">Pierwsza próba kompilacji powinna się zakończyć mniej-więcej takim efektem: <span class="anchor" id="line-159"></span><span class="anchor" id="line-160"></span><span class="anchor" id="line-161"></span><span class="anchor" id="line-162"></span><span class="anchor" id="line-163"></span><span class="anchor" id="line-164"></span><span class="anchor" id="line-165"></span><span class="anchor" id="line-166"></span><span class="anchor" id="line-167"></span></p><pre><span class="anchor" id="line-1-7"></span>oer:~/tmp/lmp5/gr1&gt; cc insort.c
<span class="anchor" id="line-2-3"></span>insort.c: In function ‘insort’:
<span class="anchor" id="line-3-3"></span>insort.c:9: error: expected ‘;’ before ‘)’ token
<span class="anchor" id="line-4-2"></span>insort.c:11: error: ‘tnp’ undeclared (first use in this function)
<span class="anchor" id="line-5-1"></span>insort.c:11: error: (Each undeclared identifier is reported only once
<span class="anchor" id="line-6"></span>insort.c:11: error: for each function it appears in.)
<span class="anchor" id="line-7"></span>oer:~/tmp/lmp5/gr1&gt;</pre><span class="anchor" id="line-168"></span><span class="anchor" id="line-169"></span><p class="line874">Po usunięciu błędów składniowych: <span class="anchor" id="line-170"></span><span class="anchor" id="line-171"></span><span class="anchor" id="line-172"></span><span class="anchor" id="line-173"></span><span class="anchor" id="line-174"></span><span class="anchor" id="line-175"></span><span class="anchor" id="line-176"></span><span class="anchor" id="line-177"></span><span class="anchor" id="line-178"></span><span class="anchor" id="line-179"></span></p><pre><span class="anchor" id="line-1-8"></span>oer:~/tmp/lmp5/gr1&gt; cc insort.c -DMAX_ELEM_2_PRINT=16 test.c
<span class="anchor" id="line-2-4"></span>oer:~/tmp/lmp5/gr1&gt; ./a.out 10
<span class="anchor" id="line-3-4"></span>Wygenerowany wektor: [ 9.75783 -8.42358 -6.12913 2.59683 -0.755495 -7.61919 4.50464 -8.28581 9.92636 -8.88772 ]
<span class="anchor" id="line-4-3"></span>[1]    15719 segmentation fault  ./a.out 10
<span class="anchor" id="line-5-2"></span>oer:~/tmp/lmp5/gr1&gt; ./a.out 20
<span class="anchor" id="line-6-1"></span>Wygenerowany wektor: [ -7.02152 -10.7925 -3.32976 -10.0877 19.163 -2.85997 11.8226 7.18634 0.406509 9.79747 -3.50272 7.07695 1.63055 -19.5686 -2.62934 -16.7263 ...  ]
<span class="anchor" id="line-7-1"></span>[1]    15720 segmentation fault  ./a.out 20
<span class="anchor" id="line-8"></span>oer:~/tmp/lmp5/gr1&gt;</pre><span class="anchor" id="line-180"></span><span class="anchor" id="line-181"></span><span class="anchor" id="line-182"></span><p class="line874">Kompilujemy z opcją powodującą wygenerowanie kodu z informacjami wykorzystywanymi przez debugger: <span class="anchor" id="line-183"></span><span class="anchor" id="line-184"></span><span class="anchor" id="line-185"></span></p><pre><span class="anchor" id="line-1-9"></span>oer:~/tmp/lmp5/gr1&gt; cc -ggdb insort.c -DMAX_ELEM_2_PRINT=16 test.c</pre><span class="anchor" id="line-186"></span><span class="anchor" id="line-187"></span><p class="line874">Uruchamiamy debugger i prosimy go o informację o dostępnych komendach: <span class="anchor" id="line-188"></span><span class="anchor" id="line-189"></span><span class="anchor" id="line-190"></span><span class="anchor" id="line-191"></span><span class="anchor" id="line-192"></span><span class="anchor" id="line-193"></span><span class="anchor" id="line-194"></span><span class="anchor" id="line-195"></span><span class="anchor" id="line-196"></span><span class="anchor" id="line-197"></span><span class="anchor" id="line-198"></span><span class="anchor" id="line-199"></span><span class="anchor" id="line-200"></span><span class="anchor" id="line-201"></span><span class="anchor" id="line-202"></span><span class="anchor" id="line-203"></span><span class="anchor" id="line-204"></span><span class="anchor" id="line-205"></span><span class="anchor" id="line-206"></span><span class="anchor" id="line-207"></span><span class="anchor" id="line-208"></span><span class="anchor" id="line-209"></span><span class="anchor" id="line-210"></span><span class="anchor" id="line-211"></span><span class="anchor" id="line-212"></span><span class="anchor" id="line-213"></span><span class="anchor" id="line-214"></span><span class="anchor" id="line-215"></span><span class="anchor" id="line-216"></span><span class="anchor" id="line-217"></span><span class="anchor" id="line-218"></span><span class="anchor" id="line-219"></span><span class="anchor" id="line-220"></span><span class="anchor" id="line-221"></span><span class="anchor" id="line-222"></span></p><pre><span class="anchor" id="line-1-10"></span>oer:~/tmp/lmp5/gr1&gt; gdb a.out
<span class="anchor" id="line-2-5"></span>GNU gdb (GDB) SUSE (6.8.91.20090930-2.4)
<span class="anchor" id="line-3-5"></span>Copyright (C) 2009 Free Software Foundation, Inc.
<span class="anchor" id="line-4-4"></span>License GPLv3+: GNU GPL version 3 or later &lt;http://gnu.org/licenses/gpl.html&gt;
<span class="anchor" id="line-5-3"></span>This is free software: you are free to change and redistribute it.
<span class="anchor" id="line-6-2"></span>There is NO WARRANTY, to the extent permitted by law.  Type "show copying"
<span class="anchor" id="line-7-2"></span>and "show warranty" for details.
<span class="anchor" id="line-8-1"></span>This GDB was configured as "x86_64-suse-linux".
<span class="anchor" id="line-9"></span>For bug reporting instructions, please see:
<span class="anchor" id="line-10"></span>&lt;http://www.gnu.org/software/gdb/bugs/&gt;...
<span class="anchor" id="line-11"></span>Reading symbols from /home/jstar/tmp/lmp5/gr1/a.out...done.
<span class="anchor" id="line-12"></span>(gdb) help
<span class="anchor" id="line-13"></span>List of classes of commands:
<span class="anchor" id="line-14"></span>
<span class="anchor" id="line-15"></span>aliases -- Aliases of other commands
<span class="anchor" id="line-16"></span>breakpoints -- Making program stop at certain points
<span class="anchor" id="line-17"></span>data -- Examining data
<span class="anchor" id="line-18"></span>files -- Specifying and examining files
<span class="anchor" id="line-19"></span>internals -- Maintenance commands
<span class="anchor" id="line-20"></span>obscure -- Obscure features
<span class="anchor" id="line-21"></span>running -- Running the program
<span class="anchor" id="line-22"></span>stack -- Examining the stack
<span class="anchor" id="line-23"></span>status -- Status inquiries
<span class="anchor" id="line-24"></span>support -- Support facilities
<span class="anchor" id="line-25"></span>tracepoints -- Tracing of program execution without stopping the program
<span class="anchor" id="line-26"></span>user-defined -- User-defined commands
<span class="anchor" id="line-27"></span>
<span class="anchor" id="line-28"></span>Type "help" followed by a class name for a list of commands in that class.
<span class="anchor" id="line-29"></span>Type "help all" for the list of all commands.
<span class="anchor" id="line-30"></span>Type "help" followed by command name for full documentation.
<span class="anchor" id="line-31"></span>Type "apropos word" to search for commands related to "word".
<span class="anchor" id="line-32"></span>Command name abbreviations are allowed if unambiguous.
<span class="anchor" id="line-33"></span>(gdb)</pre><span class="anchor" id="line-223"></span><span class="anchor" id="line-224"></span><p class="line874">Ustawiamy
 zatrzymywanie programu po każdej instrukcji funkcji main i uruchamiamy 
go (zwróćmy uwagę na to, że argumenty linii poleceń podajemy po 
komendzie run): <span class="anchor" id="line-225"></span><span class="anchor" id="line-226"></span><span class="anchor" id="line-227"></span><span class="anchor" id="line-228"></span><span class="anchor" id="line-229"></span><span class="anchor" id="line-230"></span><span class="anchor" id="line-231"></span><span class="anchor" id="line-232"></span><span class="anchor" id="line-233"></span></p><pre><span class="anchor" id="line-1-11"></span>(gdb) break main
<span class="anchor" id="line-2-6"></span>Breakpoint 1 at 0x4008c8: file test.c, line 19.
<span class="anchor" id="line-3-6"></span>(gdb) run 10
<span class="anchor" id="line-4-5"></span>Starting program: /home/jstar/tmp/lmp5/gr1/a.out 10
<span class="anchor" id="line-5-4"></span>Breakpoint 1, main (argc=2, argv=0x7fffffffdca8) at test.c:19
<span class="anchor" id="line-6-3"></span>19              int n= argc &gt; 1 ? atoi( argv[1] ) : 1000;
<span class="anchor" id="line-7-3"></span>(gdb)</pre><span class="anchor" id="line-234"></span><span class="anchor" id="line-235"></span><p class="line874">Przechodzimy do następnej linii i sprawdzamy, czy prawidłowo odczytana została wartość argumentu z linii poleceń: <span class="anchor" id="line-236"></span><span class="anchor" id="line-237"></span><span class="anchor" id="line-238"></span><span class="anchor" id="line-239"></span><span class="anchor" id="line-240"></span><span class="anchor" id="line-241"></span><span class="anchor" id="line-242"></span></p><pre><span class="anchor" id="line-1-12"></span>(gdb) next
<span class="anchor" id="line-2-7"></span>22              double *v= malloc( n * sizeof *v );
<span class="anchor" id="line-3-7"></span>(gdb) p n
<span class="anchor" id="line-4-6"></span>$3 = 10
<span class="anchor" id="line-5-5"></span>(gdb)</pre><span class="anchor" id="line-243"></span><span class="anchor" id="line-244"></span><p class="line874">Ponieważ
 zbliżamy się do pętli, która będzie wykonywana 10 razy i nie mamy 
ochoty pisać 20 razy ,,next", a więc sprawdzamy, czy komenda ta może byc
 użyta do wykonania więcej, niż jednej instrukcji programu: <span class="anchor" id="line-245"></span><span class="anchor" id="line-246"></span><span class="anchor" id="line-247"></span><span class="anchor" id="line-248"></span><span class="anchor" id="line-249"></span><span class="anchor" id="line-250"></span><span class="anchor" id="line-251"></span><span class="anchor" id="line-252"></span></p><pre><span class="anchor" id="line-1-13"></span>(gdb) help next
<span class="anchor" id="line-2-8"></span>Step program, proceeding through subroutine calls.
<span class="anchor" id="line-3-8"></span>Like the "step" command as long as subroutine calls do not happen;
<span class="anchor" id="line-4-7"></span>when they do, the call is treated as one instruction.
<span class="anchor" id="line-5-6"></span>Argument N means do this N times (or till program stops for another reason).
<span class="anchor" id="line-6-4"></span>(gdb)</pre><span class="anchor" id="line-253"></span><span class="anchor" id="line-254"></span><p class="line874">Wykorzystujemy zdobytą wiedzę do przesunięcia się na koniec pętli (n to skrótowa wersja komendy next): <span class="anchor" id="line-255"></span><span class="anchor" id="line-256"></span><span class="anchor" id="line-257"></span><span class="anchor" id="line-258"></span><span class="anchor" id="line-259"></span><span class="anchor" id="line-260"></span><span class="anchor" id="line-261"></span></p><pre><span class="anchor" id="line-1-14"></span>(gdb) n 21
<span class="anchor" id="line-2-9"></span>30              printv( v, n );
<span class="anchor" id="line-3-9"></span>(gdb) p i
<span class="anchor" id="line-4-8"></span>$5 = 10
<span class="anchor" id="line-5-7"></span>(gdb)</pre><span class="anchor" id="line-262"></span><span class="anchor" id="line-263"></span><p class="line874">Kolejne
 polecenie n przeniesie nas za funkcję printv (gdybyśmy chcieli ,,wejść 
do kodu" tej funkcji, należałoby użyć polecenia step - lub s): <span class="anchor" id="line-264"></span><span class="anchor" id="line-265"></span><span class="anchor" id="line-266"></span><span class="anchor" id="line-267"></span><span class="anchor" id="line-268"></span><span class="anchor" id="line-269"></span></p><pre><span class="anchor" id="line-1-15"></span>(gdb) n
<span class="anchor" id="line-2-10"></span>Wygenerowany wektor: [ -1.1978 4.37923 -0.245998 -0.374274 -6.2296 -3.21673 7.53597 -7.75684 -0.161619 -2.96828 ]
<span class="anchor" id="line-3-10"></span>32              insort( v, n );
<span class="anchor" id="line-4-9"></span>(gdb)</pre><span class="anchor" id="line-270"></span><span class="anchor" id="line-271"></span><p class="line874">Kolejnym poleceniem próbujemy ,,przeskoczyć" funkcję insort i... <span class="anchor" id="line-272"></span><span class="anchor" id="line-273"></span><span class="anchor" id="line-274"></span><span class="anchor" id="line-275"></span><span class="anchor" id="line-276"></span><span class="anchor" id="line-277"></span><span class="anchor" id="line-278"></span><span class="anchor" id="line-279"></span></p><pre><span class="anchor" id="line-1-16"></span>(gdb)
<span class="anchor" id="line-2-11"></span>
<span class="anchor" id="line-3-11"></span>Program received signal SIGSEGV, Segmentation fault.
<span class="anchor" id="line-4-10"></span>0x00000000004007a8 in insort (v=0x602010, n=10) at insort.c:8
<span class="anchor" id="line-5-8"></span>8           double tmp = v[j];
<span class="anchor" id="line-6-5"></span>(gdb)</pre><span class="anchor" id="line-280"></span><span class="anchor" id="line-281"></span><p class="line862">Widzimy, że program wykonał niedoswoloną operację (<em>Segmentation fault</em>
 czyli ,,mazanie po pamięci") w ósmej linii pliku insort.c. Aby 
zdiagnozować sytuację dokładniej, uruchomimy program jeszcze raz od 
początku. <span class="anchor" id="line-282"></span>Usuwamy stare ,,breakpointy": <span class="anchor" id="line-283"></span><span class="anchor" id="line-284"></span><span class="anchor" id="line-285"></span><span class="anchor" id="line-286"></span><span class="anchor" id="line-287"></span></p><pre><span class="anchor" id="line-1-17"></span>(gdb) delete break
<span class="anchor" id="line-2-12"></span>Delete all breakpoints? (y or n) y
<span class="anchor" id="line-3-12"></span>(gdb)</pre><span class="anchor" id="line-288"></span><p class="line874">i uruchamiamy ponownie: <span class="anchor" id="line-289"></span><span class="anchor" id="line-290"></span><span class="anchor" id="line-291"></span><span class="anchor" id="line-292"></span><span class="anchor" id="line-293"></span><span class="anchor" id="line-294"></span><span class="anchor" id="line-295"></span><span class="anchor" id="line-296"></span><span class="anchor" id="line-297"></span><span class="anchor" id="line-298"></span><span class="anchor" id="line-299"></span><span class="anchor" id="line-300"></span></p><pre><span class="anchor" id="line-1-18"></span>(gdb) run 10
<span class="anchor" id="line-2-13"></span>The program being debugged has been started already.
<span class="anchor" id="line-3-13"></span>Start it from the beginning? (y or n) y
<span class="anchor" id="line-4-11"></span>Starting program: /home/jstar/tmp/lmp5/gr1/a.out 10
<span class="anchor" id="line-5-9"></span>Wygenerowany wektor: [ -0.969184 -3.55095 -6.55481 -5.84094 -3.20608 2.03404 -8.70428 -1.95726 5.92311 -2.13613 ]
<span class="anchor" id="line-6-6"></span>
<span class="anchor" id="line-7-4"></span>Program received signal SIGSEGV, Segmentation fault.
<span class="anchor" id="line-8-2"></span>0x00000000004007a8 in insort (v=0x602010, n=10) at insort.c:8
<span class="anchor" id="line-9-1"></span>8           double tmp = v[j];
<span class="anchor" id="line-10-1"></span>(gdb)</pre><span class="anchor" id="line-301"></span><span class="anchor" id="line-302"></span><p class="line874">Widzimy,
 że tym razem niekontrolowany program od razu doszedł do (zapewne 
błędnej) linii 8 w pliku insort.c i ponownie próbował uzyskać dostęp do 
zabronionego adresu. Błąd jest, jak widać, powtarzalny (to bardzo 
ułatwia jego lokalizację). Uruchamiamy program po raz trzeci, ale 
wcześniej zmusimy debugger do zatrzymywania się przed wykonywaniem 
instrukcji w funkcji insort: <span class="anchor" id="line-303"></span><span class="anchor" id="line-304"></span><span class="anchor" id="line-305"></span><span class="anchor" id="line-306"></span><span class="anchor" id="line-307"></span><span class="anchor" id="line-308"></span><span class="anchor" id="line-309"></span><span class="anchor" id="line-310"></span><span class="anchor" id="line-311"></span><span class="anchor" id="line-312"></span><span class="anchor" id="line-313"></span></p><pre><span class="anchor" id="line-1-19"></span>(gdb) run 10
<span class="anchor" id="line-2-14"></span>The program being debugged has been started already.
<span class="anchor" id="line-3-14"></span>Start it from the beginning? (y or n) y
<span class="anchor" id="line-4-12"></span>Starting program: /home/jstar/tmp/lmp5/gr1/a.out 10
<span class="anchor" id="line-5-10"></span>Wygenerowany wektor: [ 1.79327 6.07372 8.12923 8.54245 8.10269 1.1992 -1.50055 -4.0823 9.37633 2.35013 ]
<span class="anchor" id="line-6-7"></span>
<span class="anchor" id="line-7-5"></span>Breakpoint 2, insort (v=0x602010, n=10) at insort.c:7
<span class="anchor" id="line-8-3"></span>7         for (i = 1; i &lt; n; i++) {
<span class="anchor" id="line-9-2"></span>(gdb)</pre><span class="anchor" id="line-314"></span><p class="line874">Program
 został teraz zatrzymany przed wejściem do głównej pętli funkcji 
sortującej. Wchodzimy do tej pętli i sprawdzamy wartość indeksu tablicy 
używanego tam: <span class="anchor" id="line-315"></span><span class="anchor" id="line-316"></span><span class="anchor" id="line-317"></span><span class="anchor" id="line-318"></span><span class="anchor" id="line-319"></span><span class="anchor" id="line-320"></span><span class="anchor" id="line-321"></span></p><pre><span class="anchor" id="line-1-20"></span>(gdb) n
<span class="anchor" id="line-2-15"></span>8           double tmp = v[j];
<span class="anchor" id="line-3-15"></span>(gdb) p j
<span class="anchor" id="line-4-13"></span>$6 = 32767
<span class="anchor" id="line-5-11"></span>(gdb)</pre><span class="anchor" id="line-322"></span><p class="line874">Wartość
 32767 jest, z naszego punktu wodzenia, przypadkowa - nasz wektor składa
 się z 10 elementów, a więc dopuszczalne wartości indeksów leżą w 
przedziale [0...9]. Po chwili namysłu (albo i wcześniej) dochodzimy do 
wniosku, że zmienna tmp powinna być przecież inicjowana wartością v[i] a
 nie v[j] - to jest właśnie błąd, który znaleźliśmy. Możemy opuścić 
debuger: <span class="anchor" id="line-323"></span><span class="anchor" id="line-324"></span><span class="anchor" id="line-325"></span><span class="anchor" id="line-326"></span><span class="anchor" id="line-327"></span><span class="anchor" id="line-328"></span><span class="anchor" id="line-329"></span><span class="anchor" id="line-330"></span><span class="anchor" id="line-331"></span></p><pre><span class="anchor" id="line-1-21"></span>(gdb) quit
<span class="anchor" id="line-2-16"></span>A debugging session is active.
<span class="anchor" id="line-3-16"></span>
<span class="anchor" id="line-4-14"></span>        Inferior 3 [process 15997] will be killed.
<span class="anchor" id="line-5-12"></span>
<span class="anchor" id="line-6-8"></span>Quit anyway? (y or n) y
<span class="anchor" id="line-7-6"></span>oer:~/tmp/lmp5/gr1&gt;</pre><span class="anchor" id="line-332"></span><span class="anchor" id="line-333"></span><p class="line874">Poprawiamy program, kompilujemy, uruchamiamy ponownie i... <span class="anchor" id="line-334"></span><span class="anchor" id="line-335"></span><span class="anchor" id="line-336"></span><span class="anchor" id="line-337"></span><span class="anchor" id="line-338"></span><span class="anchor" id="line-339"></span></p><pre><span class="anchor" id="line-1-22"></span>oer:~/tmp/lmp5/gr1&gt; cc -ggdb insort.c -DMAX_ELEM_2_PRINT=16 test.c
<span class="anchor" id="line-2-17"></span>oer:~/tmp/lmp5/gr1&gt; ./a.out 10
<span class="anchor" id="line-3-17"></span>Wygenerowany wektor: [ 9.78929 -2.71147 3.41612 -0.353085 -5.64247 2.70303 -8.44685 4.41659 -4.45201 -2.80339 ]
<span class="anchor" id="line-4-15"></span>[1]    16012 segmentation fault  ./a.out 10</pre><span class="anchor" id="line-340"></span><p class="line874">...dalej źle, ale czy w tym samym miejscu? Używamy debuggera, aby to sprawdzić: <span class="anchor" id="line-341"></span><span class="anchor" id="line-342"></span><span class="anchor" id="line-343"></span><span class="anchor" id="line-344"></span><span class="anchor" id="line-345"></span><span class="anchor" id="line-346"></span><span class="anchor" id="line-347"></span><span class="anchor" id="line-348"></span><span class="anchor" id="line-349"></span><span class="anchor" id="line-350"></span><span class="anchor" id="line-351"></span><span class="anchor" id="line-352"></span><span class="anchor" id="line-353"></span><span class="anchor" id="line-354"></span><span class="anchor" id="line-355"></span><span class="anchor" id="line-356"></span><span class="anchor" id="line-357"></span><span class="anchor" id="line-358"></span><span class="anchor" id="line-359"></span><span class="anchor" id="line-360"></span><span class="anchor" id="line-361"></span></p><pre><span class="anchor" id="line-1-23"></span>oer:~/tmp/lmp5/gr1&gt; gdb a.out
<span class="anchor" id="line-2-18"></span>GNU gdb (GDB) SUSE (6.8.91.20090930-2.4)
<span class="anchor" id="line-3-18"></span>Copyright (C) 2009 Free Software Foundation, Inc.
<span class="anchor" id="line-4-16"></span>License GPLv3+: GNU GPL version 3 or later &lt;http://gnu.org/licenses/gpl.html&gt;
<span class="anchor" id="line-5-13"></span>This is free software: you are free to change and redistribute it.
<span class="anchor" id="line-6-9"></span>There is NO WARRANTY, to the extent permitted by law.  Type "show copying"
<span class="anchor" id="line-7-7"></span>and "show warranty" for details.
<span class="anchor" id="line-8-4"></span>This GDB was configured as "x86_64-suse-linux".
<span class="anchor" id="line-9-3"></span>For bug reporting instructions, please see:
<span class="anchor" id="line-10-2"></span>&lt;http://www.gnu.org/software/gdb/bugs/&gt;...
<span class="anchor" id="line-11-1"></span>Reading symbols from /home/jstar/tmp/lmp5/gr1/a.out...done.
<span class="anchor" id="line-12-1"></span>(gdb) run
<span class="anchor" id="line-13-1"></span>Starting program: /home/jstar/tmp/lmp5/gr1/a.out
<span class="anchor" id="line-14-1"></span>Wygenerowany wektor: [ 238.989 -87.1895 -413.973 781.375 506.871 151.881 655.411 -996.003 -941.633 350.069 476.9 -119.813 710.08 -856.707 463.277 -344.718 ...  ]
<span class="anchor" id="line-15-1"></span>
<span class="anchor" id="line-16-1"></span>Program received signal SIGSEGV, Segmentation fault.
<span class="anchor" id="line-17-1"></span>0x00000000004007dc in insort (v=0x602010, n=1000) at insort.c:10
<span class="anchor" id="line-18-1"></span>10            v[j+1] = v[j];
<span class="anchor" id="line-19-1"></span>(gdb)</pre><span class="anchor" id="line-362"></span><span class="anchor" id="line-363"></span><p class="line874">Okazuje
 się, że jest to inny błąd, który możemy lepiej zrozumieć używając 
opisanego powyżej sposobu postępowania (zatrzymanie przed linią 10 pliku
 insort.c i sprawdzenie wartości indeksów). <span class="anchor" id="line-364"></span>Pozostawiamy to jednak Państwu do samodzielnego wykonania. <span class="anchor" id="line-365"></span><span class="anchor" id="line-366"></span><span class="anchor" id="line-367"></span></p><p class="line874">Przejdźmy teraz do prezentacji kolejnego algorytmu. <span class="anchor" id="line-368"></span><span class="anchor" id="line-369"></span></p><p class="line867"><strong>Sortowanie szybkie - Quick Sort (qsort)</strong> <span class="anchor" id="line-370"></span><span class="anchor" id="line-371"></span></p><p class="line874">Sortowanie
 szybkie to algorytm, który najłatwiej jest zrozumieć analizując jego 
wersję rekurencyjną. Jej zasadniczy kod jest bardzo prosty (a diabeł 
tkwi, niestety, w szczegółach). <span class="anchor" id="line-372"></span>Rozważmy ten sam wektor przykładowy: <span class="anchor" id="line-373"></span><span class="anchor" id="line-374"></span></p><p class="line874">v= [ 3.0, 2.1, 1.4, 4.6, 7.7, 5.8, 6.1 ] <span class="anchor" id="line-375"></span><span class="anchor" id="line-376"></span></p><p class="line874">Każdy rekurencyjny krok algorytmu qsort składa się z trzech faz: <span class="anchor" id="line-377"></span></p><ol type="1"><li>Podział
 wektora na elementy mniejsze i większe od wybranego - dla prostoty 
użyjmy pierwszego elementu jako ,,wybranego" - co w powyższym 
przykładzie prowadzi do sytuacji: <span class="anchor" id="line-378"></span><ul><li style="list-style-type:none">v = [ 2.1, 1.4, 3.0, 7.7, 4.6, 5.8, 6.1 ] <span class="anchor" id="line-379"></span></li></ul></li><li>Zastosowanie algorytmu qsort dla pierwszego podwektora: <span class="anchor" id="line-380"></span><ul><li style="list-style-type:none">qsort( [2.1, 1.4] ) <span class="anchor" id="line-381"></span></li></ul></li><li>Zatosowanie algorytmu qsort dla drugiepo podwektora: <span class="anchor" id="line-382"></span><ul><li style="list-style-type:none">qsort( [7.7, 4.6, 5.8, 6.1 ] ) <span class="anchor" id="line-383"></span><span class="anchor" id="line-384"></span></li></ul></li></ol><p class="line874">co możemy zapisać w postaci następującej funkcji (qsort_rec): <span class="anchor" id="line-385"></span><span class="anchor" id="line-386"></span><span class="anchor" id="line-387"></span><span class="anchor" id="line-388"></span><span class="anchor" id="line-389"></span><span class="anchor" id="line-390"></span><span class="anchor" id="line-391"></span><span class="anchor" id="line-392"></span><span class="anchor" id="line-393"></span><span class="anchor" id="line-394"></span><span class="anchor" id="line-395"></span><span class="anchor" id="line-396"></span><span class="anchor" id="line-397"></span><span class="anchor" id="line-398"></span><span class="anchor" id="line-399"></span><span class="anchor" id="line-400"></span><span class="anchor" id="line-401"></span><span class="anchor" id="line-402"></span><span class="anchor" id="line-403"></span><span class="anchor" id="line-404"></span><span class="anchor" id="line-1-6"></span></p><div class="highlight cpp"><div class="codearea" dir="ltr" lang="en">
<script type="text/javascript">
document.write('<a href="#" onclick="return togglenumber(\'CA-e9c4ee1e462b4b7dbb38192999c6f85b19d54730\', 1, 1);" \
                class="codenumbers">Toggle line numbers<\/a>');
</script><a href="#" onclick="return togglenumber('CA-e9c4ee1e462b4b7dbb38192999c6f85b19d54730', 1, 1);" class="codenumbers">Toggle line numbers</a>
<pre dir="ltr" id="CA-e9c4ee1e462b4b7dbb38192999c6f85b19d54730" lang="en"><span class="line"><span class="LineNumber"><a href="#CA-e9c4ee1e462b4b7dbb38192999c6f85b19d54730_1">   1</a> </span><span class="LineAnchor" id="CA-e9c4ee1e462b4b7dbb38192999c6f85b19d54730_1"></span><span class="anchor" id="line-1-7"></span><span class="Preprc">#</span><span class="Preprc"> include "q_sort.h"</span><span class="Preprc"></span></span>
<span class="line"><span class="LineNumber"><a href="#CA-e9c4ee1e462b4b7dbb38192999c6f85b19d54730_2">   2</a> </span><span class="LineAnchor" id="CA-e9c4ee1e462b4b7dbb38192999c6f85b19d54730_2"></span><span class="anchor" id="line-2-3"></span><span class="Preprc"></span></span>
<span class="line"><span class="LineNumber"><a href="#CA-e9c4ee1e462b4b7dbb38192999c6f85b19d54730_3">   3</a> </span><span class="LineAnchor" id="CA-e9c4ee1e462b4b7dbb38192999c6f85b19d54730_3"></span><span class="anchor" id="line-3-3"></span><span class="ResWord">int</span> <span class="ID">divide</span>( <span class="ResWord">double</span> <span class="ID">v</span>[], <span class="ResWord">int</span> <span class="ID">f</span>, <span class="ResWord">int</span> <span class="ID">l</span> ); <span class="Comment">// zajmiemy się tym za chwilę</span></span>
<span class="line"><span class="LineNumber"><a href="#CA-e9c4ee1e462b4b7dbb38192999c6f85b19d54730_4">   4</a> </span><span class="LineAnchor" id="CA-e9c4ee1e462b4b7dbb38192999c6f85b19d54730_4"></span><span class="anchor" id="line-4-3"></span><span class="Comment"></span></span>
<span class="line"><span class="LineNumber"><a href="#CA-e9c4ee1e462b4b7dbb38192999c6f85b19d54730_5">   5</a> </span><span class="LineAnchor" id="CA-e9c4ee1e462b4b7dbb38192999c6f85b19d54730_5"></span><span class="anchor" id="line-5-3"></span><span class="ResWord">void</span> <span class="ID">qsort_rec</span>( <span class="ResWord">double</span> <span class="ID">v</span>[], <span class="ResWord">int</span> <span class="ID">first</span>, <span class="ResWord">int</span> <span class="ID">last</span> ) {</span>
<span class="line"><span class="LineNumber"><a href="#CA-e9c4ee1e462b4b7dbb38192999c6f85b19d54730_6">   6</a> </span><span class="LineAnchor" id="CA-e9c4ee1e462b4b7dbb38192999c6f85b19d54730_6"></span><span class="anchor" id="line-6-3"></span>                <span class="Comment">// wygodniej jest zapisać tę funkcję rekurencyjną</span></span>
<span class="line"><span class="LineNumber"><a href="#CA-e9c4ee1e462b4b7dbb38192999c6f85b19d54730_7">   7</a> </span><span class="LineAnchor" id="CA-e9c4ee1e462b4b7dbb38192999c6f85b19d54730_7"></span><span class="anchor" id="line-7-3"></span><span class="Comment"></span>                <span class="Comment">// posługując się indeksem początku i końca wektora</span></span>
<span class="line"><span class="LineNumber"><a href="#CA-e9c4ee1e462b4b7dbb38192999c6f85b19d54730_8">   8</a> </span><span class="LineAnchor" id="CA-e9c4ee1e462b4b7dbb38192999c6f85b19d54730_8"></span><span class="anchor" id="line-8-3"></span><span class="Comment"></span>   <span class="ResWord">if</span>( <span class="ID">first</span> &lt; <span class="ID">last</span> ) {</span>
<span class="line"><span class="LineNumber"><a href="#CA-e9c4ee1e462b4b7dbb38192999c6f85b19d54730_9">   9</a> </span><span class="LineAnchor" id="CA-e9c4ee1e462b4b7dbb38192999c6f85b19d54730_9"></span><span class="anchor" id="line-9-3"></span>      <span class="ResWord">int</span> <span class="ID">m</span>= <span class="ID">divide</span>( <span class="ID">v</span>, <span class="ID">first</span>, <span class="ID">last</span> );</span>
<span class="line"><span class="LineNumber"><a href="#CA-e9c4ee1e462b4b7dbb38192999c6f85b19d54730_10">  10</a> </span><span class="LineAnchor" id="CA-e9c4ee1e462b4b7dbb38192999c6f85b19d54730_10"></span><span class="anchor" id="line-10-3"></span>      <span class="ID">qsort_rec</span>( <span class="ID">v</span>, <span class="ID">first</span>, <span class="ID">m</span>-<span class="Number">1</span> );</span>
<span class="line"><span class="LineNumber"><a href="#CA-e9c4ee1e462b4b7dbb38192999c6f85b19d54730_11">  11</a> </span><span class="LineAnchor" id="CA-e9c4ee1e462b4b7dbb38192999c6f85b19d54730_11"></span><span class="anchor" id="line-11-3"></span>      <span class="ID">qsort_rec</span>( <span class="ID">v</span>, <span class="ID">m</span>+<span class="Number">1</span>, <span class="ID">last</span> );</span>
<span class="line"><span class="LineNumber"><a href="#CA-e9c4ee1e462b4b7dbb38192999c6f85b19d54730_12">  12</a> </span><span class="LineAnchor" id="CA-e9c4ee1e462b4b7dbb38192999c6f85b19d54730_12"></span><span class="anchor" id="line-12-3"></span>   }</span>
<span class="line"><span class="LineNumber"><a href="#CA-e9c4ee1e462b4b7dbb38192999c6f85b19d54730_13">  13</a> </span><span class="LineAnchor" id="CA-e9c4ee1e462b4b7dbb38192999c6f85b19d54730_13"></span><span class="anchor" id="line-13-3"></span>}</span>
<span class="line"><span class="LineNumber"><a href="#CA-e9c4ee1e462b4b7dbb38192999c6f85b19d54730_14">  14</a> </span><span class="LineAnchor" id="CA-e9c4ee1e462b4b7dbb38192999c6f85b19d54730_14"></span><span class="anchor" id="line-14-2"></span></span>
<span class="line"><span class="LineNumber"><a href="#CA-e9c4ee1e462b4b7dbb38192999c6f85b19d54730_15">  15</a> </span><span class="LineAnchor" id="CA-e9c4ee1e462b4b7dbb38192999c6f85b19d54730_15"></span><span class="anchor" id="line-15-2"></span><span class="ResWord">void</span> <span class="ID">q_sort</span>( <span class="ResWord">double</span> <span class="ID">v</span>[], <span class="ResWord">int</span> <span class="ID">n</span> ) {  <span class="Comment">// to jest tylko opakowanie, aby wywołanie</span></span>
<span class="line"><span class="LineNumber"><a href="#CA-e9c4ee1e462b4b7dbb38192999c6f85b19d54730_16">  16</a> </span><span class="LineAnchor" id="CA-e9c4ee1e462b4b7dbb38192999c6f85b19d54730_16"></span><span class="anchor" id="line-16-2"></span><span class="Comment"></span>                                   <span class="Comment">// wyglądało tak samo, jak insort</span></span>
<span class="line"><span class="LineNumber"><a href="#CA-e9c4ee1e462b4b7dbb38192999c6f85b19d54730_17">  17</a> </span><span class="LineAnchor" id="CA-e9c4ee1e462b4b7dbb38192999c6f85b19d54730_17"></span><span class="anchor" id="line-17-2"></span><span class="Comment"></span>   <span class="ID">qsort_rec</span>( <span class="ID">v</span>, <span class="Number">0</span>, <span class="ID">n</span>-<span class="Number">1</span> );</span>
<span class="line"><span class="LineNumber"><a href="#CA-e9c4ee1e462b4b7dbb38192999c6f85b19d54730_18">  18</a> </span><span class="LineAnchor" id="CA-e9c4ee1e462b4b7dbb38192999c6f85b19d54730_18"></span><span class="anchor" id="line-18-2"></span>}</span>
</pre></div></div><span class="anchor" id="line-405"></span><span class="anchor" id="line-406"></span><p class="line867"><em>Uwaga:
 nasza funkcja-opakowanie upodobniająca wywołanie qsort_rec do wywołania
 funkcji insort nazywa się q_sort dlatego, że w bibliotece standardowej 
języka C znajduje się funkcja qsort pozwalająca sortować algorytmem 
szybkim wektory o dowolnej zawartości.</em> <span class="anchor" id="line-407"></span><span class="anchor" id="line-408"></span></p><p class="line874">Napiszmy
 teraz funkcję rozdzielającą wektor według pierwszego elementu. 
Podobnie, jak poprzednio, nie jest to funkcja poprawna, a zadaniem 
Państwa będzie znalezienie i poprawienie błędów. Idea jest prosta: 
używamy dwóch indeksów, z których jeden (f) posuwa się do początku, a 
drugi (l) od końca wektora. Indeks f pomija elementy mniejsze od 
pierwszego, a l - elementy większe. Jeśli po takich operacja indeksy f i
 l są różne, to znaczy, że należy zamienić miejscami elementy v[f] i 
v[l], po czym kontynuować operację sprawdzania: <span class="anchor" id="line-409"></span><span class="anchor" id="line-410"></span><span class="anchor" id="line-411"></span><span class="anchor" id="line-412"></span><span class="anchor" id="line-413"></span><span class="anchor" id="line-414"></span><span class="anchor" id="line-415"></span><span class="anchor" id="line-416"></span><span class="anchor" id="line-417"></span><span class="anchor" id="line-418"></span><span class="anchor" id="line-419"></span><span class="anchor" id="line-420"></span><span class="anchor" id="line-421"></span><span class="anchor" id="line-422"></span><span class="anchor" id="line-423"></span><span class="anchor" id="line-424"></span><span class="anchor" id="line-425"></span><span class="anchor" id="line-426"></span><span class="anchor" id="line-427"></span><span class="anchor" id="line-428"></span><span class="anchor" id="line-429"></span><span class="anchor" id="line-430"></span><span class="anchor" id="line-431"></span><span class="anchor" id="line-432"></span><span class="anchor" id="line-433"></span><span class="anchor" id="line-1-8"></span></p><div class="highlight cpp"><div class="codearea" dir="ltr" lang="en">
<script type="text/javascript">
document.write('<a href="#" onclick="return togglenumber(\'CA-5dee1e769ceee8a5b23bc48fa15f4d4ec67ca647\', 1, 1);" \
                class="codenumbers">Toggle line numbers<\/a>');
</script><a href="#" onclick="return togglenumber('CA-5dee1e769ceee8a5b23bc48fa15f4d4ec67ca647', 1, 1);" class="codenumbers">Toggle line numbers</a>
<pre dir="ltr" id="CA-5dee1e769ceee8a5b23bc48fa15f4d4ec67ca647" lang="en"><span class="line"><span class="LineNumber"><a href="#CA-5dee1e769ceee8a5b23bc48fa15f4d4ec67ca647_1">   1</a> </span><span class="LineAnchor" id="CA-5dee1e769ceee8a5b23bc48fa15f4d4ec67ca647_1"></span><span class="anchor" id="line-1-9"></span><span class="ResWord">int</span> <span class="ID">divide</span>( <span class="ResWord">double</span> <span class="ID">v</span>[], <span class="ResWord">int</span> <span class="ID">f</span>, <span class="ResWord">int</span> <span class="ID">l</span> ) {</span>
<span class="line"><span class="LineNumber"><a href="#CA-5dee1e769ceee8a5b23bc48fa15f4d4ec67ca647_2">   2</a> </span><span class="LineAnchor" id="CA-5dee1e769ceee8a5b23bc48fa15f4d4ec67ca647_2"></span><span class="anchor" id="line-2-4"></span>  <span class="ResWord">double</span> <span class="ID">tmp</span>; <span class="Comment">// zmienna tymczasowa do zmiany elementów</span></span>
<span class="line"><span class="LineNumber"><a href="#CA-5dee1e769ceee8a5b23bc48fa15f4d4ec67ca647_3">   3</a> </span><span class="LineAnchor" id="CA-5dee1e769ceee8a5b23bc48fa15f4d4ec67ca647_3"></span><span class="anchor" id="line-3-4"></span><span class="Comment"></span>  <span class="ResWord">int</span> <span class="ID">s</span>= <span class="ID">f</span>;   <span class="Comment">// dzielimy ze względu na pierwszy element</span></span>
<span class="line"><span class="LineNumber"><a href="#CA-5dee1e769ceee8a5b23bc48fa15f4d4ec67ca647_4">   4</a> </span><span class="LineAnchor" id="CA-5dee1e769ceee8a5b23bc48fa15f4d4ec67ca647_4"></span><span class="anchor" id="line-4-4"></span><span class="Comment"></span>  <span class="ID">f</span>++;        <span class="Comment">// opuść pierwszy element</span></span>
<span class="line"><span class="LineNumber"><a href="#CA-5dee1e769ceee8a5b23bc48fa15f4d4ec67ca647_5">   5</a> </span><span class="LineAnchor" id="CA-5dee1e769ceee8a5b23bc48fa15f4d4ec67ca647_5"></span><span class="anchor" id="line-5-4"></span><span class="Comment"></span>  <span class="ResWord">while</span>( <span class="ID">f</span> &lt; <span class="ID">l</span> ) {</span>
<span class="line"><span class="LineNumber"><a href="#CA-5dee1e769ceee8a5b23bc48fa15f4d4ec67ca647_6">   6</a> </span><span class="LineAnchor" id="CA-5dee1e769ceee8a5b23bc48fa15f4d4ec67ca647_6"></span><span class="anchor" id="line-6-4"></span>    <span class="ResWord">while</span>( <span class="ID">f</span> &lt; <span class="ID">l</span> &amp;&amp; <span class="ID">v</span>[<span class="ID">f</span>] &lt; <span class="ID">v</span>[<span class="ID">s</span>] ) <span class="Comment">// przeskocz &lt; v[s]</span></span>
<span class="line"><span class="LineNumber"><a href="#CA-5dee1e769ceee8a5b23bc48fa15f4d4ec67ca647_7">   7</a> </span><span class="LineAnchor" id="CA-5dee1e769ceee8a5b23bc48fa15f4d4ec67ca647_7"></span><span class="anchor" id="line-7-4"></span><span class="Comment"></span>      <span class="ID">f</span>++;</span>
<span class="line"><span class="LineNumber"><a href="#CA-5dee1e769ceee8a5b23bc48fa15f4d4ec67ca647_8">   8</a> </span><span class="LineAnchor" id="CA-5dee1e769ceee8a5b23bc48fa15f4d4ec67ca647_8"></span><span class="anchor" id="line-8-4"></span>    <span class="ResWord">while</span>( <span class="ID">f</span> &lt; <span class="ID">l</span> &amp;&amp; <span class="ID">v</span>[<span class="ID">l</span>] &gt;= <span class="ID">v</span>[<span class="ID">s</span>] ) <span class="Comment">// przeskocz &gt;= v[s]</span></span>
<span class="line"><span class="LineNumber"><a href="#CA-5dee1e769ceee8a5b23bc48fa15f4d4ec67ca647_9">   9</a> </span><span class="LineAnchor" id="CA-5dee1e769ceee8a5b23bc48fa15f4d4ec67ca647_9"></span><span class="anchor" id="line-9-4"></span><span class="Comment"></span>      <span class="ID">l</span>--;</span>
<span class="line"><span class="LineNumber"><a href="#CA-5dee1e769ceee8a5b23bc48fa15f4d4ec67ca647_10">  10</a> </span><span class="LineAnchor" id="CA-5dee1e769ceee8a5b23bc48fa15f4d4ec67ca647_10"></span><span class="anchor" id="line-10-4"></span>    <span class="ResWord">if</span>( <span class="ID">f</span> &lt; <span class="ID">l</span> ) { <span class="Comment">// zamień v[f] i v[l], gdy są różne</span></span>
<span class="line"><span class="LineNumber"><a href="#CA-5dee1e769ceee8a5b23bc48fa15f4d4ec67ca647_11">  11</a> </span><span class="LineAnchor" id="CA-5dee1e769ceee8a5b23bc48fa15f4d4ec67ca647_11"></span><span class="anchor" id="line-11-4"></span><span class="Comment"></span>      <span class="ID">tmp</span>= <span class="ID">v</span>[<span class="ID">f</span>];</span>
<span class="line"><span class="LineNumber"><a href="#CA-5dee1e769ceee8a5b23bc48fa15f4d4ec67ca647_12">  12</a> </span><span class="LineAnchor" id="CA-5dee1e769ceee8a5b23bc48fa15f4d4ec67ca647_12"></span><span class="anchor" id="line-12-4"></span>      <span class="ID">v</span>[<span class="ID">f</span>]= <span class="ID">v</span>[<span class="ID">l</span>];</span>
<span class="line"><span class="LineNumber"><a href="#CA-5dee1e769ceee8a5b23bc48fa15f4d4ec67ca647_13">  13</a> </span><span class="LineAnchor" id="CA-5dee1e769ceee8a5b23bc48fa15f4d4ec67ca647_13"></span><span class="anchor" id="line-13-4"></span>      <span class="ID">v</span>[<span class="ID">l</span>]= <span class="ID">tmp</span>;</span>
<span class="line"><span class="LineNumber"><a href="#CA-5dee1e769ceee8a5b23bc48fa15f4d4ec67ca647_14">  14</a> </span><span class="LineAnchor" id="CA-5dee1e769ceee8a5b23bc48fa15f4d4ec67ca647_14"></span><span class="anchor" id="line-14-3"></span>    }</span>
<span class="line"><span class="LineNumber"><a href="#CA-5dee1e769ceee8a5b23bc48fa15f4d4ec67ca647_15">  15</a> </span><span class="LineAnchor" id="CA-5dee1e769ceee8a5b23bc48fa15f4d4ec67ca647_15"></span><span class="anchor" id="line-15-3"></span>  }</span>
<span class="line"><span class="LineNumber"><a href="#CA-5dee1e769ceee8a5b23bc48fa15f4d4ec67ca647_16">  16</a> </span><span class="LineAnchor" id="CA-5dee1e769ceee8a5b23bc48fa15f4d4ec67ca647_16"></span><span class="anchor" id="line-16-3"></span>  <span class="Comment">// zamieniamy element v[s] z v[f]</span></span>
<span class="line"><span class="LineNumber"><a href="#CA-5dee1e769ceee8a5b23bc48fa15f4d4ec67ca647_17">  17</a> </span><span class="LineAnchor" id="CA-5dee1e769ceee8a5b23bc48fa15f4d4ec67ca647_17"></span><span class="anchor" id="line-17-3"></span><span class="Comment"></span>  <span class="Comment">// aby v[s] znalazł się pomiędzy</span></span>
<span class="line"><span class="LineNumber"><a href="#CA-5dee1e769ceee8a5b23bc48fa15f4d4ec67ca647_18">  18</a> </span><span class="LineAnchor" id="CA-5dee1e769ceee8a5b23bc48fa15f4d4ec67ca647_18"></span><span class="anchor" id="line-18-3"></span><span class="Comment"></span>  <span class="Comment">// mniejszymi i nie-większymi od niego</span></span>
<span class="line"><span class="LineNumber"><a href="#CA-5dee1e769ceee8a5b23bc48fa15f4d4ec67ca647_19">  19</a> </span><span class="LineAnchor" id="CA-5dee1e769ceee8a5b23bc48fa15f4d4ec67ca647_19"></span><span class="anchor" id="line-19-2"></span><span class="Comment"></span>  <span class="ID">tmp</span> = <span class="ID">v</span>[<span class="ID">s</span>];</span>
<span class="line"><span class="LineNumber"><a href="#CA-5dee1e769ceee8a5b23bc48fa15f4d4ec67ca647_20">  20</a> </span><span class="LineAnchor" id="CA-5dee1e769ceee8a5b23bc48fa15f4d4ec67ca647_20"></span><span class="anchor" id="line-20-2"></span>  <span class="ID">v</span>[<span class="ID">s</span>] = <span class="ID">v</span>[<span class="ID">f</span>];</span>
<span class="line"><span class="LineNumber"><a href="#CA-5dee1e769ceee8a5b23bc48fa15f4d4ec67ca647_21">  21</a> </span><span class="LineAnchor" id="CA-5dee1e769ceee8a5b23bc48fa15f4d4ec67ca647_21"></span><span class="anchor" id="line-21-2"></span>  <span class="ID">v</span>[<span class="ID">f</span>] = <span class="ID">tmp</span>;</span>
<span class="line"><span class="LineNumber"><a href="#CA-5dee1e769ceee8a5b23bc48fa15f4d4ec67ca647_22">  22</a> </span><span class="LineAnchor" id="CA-5dee1e769ceee8a5b23bc48fa15f4d4ec67ca647_22"></span><span class="anchor" id="line-22-2"></span>  <span class="ResWord">return</span> <span class="ID">f</span>;</span>
<span class="line"><span class="LineNumber"><a href="#CA-5dee1e769ceee8a5b23bc48fa15f4d4ec67ca647_23">  23</a> </span><span class="LineAnchor" id="CA-5dee1e769ceee8a5b23bc48fa15f4d4ec67ca647_23"></span><span class="anchor" id="line-23-2"></span>}</span>
</pre></div></div><span class="anchor" id="line-434"></span><span class="anchor" id="line-435"></span><p class="line874">Po
 skompilowaniu i uruchomieniu otrzymujemy oczywiście informacje o 
błędnym sortowaniu - trudno oczekiwać innych wyników, skoro funkcja 
divide jest błędna: <span class="anchor" id="line-436"></span><span class="anchor" id="line-437"></span><span class="anchor" id="line-438"></span><span class="anchor" id="line-439"></span><span class="anchor" id="line-440"></span><span class="anchor" id="line-441"></span><span class="anchor" id="line-442"></span><span class="anchor" id="line-443"></span><span class="anchor" id="line-444"></span><span class="anchor" id="line-445"></span><span class="anchor" id="line-446"></span><span class="anchor" id="line-447"></span><span class="anchor" id="line-448"></span><span class="anchor" id="line-449"></span><span class="anchor" id="line-450"></span><span class="anchor" id="line-451"></span><span class="anchor" id="line-452"></span><span class="anchor" id="line-453"></span><span class="anchor" id="line-454"></span></p><pre><span class="anchor" id="line-1-24"></span>oer:~/tmp/lmp5/gr1&gt; cc -ggdb q_sort.c -DMAX_ELEM_2_PRINT=10 qtest.c
<span class="anchor" id="line-2-19"></span>oer:~/tmp/lmp5/gr1&gt; ./a.out 12
<span class="anchor" id="line-3-19"></span>Wygenerowany wektor: [ -11.4412 -2.52017 -8.29605 -0.217485 4.42139 10.7231 10.6983 -1.21285 -9.61173 10.3299 ...  ]
<span class="anchor" id="line-4-17"></span>Posortowany wektor: [ -2.52017 -11.4412 -9.61173 4.42139 -8.29605 10.6983 -7.83603 -0.217485 -1.21285 10.3299 ...  ]
<span class="anchor" id="line-5-14"></span>Zly algorytm sortowania: v[0]==-2.52017 &gt; v[1]==-11.4412
<span class="anchor" id="line-6-10"></span>Zly algorytm sortowania: v[3]==4.42139 &gt; v[4]==-8.29605
<span class="anchor" id="line-7-8"></span>Zly algorytm sortowania: v[5]==10.6983 &gt; v[6]==-7.83603
<span class="anchor" id="line-8-5"></span>Zly algorytm sortowania: v[7]==-0.217485 &gt; v[8]==-1.21285
<span class="anchor" id="line-9-4"></span>oer:~/tmp/lmp5/gr1&gt; ./a.out 12
<span class="anchor" id="line-10-3"></span>Wygenerowany wektor: [ -2.16123 -9.57884 -6.7345 -4.6326 -7.07104 -5.06879 9.11687 9.28155 5.19307 5.39595 ...  ]
<span class="anchor" id="line-11-2"></span>Posortowany wektor: [ -9.57884 -6.7345 -7.07104 -4.6326 -5.06879 9.11687 -2.16123 5.19307 -2.04108 7.89474 ...  ]
<span class="anchor" id="line-12-2"></span>Zly algorytm sortowania: v[1]==-6.7345 &gt; v[2]==-7.07104
<span class="anchor" id="line-13-2"></span>Zly algorytm sortowania: v[3]==-4.6326 &gt; v[4]==-5.06879
<span class="anchor" id="line-14-2"></span>Zly algorytm sortowania: v[5]==9.11687 &gt; v[6]==-2.16123
<span class="anchor" id="line-15-2"></span>Zly algorytm sortowania: v[7]==5.19307 &gt; v[8]==-2.04108
<span class="anchor" id="line-16-2"></span>Zly algorytm sortowania: v[9]==7.89474 &gt; v[10]==5.39595
<span class="anchor" id="line-17-2"></span>oer:~/tmp/lmp5/gr1&gt;</pre><span class="anchor" id="line-455"></span><span class="anchor" id="line-456"></span><p class="line867"><em>Uwaga:
 program qtest.c musicie Państwo napisac samodzielnie. Jest to zadanie 
trywialne - wystarczy skopiować test.c i poprawić w nim dwie linie, 
zmieniając insort na q_sort.</em> <span class="anchor" id="line-457"></span><span class="anchor" id="line-458"></span></p><p class="line874">Zwróćmy
 uwagę, że błędy nie są powtarzalne - zależą od zawartości (wartości 
elementów) sortowanego wektora. Powtarzalność możemy uzyskać inicjując 
generator liczb losowych ciągle tą samą wartością - służy do tego drugi 
argument z linii poleceń: <span class="anchor" id="line-459"></span><span class="anchor" id="line-460"></span><span class="anchor" id="line-461"></span><span class="anchor" id="line-462"></span><span class="anchor" id="line-463"></span><span class="anchor" id="line-464"></span><span class="anchor" id="line-465"></span><span class="anchor" id="line-466"></span><span class="anchor" id="line-467"></span><span class="anchor" id="line-468"></span><span class="anchor" id="line-469"></span><span class="anchor" id="line-470"></span><span class="anchor" id="line-471"></span><span class="anchor" id="line-472"></span><span class="anchor" id="line-473"></span><span class="anchor" id="line-474"></span><span class="anchor" id="line-475"></span><span class="anchor" id="line-476"></span><span class="anchor" id="line-477"></span></p><pre><span class="anchor" id="line-1-25"></span>oer:~/tmp/lmp5/gr1&gt; ./a.out 12 0
<span class="anchor" id="line-2-20"></span>Wygenerowany wektor: [ 4.82253 -0.674049 -2.02809 -0.187196 -10.6023 -0.293836 -7.77327 -3.81245 9.33297 -5.52361 ...  ]
<span class="anchor" id="line-3-20"></span>Posortowany wektor: [ -7.77327 -10.6023 -0.187196 -5.52361 -3.81245 -0.674049 -2.02809 3.46451 -0.293836 9.28765 ...  ]
<span class="anchor" id="line-4-18"></span>Zly algorytm sortowania: v[0]==-7.77327 &gt; v[1]==-10.6023
<span class="anchor" id="line-5-15"></span>Zly algorytm sortowania: v[2]==-0.187196 &gt; v[3]==-5.52361
<span class="anchor" id="line-6-11"></span>Zly algorytm sortowania: v[5]==-0.674049 &gt; v[6]==-2.02809
<span class="anchor" id="line-7-9"></span>Zly algorytm sortowania: v[7]==3.46451 &gt; v[8]==-0.293836
<span class="anchor" id="line-8-6"></span>Zly algorytm sortowania: v[9]==9.28765 &gt; v[10]==4.82253
<span class="anchor" id="line-9-5"></span>oer:~/tmp/lmp5/gr1&gt; ./a.out 12 0
<span class="anchor" id="line-10-4"></span>Wygenerowany wektor: [ 4.82253 -0.674049 -2.02809 -0.187196 -10.6023 -0.293836 -7.77327 -3.81245 9.33297 -5.52361 ...  ]
<span class="anchor" id="line-11-3"></span>Posortowany wektor: [ -7.77327 -10.6023 -0.187196 -5.52361 -3.81245 -0.674049 -2.02809 3.46451 -0.293836 9.28765 ...  ]
<span class="anchor" id="line-12-3"></span>Zly algorytm sortowania: v[0]==-7.77327 &gt; v[1]==-10.6023
<span class="anchor" id="line-13-3"></span>Zly algorytm sortowania: v[2]==-0.187196 &gt; v[3]==-5.52361
<span class="anchor" id="line-14-3"></span>Zly algorytm sortowania: v[5]==-0.674049 &gt; v[6]==-2.02809
<span class="anchor" id="line-15-3"></span>Zly algorytm sortowania: v[7]==3.46451 &gt; v[8]==-0.293836
<span class="anchor" id="line-16-3"></span>Zly algorytm sortowania: v[9]==9.28765 &gt; v[10]==4.82253
<span class="anchor" id="line-17-3"></span>oer:~/tmp/lmp5/gr1</pre><span class="anchor" id="line-478"></span><span class="anchor" id="line-479"></span><p class="line874">Poprawienie funkcji divide pozostawiamy Państwu do samodzielnego wykonania. <span class="anchor" id="line-480"></span><span class="anchor" id="line-481"></span></p><p class="line867">
</p><h5 id="Zaliczenie">Zaliczenie</h5>
<span class="anchor" id="line-482"></span><span class="anchor" id="line-483"></span><p class="line874">Przedstawienie raportu (odręcznych notatek opisujących testy, wykryte błędy i sposób ich poprawienia). <span class="anchor" id="line-484"></span><span class="anchor" id="line-485"></span><span class="anchor" id="line-486"></span></p><p class="line867"></p><hr class="hr4"><p class="line874"> <span class="anchor" id="line-487"></span>To już prawie wszystko, ale nie wolno nam zapomnieć, że <span class="anchor" id="line-488"></span></p><div><table><tbody><tr>  <td style="border-width: 0px; ; width: 66%"><p class="line862">materiały zostały opracowane w ramach realizacji Programu Rozwojowego Politechniki Warszawskiej. </p></td>
  <td style="border-width: 0px;  text-align: right;"><p class="line862"> <img alt="http://prpw.iem.pw.edu.pl/images/KAPITAL_LUDZKI.gif" class="external_image" src="LMP_5%20-%20wikidyd%20-%20IETiSIP,%20Wydzial%20Elektryczny%20Politechniki%20Warszawskiej_files/KAPITAL_LUDZKI.gif" title="http://prpw.iem.pw.edu.pl/images/KAPITAL_LUDZKI.gif"> <img alt="http://prpw.iem.pw.edu.pl/images/EU+EFS_P-kolor.gif" class="external_image" src="LMP_5%20-%20wikidyd%20-%20IETiSIP,%20Wydzial%20Elektryczny%20Politechniki%20Warszawskiej_files/EUEFS_P-kolor.gif" title="http://prpw.iem.pw.edu.pl/images/EU+EFS_P-kolor.gif"> </p></td>
</tr>
<tr>  <td colspan="2" style="border-width: 0px;  text-align: center;"><span class="anchor" id="line-489"></span><p class="line891"><small><a class="http" href="http://www.pr.pw.edu.pl/"><img alt="http://www.pr.pw.edu.pl/" class="external_image" src="LMP_5%20-%20wikidyd%20-%20IETiSIP,%20Wydzial%20Elektryczny%20Politechniki%20Warszawskiej_files/small_logo_prpw.jpg" title="http://www.pr.pw.edu.pl/"></a> jest projektem współfinansowanym przez Unię Europejską w ramach <a class="http" href="http://www.efs.gov.pl/">Europejskiego Funduszu społecznego</a>
 (działanie 4.1.1 Programu Operacyjnego Kapitał Ludzki) i ma na celu 
poprawę jakości kształcenia oraz dostosowanie oferty dydaktycznej 
Politechniki Warszawskiej do potrzeb rynku pracy. Będzie on realizowany 
przez Uczelnię w latach 2008-2015.</small> </p></td>
</tr>
</tbody></table></div><span class="anchor" id="line-490"></span><span class="anchor" id="bottom"></span></div><p id="pageinfo" class="info" dir="ltr" lang="en">wikidyd - IETiSIP, Wydzial Elektryczny Politechniki Warszawskiej: LMP/5  (last edited 2012-11-06 07:06:56 by <span title="JacekStarzyński @ oer.iem.pw.edu.pl[194.29.146.107]"><a href="http://wikidyd.iem.pw.edu.pl/JacekStarzy%C5%84ski" title="JacekStarzyński @ oer.iem.pw.edu.pl[194.29.146.107]">JacekStarzyński</a></span>)</p>

<div id="pagebottom"></div>
</div>


<div id="footer">
<ul id="credits">
<li><a href="http://moinmo.in/" title="This site uses the MoinMoin Wiki software.">MoinMoin Powered</a></li><li><a href="http://moinmo.in/Python" title="MoinMoin is written in Python.">Python Powered</a></li><li><a href="http://moinmo.in/GPL" title="MoinMoin is GPL licensed.">GPL licensed</a></li><li><a href="http://validator.w3.org/check?uri=referer" title="Click here to validate this page.">Valid HTML 4.01</a></li>
</ul>


</div>



<div id="link64_vdp_tabid" style="display:none;">1030</div></body><div style="display:none" id="sp_console_event"></div></html>