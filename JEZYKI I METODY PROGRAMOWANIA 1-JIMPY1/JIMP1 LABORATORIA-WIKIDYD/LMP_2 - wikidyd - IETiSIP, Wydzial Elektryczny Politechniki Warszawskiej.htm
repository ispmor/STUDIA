<!DOCTYPE html PUBLIC "-//W3C//DTD HTML 4.01//EN" "http://www.w3.org/TR/html4/strict.dtd">
<html><head>
<meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
<meta name="robots" content="index,nofollow">

<title>LMP/2 - wikidyd - IETiSIP, Wydzial Elektryczny Politechniki Warszawskiej</title>
<script type="text/javascript" src="LMP_2%20-%20wikidyd%20-%20IETiSIP,%20Wydzial%20Elektryczny%20Politechniki%20Warszawskiej_files/common.js"></script>

<script type="text/javascript">
<!--
var search_hint = "Search";
//-->
</script>


<link rel="stylesheet" type="text/css" charset="utf-8" media="all" href="LMP_2%20-%20wikidyd%20-%20IETiSIP,%20Wydzial%20Elektryczny%20Politechniki%20Warszawskiej_files/common.css">
<link rel="stylesheet" type="text/css" charset="utf-8" media="screen" href="LMP_2%20-%20wikidyd%20-%20IETiSIP,%20Wydzial%20Elektryczny%20Politechniki%20Warszawskiej_files/screen.css">
<link rel="stylesheet" type="text/css" charset="utf-8" media="print" href="LMP_2%20-%20wikidyd%20-%20IETiSIP,%20Wydzial%20Elektryczny%20Politechniki%20Warszawskiej_files/print.css">
<link rel="stylesheet" type="text/css" charset="utf-8" media="projection" href="LMP_2%20-%20wikidyd%20-%20IETiSIP,%20Wydzial%20Elektryczny%20Politechniki%20Warszawskiej_files/projection.css">

<!-- css only for MS IE6/IE7 browsers -->
<!--[if lt IE 8]>
   <link rel="stylesheet" type="text/css" charset="utf-8" media="all" href="/moin_static193/rightsidebar/css/msie.css">
<![endif]-->





<link rel="Start" href="http://wikidyd.iem.pw.edu.pl/WikiDyd">
<link rel="Alternate" title="Wiki Markup" href="http://wikidyd.iem.pw.edu.pl/LMP/2?action=raw">
<link rel="Alternate" media="print" title="Print View" href="http://wikidyd.iem.pw.edu.pl/LMP/2?action=print">
<link rel="Up" href="http://wikidyd.iem.pw.edu.pl/LMP">
<link rel="Appendix" title="lmp2.tgz" href="http://wikidyd.iem.pw.edu.pl/LMP/2?action=AttachFile&amp;do=view&amp;target=lmp2.tgz">
<link rel="Search" href="http://wikidyd.iem.pw.edu.pl/FindPage">
<link rel="Index" href="http://wikidyd.iem.pw.edu.pl/TitleIndex">
<link rel="Glossary" href="http://wikidyd.iem.pw.edu.pl/WordIndex">
<link rel="Help" href="http://wikidyd.iem.pw.edu.pl/HelpOnFormatting">
</head>

<body dir="ltr" lang="en">

<div id="header">

<form id="searchform" method="get" action="/LMP/2">
<div>
<input name="action" value="fullsearch" type="hidden">
<input name="context" value="180" type="hidden">
<label style="display: none;" for="searchinput">Search:</label>
<input class="disabled" id="searchinput" name="value" value="Search" size="20" onfocus="searchFocus(this)" onblur="searchBlur(this)" onkeyup="searchChange(this)" onchange="searchChange(this)" alt="Search" type="text">
<input disabled="disabled" id="titlesearch" name="titlesearch" value="Titles" alt="Search Titles" type="submit">
<input disabled="disabled" id="fullsearch" name="fullsearch" value="Text" alt="Search Full Text" type="submit">
</div>
</form>
<script type="text/javascript">
<!--// Initialize search form
var f = document.getElementById('searchform');
f.getElementsByTagName('label')[0].style.display = 'none';
var e = document.getElementById('searchinput');
searchChange(e);
searchBlur(e);
//-->
</script>


<div id="locationline">
<div id="interwiki"><span><a href="http://wikidyd.iem.pw.edu.pl/WikiDyd" rel="nofollow">wikidyd - IETiSIP, Wydzial Elektryczny Politechniki Warszawskiej</a></span></div>

<ul id="pagelocation">
<li><a href="http://wikidyd.iem.pw.edu.pl/LMP">LMP</a></li><li><a class="backlink" href="http://wikidyd.iem.pw.edu.pl/LMP/2?action=fullsearch&amp;context=180&amp;value=linkto%3A%22LMP%2F2%22" rel="nofollow" title="Click to do a full-text search for this title">2</a></li>
</ul>

</div>

</div>

<div id="sidebar">
<div class="sidepanel">
<h1>Wiki</h1>

<ul id="navibar">
<li class="wikilink"><a href="http://wikidyd.iem.pw.edu.pl/RecentChanges">RecentChanges</a></li><li class="wikilink"><a href="http://wikidyd.iem.pw.edu.pl/FindPage">FindPage</a></li><li class="wikilink"><a href="http://wikidyd.iem.pw.edu.pl/HelpContents">HelpContents</a></li><li class="current"><a href="http://wikidyd.iem.pw.edu.pl/LMP/2">LMP/2</a></li>
</ul>

</div>
<div class="sidepanel">
<h1>Page</h1>
<ul class="editbar"><li><span class="disabled">Immutable Page</span></li><li class="toggleCommentsButton" style="display:none;"><a href="#" class="nbcomment" onclick="toggleComments();return false;">Comments</a></li><li><a class="nbinfo" href="http://wikidyd.iem.pw.edu.pl/LMP/2?action=info" rel="nofollow">Info</a></li><li><a class="nbattachments" href="http://wikidyd.iem.pw.edu.pl/LMP/2?action=AttachFile" rel="nofollow">Attachments</a></li><li>
<form class="actionsmenu" method="GET" action="/LMP/2">
<div>
    
    <select name="action" onchange="if ((this.selectedIndex != 0) &amp;&amp;
                      (this.options[this.selectedIndex].disabled == false)) {
                this.form.submit();
            }
            this.selectedIndex = 0;">
        <option selected="selected" value="show">More Actions:</option><option value="raw">Raw Text</option>
<option value="print">Print View</option>
<option value="refresh">Delete Cache</option>
<option value="show" disabled="disabled" class="disabled">------------------------</option>
<option value="SpellCheck">Check Spelling</option>
<option value="LikePages">Like Pages</option>
<option value="LocalSiteMap">Local Site Map</option>
<option value="show" disabled="disabled" class="disabled">------------------------</option>
<option value="RenamePage" disabled="disabled" class="disabled">Rename Page</option>
<option value="DeletePage" disabled="disabled" class="disabled">Delete Page</option>
<option value="show" disabled="disabled" class="disabled">------------------------</option>
<option value="show" disabled="disabled" class="disabled">Subscribe User</option>
<option value="show" disabled="disabled" class="disabled">------------------------</option>
<option value="show" disabled="disabled" class="disabled">Remove Spam</option>
<option value="show" disabled="disabled" class="disabled">Revert to this revision</option>
<option value="PackagePages">Package Pages</option>
<option value="SyncPages">Sync Pages</option>
<option value="show" disabled="disabled" class="disabled">------------------------</option>
<option value="Load">Load</option>
<option value="Save">Save</option>
<option value="SlideShow">SlideShow</option>
    </select>
    
    
</div>
<script type="text/javascript">
<!--// Init menu
actionsMenuInit('More Actions:');
//-->
</script>
</form>
</li></ul>

</div>
<div class="sidepanel">
<h1>User</h1>
<ul id="username"><li><a href="http://wikidyd.iem.pw.edu.pl/LMP/2?action=login" id="login" rel="nofollow">Login</a></li></ul>
</div>
</div>

<div id="page" dir="ltr" lang="en">
<div dir="ltr" id="content" lang="en"><span class="anchor" id="top"></span>
<span class="anchor" id="line-1"></span><div><table><tbody><tr>  <td style="border-width: 0px; ; width: 66%"><p class="line862">Materiały zostały opracowane w ramach realizacji Programu Rozwojowego Politechniki Warszawskiej. </p></td>
  <td style="border-width: 0px;  text-align: right;"><p class="line862"> <img alt="http://prpw.iem.pw.edu.pl/images/KAPITAL_LUDZKI.gif" class="external_image" src="LMP_2%20-%20wikidyd%20-%20IETiSIP,%20Wydzial%20Elektryczny%20Politechniki%20Warszawskiej_files/KAPITAL_LUDZKI.gif" title="http://prpw.iem.pw.edu.pl/images/KAPITAL_LUDZKI.gif"> <img alt="http://prpw.iem.pw.edu.pl/images/EU+EFS_P-kolor.gif" class="external_image" src="LMP_2%20-%20wikidyd%20-%20IETiSIP,%20Wydzial%20Elektryczny%20Politechniki%20Warszawskiej_files/EUEFS_P-kolor.gif" title="http://prpw.iem.pw.edu.pl/images/EU+EFS_P-kolor.gif"> </p></td>
</tr>
<tr>  <td colspan="2" style="border-width: 0px;  text-align: center;"><span class="anchor" id="line-2"></span><p class="line891"><small><a class="http" href="http://www.pr.pw.edu.pl/"><img alt="http://www.pr.pw.edu.pl/" class="external_image" src="LMP_2%20-%20wikidyd%20-%20IETiSIP,%20Wydzial%20Elektryczny%20Politechniki%20Warszawskiej_files/small_logo_prpw.jpg" title="http://www.pr.pw.edu.pl/"></a> jest projektem współfinansowanym przez Unię Europejską w ramach <a class="http" href="http://www.efs.gov.pl/">Europejskiego Funduszu społecznego</a>
 (działanie 4.1.1 Programu Operacyjnego Kapitał Ludzki) i ma na celu 
poprawę jakości kształcenia oraz dostosowanie oferty dydaktycznej 
Politechniki Warszawskiej do potrzeb rynku pracy. Będzie on realizowany 
przez Uczelnię w latach 2008-2015.</small> </p></td>
</tr>
</tbody></table></div><span class="anchor" id="line-3"></span><p class="line867"></p><hr class="hr4"><p class="line874"> <span class="anchor" id="line-4"></span><span class="anchor" id="line-5"></span></p><p class="line867">
</p><h3 id="Laboratorium_metodyki_programowania">Laboratorium metodyki programowania</h3>
<span class="anchor" id="line-6"></span><p class="line867">
</p><h2 id="A.2BAQY-wiczenie_2:_Podstawy_programowania_w_j.2BARk-zyku_C">Ćwiczenie 2: Podstawy programowania w języku C</h2>
<span class="anchor" id="line-7"></span><span class="anchor" id="line-8"></span><p class="line867">
</p><h4 id="Scenariusz">Scenariusz</h4>
<span class="anchor" id="line-9"></span><ol type="a"><li>Student loguje się do systemu LOP (Laboratorium Otwartego Programowania). <span class="anchor" id="line-10"></span></li><li>Student przechodzi do katalogu roboczego dla zajęć LMP. <span class="anchor" id="line-11"></span></li><li>Student pobiera z repozytorium kod programów. <span class="anchor" id="line-12"></span></li><li>Po
 wyjaśnieniach prowadzącego student przystępuje do kompilacji i 
uruchomienia programów. Porównuje wynik działania z kodem źródłowym. <span class="anchor" id="line-13"></span></li><li>Student modyfikuje programy według wskazówek prowadzącego (patrz opis szczegółowy). Powtarza próbę kompilacji i uruchomienia. <span class="anchor" id="line-14"></span></li><li>Ćwiczenie zaliczeniowe: student rozszerza funkcjonalność programu według zamówienia prowadzącego. <span class="anchor" id="line-15"></span><span class="anchor" id="line-16"></span></li></ol><p class="line867">
</p><h4 id="Opis_szczeg.2BAPMBQg-owy">Opis szczegółowy</h4>
<span class="anchor" id="line-17"></span><span class="anchor" id="line-18"></span><p class="line874">W
 trakcie zajęć nauczymy się podstaw tworzenia programów w języku C. 
Przeanalizujemy i zmodyfikujemy programy pobierające z pliku tekstowego 
ciąg liczb rzeczywistych i obliczające wartość minimalną, maksymalną, 
sumę itp. <span class="anchor" id="line-19"></span>Przeanalizujemy następujące zagadnienia: <span class="anchor" id="line-20"></span></p><ul><li>komunikacja z programem przez argumenty linii poleceń, <span class="anchor" id="line-21"></span></li><li>dostęp do plików tekstowych i czytanie danych, <span class="anchor" id="line-22"></span></li><li>podstawowe instrukcje sterujące (if-else, pętla while), <span class="anchor" id="line-23"></span></li><li>typy danych: liczby double i float. <span class="anchor" id="line-24"></span><span class="anchor" id="line-25"></span><span class="anchor" id="line-26"></span></li></ul><p class="line867">
</p><h5 id="Rozpocz.2BARk-cie_pracy">Rozpoczęcie pracy</h5>
<span class="anchor" id="line-27"></span><span class="anchor" id="line-28"></span><p class="line862">Zajęcia
 będą prowadzone na komputerze stud.iem.pw.edu.pl. W celu rozpoczęcia 
pracy należy zalogować się na tym komputerze za pomocą usługi ssh. Można
 w tym celu wykorzystać albo dostępny w każdym praktycznie systemie 
Unix/Linux program <a class="http" href="http://www.openbsd.org/cgi-bin/man.cgi?query=ssh&amp;sektion=1">ssh</a> albo klienta SSH dla systemu Windows - <a class="http" href="http://www.chiark.greenend.org.uk/%7Esgtatham/putty/">PuTTY</a>.
 Na maszynach studenckich w IETiSIP PW można podnieść różne dystrybucje 
Uniksa/Linuksa lub system Windows, ale w każdej z nich jest 
zainstalowane oprogramowanie ssh.  <span class="anchor" id="line-29"></span><span class="anchor" id="line-30"></span></p><p class="line874">Do
 logowania na maszynie stud.iem.pw.edu.pl należy użyć takiego samego 
loginu i hasła jakie wykorzystywane sa do dostępu do usług wydziałowych 
(poczta, e-dziekanat, itd.). <span class="anchor" id="line-31"></span><span class="anchor" id="line-32"></span></p><p class="line862">Po zalogowaniu się należy przejść do <a href="http://wikidyd.iem.pw.edu.pl/LMP/1">utworzonego na pierwszych zajęciach</a> katalogu lmp: <span class="anchor" id="line-33"></span><span class="anchor" id="line-34"></span><span class="anchor" id="line-35"></span></p><pre><span class="anchor" id="line-1"></span> cd lmp</pre><span class="anchor" id="line-36"></span><span class="anchor" id="line-37"></span><p class="line867"><span class="anchor" id="line-38"></span><span class="anchor" id="line-39"></span></p><div class="comment" style="display:none"><span class="anchor" id="line-1-1"></span><p class="line867"><a href="http://wikidyd.iem.pw.edu.pl/LMP/2/SVN">Pobranie kodu z repozytorium svn</a> </p></div><span class="anchor" id="line-40"></span><span class="anchor" id="line-41"></span><p class="line867">
</p><h5 id="Kod_do_zaj.2BARkBBw-">Kod do zajęć</h5>
<span class="anchor" id="line-42"></span><span class="anchor" id="line-43"></span><p class="line867"><a class="attachment" href="http://wikidyd.iem.pw.edu.pl/LMP/2?action=AttachFile&amp;do=view&amp;target=lmp2.tgz" title="">lmp2.tgz</a> <span class="anchor" id="line-44"></span><span class="anchor" id="line-45"></span></p><p class="line867">
</p><h5 id="Praca_nad_kodem">Praca nad kodem</h5>
<span class="anchor" id="line-46"></span><span class="anchor" id="line-47"></span><span class="anchor" id="line-48"></span><p class="line867">
</p><h5 id="Pierwszy_program">Pierwszy program</h5>
<span class="anchor" id="line-49"></span><span class="anchor" id="line-50"></span><p class="line874">Pierwszy program oblicza sumę argumentów, z którymi został wywołany. Argumenty muszą być liczbami. <span class="anchor" id="line-51"></span><span class="anchor" id="line-52"></span></p><p class="line862">Funkcja <tt class="backtick">main</tt> przetwarza tablicę <tt class="backtick">argv</tt> (pamiętamy, że zawiera ona argumenty w postaci napisów) na liczby rzeczywiste (przy pomocy funkcji <tt class="backtick">atof</tt> podobnej do poznanej na poprzednich zajęciach funkcji <tt class="backtick">atoi</tt>)
 i pakuje je do wektora (który może pomieścić nie więcej, niż 1000 liczb
 - ale szansa, że ktoś poda więcej argumentów jest niewielka).  <span class="anchor" id="line-53"></span><span class="anchor" id="line-54"></span></p><p class="line862">Po przetworzeniu argumentów <tt class="backtick">main</tt> wywołuje funkcję <tt class="backtick">pwekt</tt> (<em>Pisz WEKTor</em>), która wypisze na ekran zawartość wektora, po czym, za pomocą kolejnej funkcji (<tt class="backtick">sum</tt>) obliczy <span class="anchor" id="line-55"></span>sumę wszystkich elementów wektora i wypisze ją na ekran.  <span class="anchor" id="line-56"></span><span class="anchor" id="line-57"></span></p><p class="line862">Funkcja <tt class="backtick">sum</tt> pokazuje dość istotny aspekt języka C - otóż do funkcji przekazywane są kopie aktualnych argumentów wywołania (nazywamy to <em>przekazywaniem argumentów przez wartość</em>). Można to zaobserwować śledząc wartość zmiennej <tt class="backtick">l</tt> z funkcji <tt class="backtick">main</tt>. Zmienna ta jest przekazywana jako argument do funkcji <tt class="backtick">sum</tt> i tam utożsamiana z argumentem formalnym <tt class="backtick">n</tt>, który jest modyfikowany w trakcie obliczania sumy (każdy obieg pętli while z linii 10 zmniejsza zmienną <tt class="backtick">n</tt> o 1). Mimo tego wartość zmiennej <tt class="backtick">l</tt> w funkcji <tt class="backtick">main</tt> pozostaje nie zmieniona, o czym przekonuje nas ostatnia instrukcja printf. <span class="anchor" id="line-58"></span><span class="anchor" id="line-59"></span></p><p class="line874">Oto program p1.c: <span class="anchor" id="line-60"></span><span class="anchor" id="line-61"></span><span class="anchor" id="line-62"></span><span class="anchor" id="line-63"></span><span class="anchor" id="line-64"></span><span class="anchor" id="line-65"></span><span class="anchor" id="line-66"></span><span class="anchor" id="line-67"></span><span class="anchor" id="line-68"></span><span class="anchor" id="line-69"></span><span class="anchor" id="line-70"></span><span class="anchor" id="line-71"></span><span class="anchor" id="line-72"></span><span class="anchor" id="line-73"></span><span class="anchor" id="line-74"></span><span class="anchor" id="line-75"></span><span class="anchor" id="line-76"></span><span class="anchor" id="line-77"></span><span class="anchor" id="line-78"></span><span class="anchor" id="line-79"></span><span class="anchor" id="line-80"></span><span class="anchor" id="line-81"></span><span class="anchor" id="line-82"></span><span class="anchor" id="line-83"></span><span class="anchor" id="line-84"></span><span class="anchor" id="line-85"></span><span class="anchor" id="line-86"></span><span class="anchor" id="line-87"></span><span class="anchor" id="line-88"></span><span class="anchor" id="line-89"></span><span class="anchor" id="line-90"></span><span class="anchor" id="line-91"></span><span class="anchor" id="line-92"></span><span class="anchor" id="line-93"></span><span class="anchor" id="line-94"></span><span class="anchor" id="line-95"></span><span class="anchor" id="line-96"></span><span class="anchor" id="line-97"></span><span class="anchor" id="line-98"></span><span class="anchor" id="line-99"></span><span class="anchor" id="line-100"></span><span class="anchor" id="line-101"></span><span class="anchor" id="line-102"></span><span class="anchor" id="line-103"></span><span class="anchor" id="line-104"></span><span class="anchor" id="line-105"></span><span class="anchor" id="line-106"></span><span class="anchor" id="line-107"></span><span class="anchor" id="line-108"></span><span class="anchor" id="line-109"></span><span class="anchor" id="line-110"></span><span class="anchor" id="line-111"></span><span class="anchor" id="line-1-2"></span></p><div class="highlight cpp"><div class="codearea" dir="ltr" lang="en">
<script type="text/javascript">
function isnumbered(obj) {
  return obj.childNodes.length && obj.firstChild.childNodes.length && obj.firstChild.firstChild.className == 'LineNumber';
}
function nformat(num,chrs,add) {
  var nlen = Math.max(0,chrs-(''+num).length), res = '';
  while (nlen>0) { res += ' '; nlen-- }
  return res+num+add;
}
function addnumber(did, nstart, nstep) {
  var c = document.getElementById(did), l = c.firstChild, n = 1;
  if (!isnumbered(c)) {
    if (typeof nstart == 'undefined') nstart = 1;
    if (typeof nstep  == 'undefined') nstep = 1;
    var n = nstart;
    while (l != null) {
      if (l.tagName == 'SPAN') {
        var s = document.createElement('SPAN');
        var a = document.createElement('A');
        s.className = 'LineNumber';
        a.appendChild(document.createTextNode(nformat(n,4,'')));
        a.href = '#' + did + '_' + n;
        s.appendChild(a);
        s.appendChild(document.createTextNode(' '));
        n += nstep;
        if (l.childNodes.length) {
          l.insertBefore(s, l.firstChild);
        }
        else {
          l.appendChild(s);
        }
      }
      l = l.nextSibling;
    }
  }
  return false;
}
function remnumber(did) {
  var c = document.getElementById(did), l = c.firstChild;
  if (isnumbered(c)) {
    while (l != null) {
      if (l.tagName == 'SPAN' && l.firstChild.className == 'LineNumber') l.removeChild(l.firstChild);
      l = l.nextSibling;
    }
  }
  return false;
}
function togglenumber(did, nstart, nstep) {
  var c = document.getElementById(did);
  if (isnumbered(c)) {
    remnumber(did);
  } else {
    addnumber(did,nstart,nstep);
  }
  return false;
}
</script>

<script type="text/javascript">
document.write('<a href="#" onclick="return togglenumber(\'CA-61bdf1cdfc3e7731d460feb5f1d18412646bcfb7\', 1, 1);" \
                class="codenumbers">Toggle line numbers<\/a>');
</script><a href="#" onclick="return togglenumber('CA-61bdf1cdfc3e7731d460feb5f1d18412646bcfb7', 1, 1);" class="codenumbers">Toggle line numbers</a>
<pre dir="ltr" id="CA-61bdf1cdfc3e7731d460feb5f1d18412646bcfb7" lang="en"><span class="line"><span class="LineNumber"><a href="#CA-61bdf1cdfc3e7731d460feb5f1d18412646bcfb7_1">   1</a> </span><span class="LineAnchor" id="CA-61bdf1cdfc3e7731d460feb5f1d18412646bcfb7_1"></span><span class="anchor" id="line-1-3"></span><span class="Preprc">#</span><span class="Preprc">include &lt;stdio.h&gt;              </span><span class="Comment">/* dla printf */</span><span class="Preprc"></span></span>
<span class="line"><span class="LineNumber"><a href="#CA-61bdf1cdfc3e7731d460feb5f1d18412646bcfb7_2">   2</a> </span><span class="LineAnchor" id="CA-61bdf1cdfc3e7731d460feb5f1d18412646bcfb7_2"></span><span class="anchor" id="line-2-1"></span><span class="Preprc"></span><span class="Preprc">#</span><span class="Preprc">include &lt;stdlib.h&gt;             </span><span class="Comment">/* dla atof */</span><span class="Preprc"></span></span>
<span class="line"><span class="LineNumber"><a href="#CA-61bdf1cdfc3e7731d460feb5f1d18412646bcfb7_3">   3</a> </span><span class="LineAnchor" id="CA-61bdf1cdfc3e7731d460feb5f1d18412646bcfb7_3"></span><span class="anchor" id="line-3-1"></span><span class="Preprc"></span></span>
<span class="line"><span class="LineNumber"><a href="#CA-61bdf1cdfc3e7731d460feb5f1d18412646bcfb7_4">   4</a> </span><span class="LineAnchor" id="CA-61bdf1cdfc3e7731d460feb5f1d18412646bcfb7_4"></span><span class="anchor" id="line-4-1"></span><span class="ResWord">double</span></span>
<span class="line"><span class="LineNumber"><a href="#CA-61bdf1cdfc3e7731d460feb5f1d18412646bcfb7_5">   5</a> </span><span class="LineAnchor" id="CA-61bdf1cdfc3e7731d460feb5f1d18412646bcfb7_5"></span><span class="anchor" id="line-5-1"></span><span class="ID">sum</span>(<span class="ResWord">double</span> <span class="ID">v</span>[], <span class="ResWord">int</span> <span class="ID">n</span>)</span>
<span class="line"><span class="LineNumber"><a href="#CA-61bdf1cdfc3e7731d460feb5f1d18412646bcfb7_6">   6</a> </span><span class="LineAnchor" id="CA-61bdf1cdfc3e7731d460feb5f1d18412646bcfb7_6"></span><span class="anchor" id="line-6-1"></span>{</span>
<span class="line"><span class="LineNumber"><a href="#CA-61bdf1cdfc3e7731d460feb5f1d18412646bcfb7_7">   7</a> </span><span class="LineAnchor" id="CA-61bdf1cdfc3e7731d460feb5f1d18412646bcfb7_7"></span><span class="anchor" id="line-7-1"></span>        <span class="Comment">/*</span></span>
<span class="line"><span class="LineNumber"><a href="#CA-61bdf1cdfc3e7731d460feb5f1d18412646bcfb7_8">   8</a> </span><span class="LineAnchor" id="CA-61bdf1cdfc3e7731d460feb5f1d18412646bcfb7_8"></span><span class="anchor" id="line-8-1"></span><span class="Comment">         * Funkcja oblicza i zwraca sume elementow n-elementowego wektora v</span></span>
<span class="line"><span class="LineNumber"><a href="#CA-61bdf1cdfc3e7731d460feb5f1d18412646bcfb7_9">   9</a> </span><span class="LineAnchor" id="CA-61bdf1cdfc3e7731d460feb5f1d18412646bcfb7_9"></span><span class="anchor" id="line-9-1"></span><span class="Comment">         */</span></span>
<span class="line"><span class="LineNumber"><a href="#CA-61bdf1cdfc3e7731d460feb5f1d18412646bcfb7_10">  10</a> </span><span class="LineAnchor" id="CA-61bdf1cdfc3e7731d460feb5f1d18412646bcfb7_10"></span><span class="anchor" id="line-10-1"></span>        <span class="ResWord">double</span>          <span class="ID">s</span> = <span class="ID">v</span>[<span class="Number">0</span>];</span>
<span class="line"><span class="LineNumber"><a href="#CA-61bdf1cdfc3e7731d460feb5f1d18412646bcfb7_11">  11</a> </span><span class="LineAnchor" id="CA-61bdf1cdfc3e7731d460feb5f1d18412646bcfb7_11"></span><span class="anchor" id="line-11-1"></span></span>
<span class="line"><span class="LineNumber"><a href="#CA-61bdf1cdfc3e7731d460feb5f1d18412646bcfb7_12">  12</a> </span><span class="LineAnchor" id="CA-61bdf1cdfc3e7731d460feb5f1d18412646bcfb7_12"></span><span class="anchor" id="line-12-1"></span>        <span class="ResWord">while</span> (--<span class="ID">n</span>)</span>
<span class="line"><span class="LineNumber"><a href="#CA-61bdf1cdfc3e7731d460feb5f1d18412646bcfb7_13">  13</a> </span><span class="LineAnchor" id="CA-61bdf1cdfc3e7731d460feb5f1d18412646bcfb7_13"></span><span class="anchor" id="line-13-1"></span>                <span class="ID">s</span> += <span class="ID">v</span>[<span class="ID">n</span>];</span>
<span class="line"><span class="LineNumber"><a href="#CA-61bdf1cdfc3e7731d460feb5f1d18412646bcfb7_14">  14</a> </span><span class="LineAnchor" id="CA-61bdf1cdfc3e7731d460feb5f1d18412646bcfb7_14"></span><span class="anchor" id="line-14-1"></span></span>
<span class="line"><span class="LineNumber"><a href="#CA-61bdf1cdfc3e7731d460feb5f1d18412646bcfb7_15">  15</a> </span><span class="LineAnchor" id="CA-61bdf1cdfc3e7731d460feb5f1d18412646bcfb7_15"></span><span class="anchor" id="line-15-1"></span>        <span class="ResWord">return</span> <span class="ID">s</span>;</span>
<span class="line"><span class="LineNumber"><a href="#CA-61bdf1cdfc3e7731d460feb5f1d18412646bcfb7_16">  16</a> </span><span class="LineAnchor" id="CA-61bdf1cdfc3e7731d460feb5f1d18412646bcfb7_16"></span><span class="anchor" id="line-16-1"></span>}</span>
<span class="line"><span class="LineNumber"><a href="#CA-61bdf1cdfc3e7731d460feb5f1d18412646bcfb7_17">  17</a> </span><span class="LineAnchor" id="CA-61bdf1cdfc3e7731d460feb5f1d18412646bcfb7_17"></span><span class="anchor" id="line-17-1"></span></span>
<span class="line"><span class="LineNumber"><a href="#CA-61bdf1cdfc3e7731d460feb5f1d18412646bcfb7_18">  18</a> </span><span class="LineAnchor" id="CA-61bdf1cdfc3e7731d460feb5f1d18412646bcfb7_18"></span><span class="anchor" id="line-18-1"></span><span class="ResWord">void</span></span>
<span class="line"><span class="LineNumber"><a href="#CA-61bdf1cdfc3e7731d460feb5f1d18412646bcfb7_19">  19</a> </span><span class="LineAnchor" id="CA-61bdf1cdfc3e7731d460feb5f1d18412646bcfb7_19"></span><span class="anchor" id="line-19-1"></span><span class="ID">pwekt</span>(<span class="ResWord">double</span> <span class="ID">v</span>[], <span class="ResWord">int</span> <span class="ID">n</span>)</span>
<span class="line"><span class="LineNumber"><a href="#CA-61bdf1cdfc3e7731d460feb5f1d18412646bcfb7_20">  20</a> </span><span class="LineAnchor" id="CA-61bdf1cdfc3e7731d460feb5f1d18412646bcfb7_20"></span><span class="anchor" id="line-20-1"></span>{</span>
<span class="line"><span class="LineNumber"><a href="#CA-61bdf1cdfc3e7731d460feb5f1d18412646bcfb7_21">  21</a> </span><span class="LineAnchor" id="CA-61bdf1cdfc3e7731d460feb5f1d18412646bcfb7_21"></span><span class="anchor" id="line-21-1"></span>        <span class="Comment">/* Ladne wypisywanie wektora na standardowe wyjscie */</span></span>
<span class="line"><span class="LineNumber"><a href="#CA-61bdf1cdfc3e7731d460feb5f1d18412646bcfb7_22">  22</a> </span><span class="LineAnchor" id="CA-61bdf1cdfc3e7731d460feb5f1d18412646bcfb7_22"></span><span class="anchor" id="line-22-1"></span>        <span class="ResWord">int</span>             <span class="ID">i</span>;</span>
<span class="line"><span class="LineNumber"><a href="#CA-61bdf1cdfc3e7731d460feb5f1d18412646bcfb7_23">  23</a> </span><span class="LineAnchor" id="CA-61bdf1cdfc3e7731d460feb5f1d18412646bcfb7_23"></span><span class="anchor" id="line-23-1"></span>        <span class="ID">printf</span>(<span class="String">"</span><span class="String">[</span><span class="String">"</span>);</span>
<span class="line"><span class="LineNumber"><a href="#CA-61bdf1cdfc3e7731d460feb5f1d18412646bcfb7_24">  24</a> </span><span class="LineAnchor" id="CA-61bdf1cdfc3e7731d460feb5f1d18412646bcfb7_24"></span><span class="anchor" id="line-24-1"></span>        <span class="ResWord">for</span> (<span class="ID">i</span> = <span class="Number">0</span>; <span class="ID">i</span> &lt; <span class="ID">n</span>; <span class="ID">i</span>++)</span>
<span class="line"><span class="LineNumber"><a href="#CA-61bdf1cdfc3e7731d460feb5f1d18412646bcfb7_25">  25</a> </span><span class="LineAnchor" id="CA-61bdf1cdfc3e7731d460feb5f1d18412646bcfb7_25"></span><span class="anchor" id="line-25-1"></span>                <span class="ID">printf</span>(<span class="String">"</span><span class="String"> %g</span><span class="String">"</span>, <span class="ID">v</span>[<span class="ID">i</span>]);</span>
<span class="line"><span class="LineNumber"><a href="#CA-61bdf1cdfc3e7731d460feb5f1d18412646bcfb7_26">  26</a> </span><span class="LineAnchor" id="CA-61bdf1cdfc3e7731d460feb5f1d18412646bcfb7_26"></span><span class="anchor" id="line-26-1"></span>        <span class="ID">printf</span>(<span class="String">"</span><span class="String"> ]</span><span class="String">"</span>);</span>
<span class="line"><span class="LineNumber"><a href="#CA-61bdf1cdfc3e7731d460feb5f1d18412646bcfb7_27">  27</a> </span><span class="LineAnchor" id="CA-61bdf1cdfc3e7731d460feb5f1d18412646bcfb7_27"></span><span class="anchor" id="line-27-1"></span>}</span>
<span class="line"><span class="LineNumber"><a href="#CA-61bdf1cdfc3e7731d460feb5f1d18412646bcfb7_28">  28</a> </span><span class="LineAnchor" id="CA-61bdf1cdfc3e7731d460feb5f1d18412646bcfb7_28"></span><span class="anchor" id="line-28-1"></span></span>
<span class="line"><span class="LineNumber"><a href="#CA-61bdf1cdfc3e7731d460feb5f1d18412646bcfb7_29">  29</a> </span><span class="LineAnchor" id="CA-61bdf1cdfc3e7731d460feb5f1d18412646bcfb7_29"></span><span class="anchor" id="line-29-1"></span><span class="ResWord">int</span></span>
<span class="line"><span class="LineNumber"><a href="#CA-61bdf1cdfc3e7731d460feb5f1d18412646bcfb7_30">  30</a> </span><span class="LineAnchor" id="CA-61bdf1cdfc3e7731d460feb5f1d18412646bcfb7_30"></span><span class="anchor" id="line-30-1"></span><span class="ID">main</span>(<span class="ResWord">int</span> <span class="ID">argc</span>, <span class="ResWord">char</span> *<span class="ID">argv</span>[])</span>
<span class="line"><span class="LineNumber"><a href="#CA-61bdf1cdfc3e7731d460feb5f1d18412646bcfb7_31">  31</a> </span><span class="LineAnchor" id="CA-61bdf1cdfc3e7731d460feb5f1d18412646bcfb7_31"></span><span class="anchor" id="line-31-1"></span>{</span>
<span class="line"><span class="LineNumber"><a href="#CA-61bdf1cdfc3e7731d460feb5f1d18412646bcfb7_32">  32</a> </span><span class="LineAnchor" id="CA-61bdf1cdfc3e7731d460feb5f1d18412646bcfb7_32"></span><span class="anchor" id="line-32-1"></span>        <span class="ResWord">double</span>          <span class="ID">r</span>       [<span class="Number">1000</span>]; <span class="Comment">/* jesli ktos poda wiecej argumentow</span></span>
<span class="line"><span class="LineNumber"><a href="#CA-61bdf1cdfc3e7731d460feb5f1d18412646bcfb7_33">  33</a> </span><span class="LineAnchor" id="CA-61bdf1cdfc3e7731d460feb5f1d18412646bcfb7_33"></span><span class="anchor" id="line-33-1"></span><span class="Comment">                                         * - bedzie bieda! */</span></span>
<span class="line"><span class="LineNumber"><a href="#CA-61bdf1cdfc3e7731d460feb5f1d18412646bcfb7_34">  34</a> </span><span class="LineAnchor" id="CA-61bdf1cdfc3e7731d460feb5f1d18412646bcfb7_34"></span><span class="anchor" id="line-34-1"></span>        <span class="ResWord">int</span>             <span class="ID">i</span>;</span>
<span class="line"><span class="LineNumber"><a href="#CA-61bdf1cdfc3e7731d460feb5f1d18412646bcfb7_35">  35</a> </span><span class="LineAnchor" id="CA-61bdf1cdfc3e7731d460feb5f1d18412646bcfb7_35"></span><span class="anchor" id="line-35-1"></span></span>
<span class="line"><span class="LineNumber"><a href="#CA-61bdf1cdfc3e7731d460feb5f1d18412646bcfb7_36">  36</a> </span><span class="LineAnchor" id="CA-61bdf1cdfc3e7731d460feb5f1d18412646bcfb7_36"></span><span class="anchor" id="line-36-1"></span>        <span class="ResWord">int</span>             <span class="ID">l</span> = <span class="ID">argc</span> - <span class="Number">1</span>;   <span class="Comment">/* liczba el. wektora */</span></span>
<span class="line"><span class="LineNumber"><a href="#CA-61bdf1cdfc3e7731d460feb5f1d18412646bcfb7_37">  37</a> </span><span class="LineAnchor" id="CA-61bdf1cdfc3e7731d460feb5f1d18412646bcfb7_37"></span><span class="anchor" id="line-37-1"></span></span>
<span class="line"><span class="LineNumber"><a href="#CA-61bdf1cdfc3e7731d460feb5f1d18412646bcfb7_38">  38</a> </span><span class="LineAnchor" id="CA-61bdf1cdfc3e7731d460feb5f1d18412646bcfb7_38"></span><span class="anchor" id="line-38-1"></span>        <span class="ResWord">for</span> (<span class="ID">i</span> = <span class="Number">1</span>; <span class="ID">i</span> &lt; <span class="ID">argc</span>; <span class="ID">i</span>++)      <span class="Comment">/* zaczynamy od drugiego el. argv */</span></span>
<span class="line"><span class="LineNumber"><a href="#CA-61bdf1cdfc3e7731d460feb5f1d18412646bcfb7_39">  39</a> </span><span class="LineAnchor" id="CA-61bdf1cdfc3e7731d460feb5f1d18412646bcfb7_39"></span><span class="anchor" id="line-39-1"></span>                <span class="ID">r</span>[<span class="ID">i</span> - <span class="Number">1</span>] = <span class="ID">atof</span>(<span class="ID">argv</span>[<span class="ID">i</span>]);       <span class="Comment">/* atof: ASCII to Float */</span></span>
<span class="line"><span class="LineNumber"><a href="#CA-61bdf1cdfc3e7731d460feb5f1d18412646bcfb7_40">  40</a> </span><span class="LineAnchor" id="CA-61bdf1cdfc3e7731d460feb5f1d18412646bcfb7_40"></span><span class="anchor" id="line-40-1"></span></span>
<span class="line"><span class="LineNumber"><a href="#CA-61bdf1cdfc3e7731d460feb5f1d18412646bcfb7_41">  41</a> </span><span class="LineAnchor" id="CA-61bdf1cdfc3e7731d460feb5f1d18412646bcfb7_41"></span><span class="anchor" id="line-41-1"></span>        <span class="ID">pwekt</span>(<span class="ID">r</span>, <span class="ID">argc</span> - <span class="Number">1</span>);     <span class="Comment">/* można tak, ale lepiej l zmiast argc-1 */</span></span>
<span class="line"><span class="LineNumber"><a href="#CA-61bdf1cdfc3e7731d460feb5f1d18412646bcfb7_42">  42</a> </span><span class="LineAnchor" id="CA-61bdf1cdfc3e7731d460feb5f1d18412646bcfb7_42"></span><span class="anchor" id="line-42-1"></span></span>
<span class="line"><span class="LineNumber"><a href="#CA-61bdf1cdfc3e7731d460feb5f1d18412646bcfb7_43">  43</a> </span><span class="LineAnchor" id="CA-61bdf1cdfc3e7731d460feb5f1d18412646bcfb7_43"></span><span class="anchor" id="line-43-1"></span>        <span class="ID">printf</span>(<span class="String">"</span><span class="String">, suma elementow = %g</span><span class="SPChar">\n</span><span class="String">"</span>, <span class="ID">sum</span>(<span class="ID">r</span>, <span class="ID">l</span>));</span>
<span class="line"><span class="LineNumber"><a href="#CA-61bdf1cdfc3e7731d460feb5f1d18412646bcfb7_44">  44</a> </span><span class="LineAnchor" id="CA-61bdf1cdfc3e7731d460feb5f1d18412646bcfb7_44"></span><span class="anchor" id="line-44-1"></span></span>
<span class="line"><span class="LineNumber"><a href="#CA-61bdf1cdfc3e7731d460feb5f1d18412646bcfb7_45">  45</a> </span><span class="LineAnchor" id="CA-61bdf1cdfc3e7731d460feb5f1d18412646bcfb7_45"></span><span class="anchor" id="line-45-1"></span>        <span class="ID">printf</span>(<span class="String">"</span><span class="String">wektor ma %d elementow</span><span class="SPChar">\n</span><span class="String">"</span>, <span class="ID">l</span>);  <span class="Comment">/* zwróćmy uwagę, że</span></span>
<span class="line"><span class="LineNumber"><a href="#CA-61bdf1cdfc3e7731d460feb5f1d18412646bcfb7_46">  46</a> </span><span class="LineAnchor" id="CA-61bdf1cdfc3e7731d460feb5f1d18412646bcfb7_46"></span><span class="anchor" id="line-46-1"></span><span class="Comment">                                                 * funkcja sum nie "popsula"</span></span>
<span class="line"><span class="LineNumber"><a href="#CA-61bdf1cdfc3e7731d460feb5f1d18412646bcfb7_47">  47</a> </span><span class="LineAnchor" id="CA-61bdf1cdfc3e7731d460feb5f1d18412646bcfb7_47"></span><span class="anchor" id="line-47-1"></span><span class="Comment">                                                 * zmiennej j */</span></span>
<span class="line"><span class="LineNumber"><a href="#CA-61bdf1cdfc3e7731d460feb5f1d18412646bcfb7_48">  48</a> </span><span class="LineAnchor" id="CA-61bdf1cdfc3e7731d460feb5f1d18412646bcfb7_48"></span><span class="anchor" id="line-48-1"></span></span>
<span class="line"><span class="LineNumber"><a href="#CA-61bdf1cdfc3e7731d460feb5f1d18412646bcfb7_49">  49</a> </span><span class="LineAnchor" id="CA-61bdf1cdfc3e7731d460feb5f1d18412646bcfb7_49"></span><span class="anchor" id="line-49-1"></span>        <span class="ResWord">return</span> <span class="Number">0</span>;</span>
<span class="line"><span class="LineNumber"><a href="#CA-61bdf1cdfc3e7731d460feb5f1d18412646bcfb7_50">  50</a> </span><span class="LineAnchor" id="CA-61bdf1cdfc3e7731d460feb5f1d18412646bcfb7_50"></span><span class="anchor" id="line-50-1"></span>}</span>
</pre></div></div><span class="anchor" id="line-112"></span><span class="anchor" id="line-113"></span><p class="line874">A tutaj ślad wykonania programu: <span class="anchor" id="line-114"></span><span class="anchor" id="line-115"></span><span class="anchor" id="line-116"></span><span class="anchor" id="line-117"></span><span class="anchor" id="line-118"></span><span class="anchor" id="line-119"></span><span class="anchor" id="line-120"></span></p><pre><span class="anchor" id="line-1-1"></span>volt:~/lmp/lmp2/gr1&gt; cc -Wall -pedantic -ansi p1.c
<span class="anchor" id="line-2"></span>volt:~/lmp/lmp2/gr1&gt; ./a.out 1 2 3 4 5.5 6.6 7.7
<span class="anchor" id="line-3"></span>[ 1 2 3 4 5.5 6.6 7.7 ], suma elementow = 29.8
<span class="anchor" id="line-4"></span>wektor ma 7 elementow
<span class="anchor" id="line-5"></span>volt:~/lmp/lmp2/gr1&gt;</pre><span class="anchor" id="line-121"></span><span class="anchor" id="line-122"></span><p class="line867"><strong>Ćwiczenia do wykonania:</strong> <span class="anchor" id="line-123"></span></p><ul><li>sprawdzić, jak reaguje program na wprowadzenie argumentu, który nie jest liczbą, <span class="anchor" id="line-124"></span></li><li><p class="line862">w funkcji <tt class="backtick">sum</tt> zastąpić pętlę while przez pętlę for, <span class="anchor" id="line-125"></span></p></li><li><p class="line862">usunąć z pliku drugą linię (włączającą plik <tt class="backtick">stdlib.h</tt>) i zaobserwować, jakie skutki to powoduje, <span class="anchor" id="line-126"></span></p></li><li><p class="line862">zmniejszyć rozmiar wektora <tt class="backtick">r</tt>, podać zbyt wiele argumentów i zaobserwować, jakie skutki to powoduje. <span class="anchor" id="line-127"></span><span class="anchor" id="line-128"></span></p></li></ul><p class="line867">
</p><h5 id="Drugi_program">Drugi program</h5>
<span class="anchor" id="line-129"></span><span class="anchor" id="line-130"></span><p class="line862">Kolejny program to generator, który przygotuje zbiór liczb losowych. Posłużymy się w tym celu funkcją <tt class="backtick">rand</tt> ze standardowej biblioteki. Funkcja ta przystosowana jest do testowania kodu i dlatego generuje sekwencje <em>pseudolosowe</em> - powtarzające się. Ponieważ chcemy generować różne sekwencje przy kolejnych wywołaniach generatora - posługujemy się funkcją <tt class="backtick">srand</tt>, która pozwala zainicjować generator <tt class="backtick">rand</tt>. Różne wartości inicjujące powodują wypisywanie różnych ciągów danych i aby dodatkowo <em>zrandomizować</em> wyniki, używamy jako argumentu <tt class="backtick">srand</tt> wartości zwracanej przez kolejną funkcję z biblioteki standardowej - <tt class="backtick">time</tt>. Funkcja ta, wywołana w taki sposób, jak w naszym programie, zwraca liczbę sekund, które upłynęły od 1 stycznia 1970. <span class="anchor" id="line-131"></span><span class="anchor" id="line-132"></span></p><p class="line862">Nasz
 generator oczekuje co najwyżej czterech argumentów, ale są one 
opcjonalne. Pierwszy argument określa, ile liczb ma wygenerować program.
 Jeżeli nie podamy pierwszego argumentu, to program wygeneruje 10 liczb.
 Drugi argument określa kres dolny przedziału, w którym zawarte będą 
generowane wartości. Domyślna wartość, przyjmowana gdy nie podamy 
drugiego argumentu, to 0. Trzeci argument określa górny kres przedziału 
wartości. Jego domyślna wartość to 1. Ostatni, czwarty argument, to 
nazwa (ścieżka) pliku, do którego mają zostać zapisane wyniki (czyli 
liczby). Jeśli argument ten nie zostanie podany, to liczby zostaną 
wypisane do <tt class="backtick">stdout</tt> (czyli domyślnie na ekran). <span class="anchor" id="line-133"></span><span class="anchor" id="line-134"></span></p><p class="line862">Ponieważ argumenty są opcjonalne, a więc przed ich użyciem - odwołaniem do odpowiedniego elementu tablicy <tt class="backtick">argv</tt> sprawdzamy, czy element ten w ogóle istnieje. I tak na przykład sprawdzenie w <a class="http" href="http://pl.wikibooks.org/wiki/C/Operatory#Operator_wyra.C5.BCenia_warunkowego">wyrażeniu warunkowym</a> w linii 7, czy <tt class="backtick">argc&nbsp;&gt;&nbsp;1</tt> (czyli równe co najmniej 2) upewnia nas, że <tt class="backtick">argv[1]</tt> istnieje.  Podobnie postępujemy w kolejnych liniach dla dalszych elementów <tt class="backtick">argv</tt>. <span class="anchor" id="line-135"></span><span class="anchor" id="line-136"></span></p><p class="line862">Funkcja <tt class="backtick">rand</tt> zwraca liczbę całkowitą z zakresu od 0 do <tt class="backtick">RAND_MAX</tt> (<tt class="backtick">RAND_MAX</tt> to stała (tak naprawdę to tzw. <em>makro</em>,
 ale o tym później) zdefiniowana w bibliotece standardowej). Ponieważ 
nasz program ma zwracać wartości rzeczywiste, a więc przeliczymy 
zwróconą przez <tt class="backtick">rand</tt> wartość na odpowiadający nam zakres. <span class="anchor" id="line-137"></span><span class="anchor" id="line-138"></span></p><p class="line874">Oto program p2.c: <span class="anchor" id="line-139"></span><span class="anchor" id="line-140"></span><span class="anchor" id="line-141"></span><span class="anchor" id="line-142"></span><span class="anchor" id="line-143"></span><span class="anchor" id="line-144"></span><span class="anchor" id="line-145"></span><span class="anchor" id="line-146"></span><span class="anchor" id="line-147"></span><span class="anchor" id="line-148"></span><span class="anchor" id="line-149"></span><span class="anchor" id="line-150"></span><span class="anchor" id="line-151"></span><span class="anchor" id="line-152"></span><span class="anchor" id="line-153"></span><span class="anchor" id="line-154"></span><span class="anchor" id="line-155"></span><span class="anchor" id="line-156"></span><span class="anchor" id="line-157"></span><span class="anchor" id="line-158"></span><span class="anchor" id="line-159"></span><span class="anchor" id="line-160"></span><span class="anchor" id="line-161"></span><span class="anchor" id="line-162"></span><span class="anchor" id="line-163"></span><span class="anchor" id="line-164"></span><span class="anchor" id="line-165"></span><span class="anchor" id="line-166"></span><span class="anchor" id="line-167"></span><span class="anchor" id="line-168"></span><span class="anchor" id="line-169"></span><span class="anchor" id="line-170"></span><span class="anchor" id="line-171"></span><span class="anchor" id="line-172"></span><span class="anchor" id="line-173"></span><span class="anchor" id="line-174"></span><span class="anchor" id="line-175"></span><span class="anchor" id="line-176"></span><span class="anchor" id="line-177"></span><span class="anchor" id="line-178"></span><span class="anchor" id="line-179"></span><span class="anchor" id="line-180"></span><span class="anchor" id="line-181"></span><span class="anchor" id="line-182"></span><span class="anchor" id="line-183"></span><span class="anchor" id="line-184"></span><span class="anchor" id="line-185"></span><span class="anchor" id="line-186"></span><span class="anchor" id="line-187"></span><span class="anchor" id="line-188"></span><span class="anchor" id="line-189"></span><span class="anchor" id="line-190"></span><span class="anchor" id="line-191"></span><span class="anchor" id="line-192"></span><span class="anchor" id="line-193"></span><span class="anchor" id="line-194"></span><span class="anchor" id="line-195"></span><span class="anchor" id="line-196"></span><span class="anchor" id="line-197"></span><span class="anchor" id="line-198"></span><span class="anchor" id="line-199"></span><span class="anchor" id="line-1-4"></span></p><div class="highlight cpp"><div class="codearea" dir="ltr" lang="en">
<script type="text/javascript">
document.write('<a href="#" onclick="return togglenumber(\'CA-3eccf4d9d5224d62eee7cc5b794cdce80bb74fa4\', 1, 1);" \
                class="codenumbers">Toggle line numbers<\/a>');
</script><a href="#" onclick="return togglenumber('CA-3eccf4d9d5224d62eee7cc5b794cdce80bb74fa4', 1, 1);" class="codenumbers">Toggle line numbers</a>
<pre dir="ltr" id="CA-3eccf4d9d5224d62eee7cc5b794cdce80bb74fa4" lang="en"><span class="line"><span class="LineNumber"><a href="#CA-3eccf4d9d5224d62eee7cc5b794cdce80bb74fa4_1">   1</a> </span><span class="LineAnchor" id="CA-3eccf4d9d5224d62eee7cc5b794cdce80bb74fa4_1"></span><span class="anchor" id="line-1-5"></span><span class="Preprc">#</span><span class="Preprc">include &lt;stdio.h&gt;           </span><span class="Preprc"></span></span>
<span class="line"><span class="LineNumber"><a href="#CA-3eccf4d9d5224d62eee7cc5b794cdce80bb74fa4_2">   2</a> </span><span class="LineAnchor" id="CA-3eccf4d9d5224d62eee7cc5b794cdce80bb74fa4_2"></span><span class="anchor" id="line-2-2"></span><span class="Preprc"></span><span class="Preprc">#</span><span class="Preprc">include &lt;stdlib.h&gt;          </span><span class="Preprc"></span></span>
<span class="line"><span class="LineNumber"><a href="#CA-3eccf4d9d5224d62eee7cc5b794cdce80bb74fa4_3">   3</a> </span><span class="LineAnchor" id="CA-3eccf4d9d5224d62eee7cc5b794cdce80bb74fa4_3"></span><span class="anchor" id="line-3-2"></span><span class="Preprc"></span><span class="Preprc">#</span><span class="Preprc">include &lt;time.h&gt;            </span><span class="Preprc"></span></span>
<span class="line"><span class="LineNumber"><a href="#CA-3eccf4d9d5224d62eee7cc5b794cdce80bb74fa4_4">   4</a> </span><span class="LineAnchor" id="CA-3eccf4d9d5224d62eee7cc5b794cdce80bb74fa4_4"></span><span class="anchor" id="line-4-2"></span><span class="Preprc"></span></span>
<span class="line"><span class="LineNumber"><a href="#CA-3eccf4d9d5224d62eee7cc5b794cdce80bb74fa4_5">   5</a> </span><span class="LineAnchor" id="CA-3eccf4d9d5224d62eee7cc5b794cdce80bb74fa4_5"></span><span class="anchor" id="line-5-2"></span><span class="ResWord">int</span> <span class="ID">main</span>(<span class="ResWord">int</span> <span class="ID">argc</span>, <span class="ResWord">char</span> *<span class="ID">argv</span>[])</span>
<span class="line"><span class="LineNumber"><a href="#CA-3eccf4d9d5224d62eee7cc5b794cdce80bb74fa4_6">   6</a> </span><span class="LineAnchor" id="CA-3eccf4d9d5224d62eee7cc5b794cdce80bb74fa4_6"></span><span class="anchor" id="line-6-2"></span>{</span>
<span class="line"><span class="LineNumber"><a href="#CA-3eccf4d9d5224d62eee7cc5b794cdce80bb74fa4_7">   7</a> </span><span class="LineAnchor" id="CA-3eccf4d9d5224d62eee7cc5b794cdce80bb74fa4_7"></span><span class="anchor" id="line-7-2"></span>        <span class="ResWord">int</span>             <span class="ID">n</span> = <span class="ID">argc</span> &gt; <span class="Number">1</span> ? <span class="ID">atoi</span>(<span class="ID">argv</span>[<span class="Number">1</span>]) : <span class="Number">10</span>;      <span class="Comment">/* ile liczb? domyslnie</span></span>
<span class="line"><span class="LineNumber"><a href="#CA-3eccf4d9d5224d62eee7cc5b794cdce80bb74fa4_8">   8</a> </span><span class="LineAnchor" id="CA-3eccf4d9d5224d62eee7cc5b794cdce80bb74fa4_8"></span><span class="anchor" id="line-8-2"></span><span class="Comment">                                                                 * 10 */</span></span>
<span class="line"><span class="LineNumber"><a href="#CA-3eccf4d9d5224d62eee7cc5b794cdce80bb74fa4_9">   9</a> </span><span class="LineAnchor" id="CA-3eccf4d9d5224d62eee7cc5b794cdce80bb74fa4_9"></span><span class="anchor" id="line-9-2"></span>        <span class="ResWord">double</span>          <span class="ID">min</span> = <span class="ID">argc</span> &gt; <span class="Number">2</span> ? <span class="ID">atof</span>(<span class="ID">argv</span>[<span class="Number">2</span>]) : <span class="Number">0.0</span>;   <span class="Comment">/* minimalna możliwa</span></span>
<span class="line"><span class="LineNumber"><a href="#CA-3eccf4d9d5224d62eee7cc5b794cdce80bb74fa4_10">  10</a> </span><span class="LineAnchor" id="CA-3eccf4d9d5224d62eee7cc5b794cdce80bb74fa4_10"></span><span class="anchor" id="line-10-2"></span><span class="Comment">                                                                 * wartość? domyślnie</span></span>
<span class="line"><span class="LineNumber"><a href="#CA-3eccf4d9d5224d62eee7cc5b794cdce80bb74fa4_11">  11</a> </span><span class="LineAnchor" id="CA-3eccf4d9d5224d62eee7cc5b794cdce80bb74fa4_11"></span><span class="anchor" id="line-11-2"></span><span class="Comment">                                                                 * 0 */</span></span>
<span class="line"><span class="LineNumber"><a href="#CA-3eccf4d9d5224d62eee7cc5b794cdce80bb74fa4_12">  12</a> </span><span class="LineAnchor" id="CA-3eccf4d9d5224d62eee7cc5b794cdce80bb74fa4_12"></span><span class="anchor" id="line-12-2"></span>        <span class="ResWord">double</span>          <span class="ID">max</span> = <span class="ID">argc</span> &gt; <span class="Number">3</span> ? <span class="ID">atof</span>(<span class="ID">argv</span>[<span class="Number">3</span>]) : <span class="Number">1.0</span>;   <span class="Comment">/* maksymalna możliwa</span></span>
<span class="line"><span class="LineNumber"><a href="#CA-3eccf4d9d5224d62eee7cc5b794cdce80bb74fa4_13">  13</a> </span><span class="LineAnchor" id="CA-3eccf4d9d5224d62eee7cc5b794cdce80bb74fa4_13"></span><span class="anchor" id="line-13-2"></span><span class="Comment">                                                                 * wartość? domyślnie</span></span>
<span class="line"><span class="LineNumber"><a href="#CA-3eccf4d9d5224d62eee7cc5b794cdce80bb74fa4_14">  14</a> </span><span class="LineAnchor" id="CA-3eccf4d9d5224d62eee7cc5b794cdce80bb74fa4_14"></span><span class="anchor" id="line-14-2"></span><span class="Comment">                                                                 * 1 */</span></span>
<span class="line"><span class="LineNumber"><a href="#CA-3eccf4d9d5224d62eee7cc5b794cdce80bb74fa4_15">  15</a> </span><span class="LineAnchor" id="CA-3eccf4d9d5224d62eee7cc5b794cdce80bb74fa4_15"></span><span class="anchor" id="line-15-2"></span></span>
<span class="line"><span class="LineNumber"><a href="#CA-3eccf4d9d5224d62eee7cc5b794cdce80bb74fa4_16">  16</a> </span><span class="LineAnchor" id="CA-3eccf4d9d5224d62eee7cc5b794cdce80bb74fa4_16"></span><span class="anchor" id="line-16-2"></span>        <span class="ID">FILE</span>           *<span class="ID">out</span> = <span class="ID">argc</span> &gt; <span class="Number">4</span> ? <span class="ID">fopen</span>(<span class="ID">argv</span>[<span class="Number">4</span>], <span class="String">"</span><span class="String">w</span><span class="String">"</span>) : <span class="ID">stdout</span>;  <span class="Comment">/* do jakiego pliku</span></span>
<span class="line"><span class="LineNumber"><a href="#CA-3eccf4d9d5224d62eee7cc5b794cdce80bb74fa4_17">  17</a> </span><span class="LineAnchor" id="CA-3eccf4d9d5224d62eee7cc5b794cdce80bb74fa4_17"></span><span class="anchor" id="line-17-2"></span><span class="Comment">                                                                         * pisać? domyślnie na</span></span>
<span class="line"><span class="LineNumber"><a href="#CA-3eccf4d9d5224d62eee7cc5b794cdce80bb74fa4_18">  18</a> </span><span class="LineAnchor" id="CA-3eccf4d9d5224d62eee7cc5b794cdce80bb74fa4_18"></span><span class="anchor" id="line-18-2"></span><span class="Comment">                                                                         * konsolę */</span></span>
<span class="line"><span class="LineNumber"><a href="#CA-3eccf4d9d5224d62eee7cc5b794cdce80bb74fa4_19">  19</a> </span><span class="LineAnchor" id="CA-3eccf4d9d5224d62eee7cc5b794cdce80bb74fa4_19"></span><span class="anchor" id="line-19-2"></span>        <span class="Comment">/*</span></span>
<span class="line"><span class="LineNumber"><a href="#CA-3eccf4d9d5224d62eee7cc5b794cdce80bb74fa4_20">  20</a> </span><span class="LineAnchor" id="CA-3eccf4d9d5224d62eee7cc5b794cdce80bb74fa4_20"></span><span class="anchor" id="line-20-2"></span><span class="Comment">         * fopen otwiera plik, którego nazwę określa pierwszy argument</span></span>
<span class="line"><span class="LineNumber"><a href="#CA-3eccf4d9d5224d62eee7cc5b794cdce80bb74fa4_21">  21</a> </span><span class="LineAnchor" id="CA-3eccf4d9d5224d62eee7cc5b794cdce80bb74fa4_21"></span><span class="anchor" id="line-21-2"></span><span class="Comment">         * drugi argument mówi, w jakim celu plik otwieramy - tutaj "w"</span></span>
<span class="line"><span class="LineNumber"><a href="#CA-3eccf4d9d5224d62eee7cc5b794cdce80bb74fa4_22">  22</a> </span><span class="LineAnchor" id="CA-3eccf4d9d5224d62eee7cc5b794cdce80bb74fa4_22"></span><span class="anchor" id="line-22-2"></span><span class="Comment">         * (write) określa, że chcemy coś do niego zapisać. fopen zwróci</span></span>
<span class="line"><span class="LineNumber"><a href="#CA-3eccf4d9d5224d62eee7cc5b794cdce80bb74fa4_23">  23</a> </span><span class="LineAnchor" id="CA-3eccf4d9d5224d62eee7cc5b794cdce80bb74fa4_23"></span><span class="anchor" id="line-23-2"></span><span class="Comment">         * specjalną wartość - NULL, jeśli pliku nie uda się otworzyć</span></span>
<span class="line"><span class="LineNumber"><a href="#CA-3eccf4d9d5224d62eee7cc5b794cdce80bb74fa4_24">  24</a> </span><span class="LineAnchor" id="CA-3eccf4d9d5224d62eee7cc5b794cdce80bb74fa4_24"></span><span class="anchor" id="line-24-2"></span><span class="Comment">         */</span></span>
<span class="line"><span class="LineNumber"><a href="#CA-3eccf4d9d5224d62eee7cc5b794cdce80bb74fa4_25">  25</a> </span><span class="LineAnchor" id="CA-3eccf4d9d5224d62eee7cc5b794cdce80bb74fa4_25"></span><span class="anchor" id="line-25-2"></span></span>
<span class="line"><span class="LineNumber"><a href="#CA-3eccf4d9d5224d62eee7cc5b794cdce80bb74fa4_26">  26</a> </span><span class="LineAnchor" id="CA-3eccf4d9d5224d62eee7cc5b794cdce80bb74fa4_26"></span><span class="anchor" id="line-26-2"></span>        <span class="ResWord">int</span>             <span class="ID">i</span>;</span>
<span class="line"><span class="LineNumber"><a href="#CA-3eccf4d9d5224d62eee7cc5b794cdce80bb74fa4_27">  27</a> </span><span class="LineAnchor" id="CA-3eccf4d9d5224d62eee7cc5b794cdce80bb74fa4_27"></span><span class="anchor" id="line-27-2"></span></span>
<span class="line"><span class="LineNumber"><a href="#CA-3eccf4d9d5224d62eee7cc5b794cdce80bb74fa4_28">  28</a> </span><span class="LineAnchor" id="CA-3eccf4d9d5224d62eee7cc5b794cdce80bb74fa4_28"></span><span class="anchor" id="line-28-2"></span>        <span class="ResWord">if</span> (<span class="ID">out</span> == <span class="ResWord">NULL</span>) {      <span class="Comment">/* sprawdzamy, czy udało się otworzyć plik</span></span>
<span class="line"><span class="LineNumber"><a href="#CA-3eccf4d9d5224d62eee7cc5b794cdce80bb74fa4_29">  29</a> </span><span class="LineAnchor" id="CA-3eccf4d9d5224d62eee7cc5b794cdce80bb74fa4_29"></span><span class="anchor" id="line-29-2"></span><span class="Comment">                                 * podany jako argv[4] */</span></span>
<span class="line"><span class="LineNumber"><a href="#CA-3eccf4d9d5224d62eee7cc5b794cdce80bb74fa4_30">  30</a> </span><span class="LineAnchor" id="CA-3eccf4d9d5224d62eee7cc5b794cdce80bb74fa4_30"></span><span class="anchor" id="line-30-2"></span>                <span class="Comment">/* Uwaga: stdout != NULL (na pewno) */</span></span>
<span class="line"><span class="LineNumber"><a href="#CA-3eccf4d9d5224d62eee7cc5b794cdce80bb74fa4_31">  31</a> </span><span class="LineAnchor" id="CA-3eccf4d9d5224d62eee7cc5b794cdce80bb74fa4_31"></span><span class="anchor" id="line-31-2"></span>                <span class="ID">fprintf</span>(<span class="ID">stderr</span>, <span class="String">"</span><span class="String">%s: nie moge pisac do %s</span><span class="SPChar">\n</span><span class="String">"</span>, <span class="ID">argv</span>[<span class="Number">0</span>], <span class="ID">argv</span>[<span class="Number">4</span>]);</span>
<span class="line"><span class="LineNumber"><a href="#CA-3eccf4d9d5224d62eee7cc5b794cdce80bb74fa4_32">  32</a> </span><span class="LineAnchor" id="CA-3eccf4d9d5224d62eee7cc5b794cdce80bb74fa4_32"></span><span class="anchor" id="line-32-2"></span>                <span class="ResWord">return</span> <span class="Number">1</span>;</span>
<span class="line"><span class="LineNumber"><a href="#CA-3eccf4d9d5224d62eee7cc5b794cdce80bb74fa4_33">  33</a> </span><span class="LineAnchor" id="CA-3eccf4d9d5224d62eee7cc5b794cdce80bb74fa4_33"></span><span class="anchor" id="line-33-2"></span>        }</span>
<span class="line"><span class="LineNumber"><a href="#CA-3eccf4d9d5224d62eee7cc5b794cdce80bb74fa4_34">  34</a> </span><span class="LineAnchor" id="CA-3eccf4d9d5224d62eee7cc5b794cdce80bb74fa4_34"></span><span class="anchor" id="line-34-2"></span>        <span class="ID">srand</span>(<span class="ID">time</span>(<span class="ResWord">NULL</span>));      <span class="Comment">/* inicjujemy gen. losowy wartością z</span></span>
<span class="line"><span class="LineNumber"><a href="#CA-3eccf4d9d5224d62eee7cc5b794cdce80bb74fa4_35">  35</a> </span><span class="LineAnchor" id="CA-3eccf4d9d5224d62eee7cc5b794cdce80bb74fa4_35"></span><span class="anchor" id="line-35-2"></span><span class="Comment">                                 * zegara */</span></span>
<span class="line"><span class="LineNumber"><a href="#CA-3eccf4d9d5224d62eee7cc5b794cdce80bb74fa4_36">  36</a> </span><span class="LineAnchor" id="CA-3eccf4d9d5224d62eee7cc5b794cdce80bb74fa4_36"></span><span class="anchor" id="line-36-2"></span></span>
<span class="line"><span class="LineNumber"><a href="#CA-3eccf4d9d5224d62eee7cc5b794cdce80bb74fa4_37">  37</a> </span><span class="LineAnchor" id="CA-3eccf4d9d5224d62eee7cc5b794cdce80bb74fa4_37"></span><span class="anchor" id="line-37-2"></span>        <span class="Comment">/*</span></span>
<span class="line"><span class="LineNumber"><a href="#CA-3eccf4d9d5224d62eee7cc5b794cdce80bb74fa4_38">  38</a> </span><span class="LineAnchor" id="CA-3eccf4d9d5224d62eee7cc5b794cdce80bb74fa4_38"></span><span class="anchor" id="line-38-2"></span><span class="Comment">         * Petla drukujaca po LL liczb w jednej linii Do zmiany linii</span></span>
<span class="line"><span class="LineNumber"><a href="#CA-3eccf4d9d5224d62eee7cc5b794cdce80bb74fa4_39">  39</a> </span><span class="LineAnchor" id="CA-3eccf4d9d5224d62eee7cc5b794cdce80bb74fa4_39"></span><span class="anchor" id="line-39-2"></span><span class="Comment">         * używana jest sztuczka z formatem drukujacym \n gdy i jest</span></span>
<span class="line"><span class="LineNumber"><a href="#CA-3eccf4d9d5224d62eee7cc5b794cdce80bb74fa4_40">  40</a> </span><span class="LineAnchor" id="CA-3eccf4d9d5224d62eee7cc5b794cdce80bb74fa4_40"></span><span class="anchor" id="line-40-2"></span><span class="Comment">         * wielokrotnoscia LL</span></span>
<span class="line"><span class="LineNumber"><a href="#CA-3eccf4d9d5224d62eee7cc5b794cdce80bb74fa4_41">  41</a> </span><span class="LineAnchor" id="CA-3eccf4d9d5224d62eee7cc5b794cdce80bb74fa4_41"></span><span class="anchor" id="line-41-2"></span><span class="Comment">         */</span></span>
<span class="line"><span class="LineNumber"><a href="#CA-3eccf4d9d5224d62eee7cc5b794cdce80bb74fa4_42">  42</a> </span><span class="LineAnchor" id="CA-3eccf4d9d5224d62eee7cc5b794cdce80bb74fa4_42"></span><span class="anchor" id="line-42-2"></span>        <span class="ResWord">for</span> (<span class="ID">i</span> = <span class="Number">0</span>; <span class="ID">i</span> &lt; <span class="ID">n</span>; <span class="ID">i</span>++) {</span>
<span class="line"><span class="LineNumber"><a href="#CA-3eccf4d9d5224d62eee7cc5b794cdce80bb74fa4_43">  43</a> </span><span class="LineAnchor" id="CA-3eccf4d9d5224d62eee7cc5b794cdce80bb74fa4_43"></span><span class="anchor" id="line-43-2"></span>                <span class="ResWord">double</span>          <span class="ID">ulamek</span> = (<span class="ResWord">double</span>)<span class="ID">rand</span>() / <span class="ID">RAND_MAX</span>;</span>
<span class="line"><span class="LineNumber"><a href="#CA-3eccf4d9d5224d62eee7cc5b794cdce80bb74fa4_44">  44</a> </span><span class="LineAnchor" id="CA-3eccf4d9d5224d62eee7cc5b794cdce80bb74fa4_44"></span><span class="anchor" id="line-44-2"></span>                <span class="ID">fprintf</span>(<span class="ID">out</span>, <span class="String">"</span><span class="String">%g%c</span><span class="String">"</span>,</span>
<span class="line"><span class="LineNumber"><a href="#CA-3eccf4d9d5224d62eee7cc5b794cdce80bb74fa4_45">  45</a> </span><span class="LineAnchor" id="CA-3eccf4d9d5224d62eee7cc5b794cdce80bb74fa4_45"></span><span class="anchor" id="line-45-2"></span>                        <span class="ID">min</span> + (<span class="ID">max</span> - <span class="ID">min</span>) * <span class="ID">ulamek</span>, (<span class="ID">i</span> % <span class="ID">LL</span> == <span class="ID">LL</span> - <span class="Number">1</span> ? <span class="Char">'\n'</span> : <span class="Char">' '</span>)</span>
<span class="line"><span class="LineNumber"><a href="#CA-3eccf4d9d5224d62eee7cc5b794cdce80bb74fa4_46">  46</a> </span><span class="LineAnchor" id="CA-3eccf4d9d5224d62eee7cc5b794cdce80bb74fa4_46"></span><span class="anchor" id="line-46-2"></span>                        );</span>
<span class="line"><span class="LineNumber"><a href="#CA-3eccf4d9d5224d62eee7cc5b794cdce80bb74fa4_47">  47</a> </span><span class="LineAnchor" id="CA-3eccf4d9d5224d62eee7cc5b794cdce80bb74fa4_47"></span><span class="anchor" id="line-47-2"></span>        }</span>
<span class="line"><span class="LineNumber"><a href="#CA-3eccf4d9d5224d62eee7cc5b794cdce80bb74fa4_48">  48</a> </span><span class="LineAnchor" id="CA-3eccf4d9d5224d62eee7cc5b794cdce80bb74fa4_48"></span><span class="anchor" id="line-48-2"></span>        <span class="ResWord">if</span> (<span class="ID">i</span> % <span class="ID">LL</span> != <span class="Number">0</span>)</span>
<span class="line"><span class="LineNumber"><a href="#CA-3eccf4d9d5224d62eee7cc5b794cdce80bb74fa4_49">  49</a> </span><span class="LineAnchor" id="CA-3eccf4d9d5224d62eee7cc5b794cdce80bb74fa4_49"></span><span class="anchor" id="line-49-2"></span>                <span class="ID">fprintf</span>(<span class="ID">out</span>, <span class="String">"</span><span class="SPChar">\n</span><span class="String">"</span>);</span>
<span class="line"><span class="LineNumber"><a href="#CA-3eccf4d9d5224d62eee7cc5b794cdce80bb74fa4_50">  50</a> </span><span class="LineAnchor" id="CA-3eccf4d9d5224d62eee7cc5b794cdce80bb74fa4_50"></span><span class="anchor" id="line-50-2"></span></span>
<span class="line"><span class="LineNumber"><a href="#CA-3eccf4d9d5224d62eee7cc5b794cdce80bb74fa4_51">  51</a> </span><span class="LineAnchor" id="CA-3eccf4d9d5224d62eee7cc5b794cdce80bb74fa4_51"></span><span class="anchor" id="line-51-1"></span>        <span class="Comment">/*</span></span>
<span class="line"><span class="LineNumber"><a href="#CA-3eccf4d9d5224d62eee7cc5b794cdce80bb74fa4_52">  52</a> </span><span class="LineAnchor" id="CA-3eccf4d9d5224d62eee7cc5b794cdce80bb74fa4_52"></span><span class="anchor" id="line-52-1"></span><span class="Comment">         * W zasadzie powinniśmy zamknąc plik, ale zaraz kończymy, więc i</span></span>
<span class="line"><span class="LineNumber"><a href="#CA-3eccf4d9d5224d62eee7cc5b794cdce80bb74fa4_53">  53</a> </span><span class="LineAnchor" id="CA-3eccf4d9d5224d62eee7cc5b794cdce80bb74fa4_53"></span><span class="anchor" id="line-53-1"></span><span class="Comment">         * tak zrobi to za nas system. A niedobrze byłoby zamknąć stdout !</span></span>
<span class="line"><span class="LineNumber"><a href="#CA-3eccf4d9d5224d62eee7cc5b794cdce80bb74fa4_54">  54</a> </span><span class="LineAnchor" id="CA-3eccf4d9d5224d62eee7cc5b794cdce80bb74fa4_54"></span><span class="anchor" id="line-54-1"></span><span class="Comment">         *</span></span>
<span class="line"><span class="LineNumber"><a href="#CA-3eccf4d9d5224d62eee7cc5b794cdce80bb74fa4_55">  55</a> </span><span class="LineAnchor" id="CA-3eccf4d9d5224d62eee7cc5b794cdce80bb74fa4_55"></span><span class="anchor" id="line-55-1"></span><span class="Comment">         * fclose( out );</span></span>
<span class="line"><span class="LineNumber"><a href="#CA-3eccf4d9d5224d62eee7cc5b794cdce80bb74fa4_56">  56</a> </span><span class="LineAnchor" id="CA-3eccf4d9d5224d62eee7cc5b794cdce80bb74fa4_56"></span><span class="anchor" id="line-56-1"></span><span class="Comment">         */</span></span>
<span class="line"><span class="LineNumber"><a href="#CA-3eccf4d9d5224d62eee7cc5b794cdce80bb74fa4_57">  57</a> </span><span class="LineAnchor" id="CA-3eccf4d9d5224d62eee7cc5b794cdce80bb74fa4_57"></span><span class="anchor" id="line-57-1"></span></span>
<span class="line"><span class="LineNumber"><a href="#CA-3eccf4d9d5224d62eee7cc5b794cdce80bb74fa4_58">  58</a> </span><span class="LineAnchor" id="CA-3eccf4d9d5224d62eee7cc5b794cdce80bb74fa4_58"></span><span class="anchor" id="line-58-1"></span>        <span class="ResWord">return</span> <span class="Number">0</span>;</span>
<span class="line"><span class="LineNumber"><a href="#CA-3eccf4d9d5224d62eee7cc5b794cdce80bb74fa4_59">  59</a> </span><span class="LineAnchor" id="CA-3eccf4d9d5224d62eee7cc5b794cdce80bb74fa4_59"></span><span class="anchor" id="line-59-1"></span>}</span>
</pre></div></div><span class="anchor" id="line-200"></span><span class="anchor" id="line-201"></span><p class="line874">Przeanalizujmy dokładnie kluczowy fragment kodu p2.c: <span class="anchor" id="line-202"></span><span class="anchor" id="line-203"></span><span class="anchor" id="line-204"></span><span class="anchor" id="line-205"></span><span class="anchor" id="line-206"></span><span class="anchor" id="line-207"></span><span class="anchor" id="line-208"></span><span class="anchor" id="line-209"></span></p><pre><span class="anchor" id="line-1-2"></span>        for (i = 0; i &lt; n; i++) {
<span class="anchor" id="line-2-1"></span>                double          ulamek = (double)rand() / RAND_MAX;
<span class="anchor" id="line-3-1"></span>                fprintf(out, "%g%c",
<span class="anchor" id="line-4-1"></span>                        min + (max - min) * ulamek, (i % LL == LL - 1 ? '\n' : ' ')
<span class="anchor" id="line-5-1"></span>                        );
<span class="anchor" id="line-6"></span>        }</pre><span class="anchor" id="line-210"></span><span class="anchor" id="line-211"></span><p class="line862">Pierwsza linia wewnątrz pętli for to wywołanie funkcji <tt class="backtick">rand</tt> generującej kolejną liczbę losową, przekształcenie zwracanego wyniku na typ <tt class="backtick">double</tt> (przez operację rzutowania <tt class="backtick">(double)</tt>), podzielenie rezultatu przez <tt class="backtick">RAND_MAX</tt> (dzięki wcześniejszemu przekształceniu zwróconej przez <tt class="backtick">rand</tt>
 wartości to dzielenie wykonywane jest na liczbach zmiennoprzecinkowych -
 działanie na liczbach całkowitych dawałoby wynik 0 lub 1) i wreszcie 
podstawienie rezultatu pod zmienną <tt class="backtick">ulamek</tt>. W kolejnej linii wartość ta jest odwzorowywana na podany przez użytkownika zakres <tt class="backtick">min</tt>-<tt class="backtick">max</tt> przez wyrażenie <span class="anchor" id="line-212"></span><span class="anchor" id="line-213"></span><span class="anchor" id="line-214"></span><span class="anchor" id="line-1-6"></span></p><div class="highlight cpp"><div class="codearea" dir="ltr" lang="en">
<script type="text/javascript">
document.write('<a href="#" onclick="return togglenumber(\'CA-cda0cbf4d945a9989039d253413d0119c990b073\', 1, 1);" \
                class="codenumbers">Toggle line numbers<\/a>');
</script><a href="#" onclick="return togglenumber('CA-cda0cbf4d945a9989039d253413d0119c990b073', 1, 1);" class="codenumbers">Toggle line numbers</a>
<pre dir="ltr" id="CA-cda0cbf4d945a9989039d253413d0119c990b073" lang="en"><span class="line"><span class="LineNumber"><a href="#CA-cda0cbf4d945a9989039d253413d0119c990b073_1">   1</a> </span><span class="LineAnchor" id="CA-cda0cbf4d945a9989039d253413d0119c990b073_1"></span><span class="anchor" id="line-1-7"></span>   <span class="ID">min</span> + (<span class="ID">max</span> - <span class="ID">min</span>) * <span class="ID">ulamek</span></span>
</pre></div></div><span class="anchor" id="line-215"></span><p class="line862">i następnie wypisywana przez instrukcję wywołującą systemową funkcję <tt class="backtick">fprintf</tt> do strumienia <tt class="backtick">out</tt>. Użyty w wywołaniu <tt class="backtick">fprintf</tt> format <tt class="backtick">"%g%c"</tt>
 powoduje wypisanie liczby rzeczywistej w postaci wygodnej dla człowieka
 oraz dopisanie po niej pojedynczego znaku, określanego przez kolejny 
(czwarty) argument funkcji <tt class="backtick">fprintf</tt>: <span class="anchor" id="line-216"></span><span class="anchor" id="line-217"></span><span class="anchor" id="line-218"></span></p><pre><span class="anchor" id="line-1-3"></span>   (i % LL == LL - 1 ? '\n' : ' ')</pre><span class="anchor" id="line-219"></span><p class="line862">To <a class="http" href="http://pl.wikibooks.org/wiki/C/Operatory#Operator_wyra.C5.BCenia_warunkowego">wyrażenie warunkowe</a>, które zwraca znak nowej linii (<tt class="backtick">\n</tt>) jeśli zmienna <tt class="backtick">i</tt> dzieli się bez reszty przez stałą <tt class="backtick">LL</tt> i spację w innym przypadku. Taka "sztuczka" spowoduje, że nasz program będzie wypisywał po <tt class="backtick">LL</tt> liczb w każdej linii <span class="anchor" id="line-220"></span>pliku wynikowego. <span class="anchor" id="line-221"></span><span class="anchor" id="line-222"></span></p><p class="line862">Uważny obserwator zauważył pewnie, że stała <tt class="backtick">LL</tt> nie została w programie zdefiniowana. Można to zrobić przez umieszczenie na początku pliku instrukcji preprocesora <tt class="backtick">define</tt>, np. aby wypisywac po 5 liczb w jednej linii: <span class="anchor" id="line-223"></span><span class="anchor" id="line-224"></span><span class="anchor" id="line-225"></span><span class="anchor" id="line-1-8"></span></p><div class="highlight cpp"><div class="codearea" dir="ltr" lang="en">
<script type="text/javascript">
document.write('<a href="#" onclick="return togglenumber(\'CA-6b1564fa6e5c7a7c24017cbe38ad9d4399db0dc5\', 1, 1);" \
                class="codenumbers">Toggle line numbers<\/a>');
</script><a href="#" onclick="return togglenumber('CA-6b1564fa6e5c7a7c24017cbe38ad9d4399db0dc5', 1, 1);" class="codenumbers">Toggle line numbers</a>
<pre dir="ltr" id="CA-6b1564fa6e5c7a7c24017cbe38ad9d4399db0dc5" lang="en"><span class="line"><span class="LineNumber"><a href="#CA-6b1564fa6e5c7a7c24017cbe38ad9d4399db0dc5_1">   1</a> </span><span class="LineAnchor" id="CA-6b1564fa6e5c7a7c24017cbe38ad9d4399db0dc5_1"></span><span class="anchor" id="line-1-9"></span><span class="Preprc">   #</span><span class="Preprc">define LL 5</span><span class="Preprc"></span></span>
<span class="line"><span class="LineNumber"><a href="#CA-6b1564fa6e5c7a7c24017cbe38ad9d4399db0dc5_2">   2</a> </span><span class="LineAnchor" id="CA-6b1564fa6e5c7a7c24017cbe38ad9d4399db0dc5_2"></span><span class="anchor" id="line-2-3"></span><span class="Preprc"></span></span>
</pre></div></div><span class="anchor" id="line-226"></span><p class="line862">ale ten sam efekt możemy osiągnąć na etapie kompilacji programu przy pomocy opcji <tt class="backtick">-D</tt> kompilatora: <span class="anchor" id="line-227"></span><span class="anchor" id="line-228"></span><span class="anchor" id="line-229"></span><span class="anchor" id="line-230"></span><span class="anchor" id="line-231"></span><span class="anchor" id="line-232"></span><span class="anchor" id="line-233"></span><span class="anchor" id="line-234"></span><span class="anchor" id="line-235"></span><span class="anchor" id="line-236"></span><span class="anchor" id="line-237"></span><span class="anchor" id="line-238"></span><span class="anchor" id="line-239"></span></p><pre><span class="anchor" id="line-1-4"></span>volt:~/lmp/lmp2/gr1&gt; cc -Wall -ansi -pedantic -DLL=5 p2.c
<span class="anchor" id="line-2-2"></span>volt:~/lmp/lmp2/gr1&gt; ./a.out
<span class="anchor" id="line-3-2"></span>0.777234 0.974562 0.47057 0.870039 0.74157
<span class="anchor" id="line-4-2"></span>0.559945 0.00300529 0.509885 0.629421 0.673225
<span class="anchor" id="line-5-2"></span>volt:~/lmp/lmp2/gr1&gt; ./a.out 22
<span class="anchor" id="line-6-1"></span>0.777273 0.632251 0.248597 0.163289 0.405406
<span class="anchor" id="line-7"></span>0.654741 0.238228 0.904208 0.0259027 0.346689
<span class="anchor" id="line-8"></span>0.808119 0.0560304 0.703224 0.0933425 0.807951
<span class="anchor" id="line-9"></span>0.226861 0.845113 0.814212 0.454461 0.132674
<span class="anchor" id="line-10"></span>0.850929 0.561807
<span class="anchor" id="line-11"></span>volt:~/lmp/lmp2/gr1&gt;</pre><span class="anchor" id="line-240"></span><span class="anchor" id="line-241"></span><p class="line867"><strong>Ćwiczenia do wykonania:</strong> <span class="anchor" id="line-242"></span></p><ul><li>sprawdzić, jak reaguje program na wprowadzenie różnych argumentów, <span class="anchor" id="line-243"></span></li><li><p class="line862">sprawdzić, jak zachowuje się program po usunięciu wywołania funkcji <tt class="backtick">srand</tt>, <span class="anchor" id="line-244"></span></p></li><li><p class="line862">wprowadzić do programu polecenie <tt class="backtick">#define</tt> i zaobserwować, jakie skutki to powoduje (zwłaszcza łącznie z użyciem opcji <tt class="backtick">-D</tt>), <span class="anchor" id="line-245"></span></p></li><li>wygenerować duży plik z danymi (1000000 liczb). <span class="anchor" id="line-246"></span><span class="anchor" id="line-247"></span></li></ul><p class="line867">
</p><h5 id="Trzeci_program">Trzeci program</h5>
<span class="anchor" id="line-248"></span><span class="anchor" id="line-249"></span><p class="line862">Trzeci program przeczyta wszystkie liczby z wygenerowanego przez nas pliku z danymi, obliczy ich liczbę, sumę, <a class="http" href="http://pl.wikipedia.org/wiki/%C5%9Arednia_arytmetyczna">wartość średnią</a> i <a class="http" href="http://pl.wikipedia.org/wiki/Odchylenie_standardowe">odchylenie standardowe</a>. <span class="anchor" id="line-250"></span><span class="anchor" id="line-251"></span></p><p class="line874">Oto on (p3.c): <span class="anchor" id="line-252"></span><span class="anchor" id="line-253"></span><span class="anchor" id="line-254"></span><span class="anchor" id="line-255"></span><span class="anchor" id="line-256"></span><span class="anchor" id="line-257"></span><span class="anchor" id="line-258"></span><span class="anchor" id="line-259"></span><span class="anchor" id="line-260"></span><span class="anchor" id="line-261"></span><span class="anchor" id="line-262"></span><span class="anchor" id="line-263"></span><span class="anchor" id="line-264"></span><span class="anchor" id="line-265"></span><span class="anchor" id="line-266"></span><span class="anchor" id="line-267"></span><span class="anchor" id="line-268"></span><span class="anchor" id="line-269"></span><span class="anchor" id="line-270"></span><span class="anchor" id="line-271"></span><span class="anchor" id="line-272"></span><span class="anchor" id="line-273"></span><span class="anchor" id="line-274"></span><span class="anchor" id="line-275"></span><span class="anchor" id="line-276"></span><span class="anchor" id="line-277"></span><span class="anchor" id="line-278"></span><span class="anchor" id="line-279"></span><span class="anchor" id="line-280"></span><span class="anchor" id="line-281"></span><span class="anchor" id="line-282"></span><span class="anchor" id="line-1-10"></span></p><div class="highlight cpp"><div class="codearea" dir="ltr" lang="en">
<script type="text/javascript">
document.write('<a href="#" onclick="return togglenumber(\'CA-19381157ca92d1f81a259f332bf545969cb5bb35\', 1, 1);" \
                class="codenumbers">Toggle line numbers<\/a>');
</script><a href="#" onclick="return togglenumber('CA-19381157ca92d1f81a259f332bf545969cb5bb35', 1, 1);" class="codenumbers">Toggle line numbers</a>
<pre dir="ltr" id="CA-19381157ca92d1f81a259f332bf545969cb5bb35" lang="en"><span class="line"><span class="LineNumber"><a href="#CA-19381157ca92d1f81a259f332bf545969cb5bb35_1">   1</a> </span><span class="LineAnchor" id="CA-19381157ca92d1f81a259f332bf545969cb5bb35_1"></span><span class="anchor" id="line-1-11"></span><span class="Preprc">#</span><span class="Preprc">include &lt;stdio.h&gt;</span><span class="Preprc"></span></span>
<span class="line"><span class="LineNumber"><a href="#CA-19381157ca92d1f81a259f332bf545969cb5bb35_2">   2</a> </span><span class="LineAnchor" id="CA-19381157ca92d1f81a259f332bf545969cb5bb35_2"></span><span class="anchor" id="line-2-4"></span><span class="Preprc"></span><span class="Preprc">#</span><span class="Preprc">include &lt;math.h&gt;</span><span class="Preprc"></span></span>
<span class="line"><span class="LineNumber"><a href="#CA-19381157ca92d1f81a259f332bf545969cb5bb35_3">   3</a> </span><span class="LineAnchor" id="CA-19381157ca92d1f81a259f332bf545969cb5bb35_3"></span><span class="anchor" id="line-3-3"></span><span class="Preprc"></span></span>
<span class="line"><span class="LineNumber"><a href="#CA-19381157ca92d1f81a259f332bf545969cb5bb35_4">   4</a> </span><span class="LineAnchor" id="CA-19381157ca92d1f81a259f332bf545969cb5bb35_4"></span><span class="anchor" id="line-4-3"></span><span class="ResWord">int</span></span>
<span class="line"><span class="LineNumber"><a href="#CA-19381157ca92d1f81a259f332bf545969cb5bb35_5">   5</a> </span><span class="LineAnchor" id="CA-19381157ca92d1f81a259f332bf545969cb5bb35_5"></span><span class="anchor" id="line-5-3"></span><span class="ID">main</span>(<span class="ResWord">int</span> <span class="ID">argc</span>, <span class="ResWord">char</span> *<span class="ID">argv</span>[])</span>
<span class="line"><span class="LineNumber"><a href="#CA-19381157ca92d1f81a259f332bf545969cb5bb35_6">   6</a> </span><span class="LineAnchor" id="CA-19381157ca92d1f81a259f332bf545969cb5bb35_6"></span><span class="anchor" id="line-6-3"></span>{</span>
<span class="line"><span class="LineNumber"><a href="#CA-19381157ca92d1f81a259f332bf545969cb5bb35_7">   7</a> </span><span class="LineAnchor" id="CA-19381157ca92d1f81a259f332bf545969cb5bb35_7"></span><span class="anchor" id="line-7-3"></span>        <span class="ID">FILE</span>           *<span class="ID">in</span> = <span class="ID">argc</span> &gt; <span class="Number">1</span> ? <span class="ID">fopen</span>(<span class="ID">argv</span>[<span class="Number">1</span>], <span class="String">"</span><span class="String">r</span><span class="String">"</span>) : <span class="ID">stdin</span>;</span>
<span class="line"><span class="LineNumber"><a href="#CA-19381157ca92d1f81a259f332bf545969cb5bb35_8">   8</a> </span><span class="LineAnchor" id="CA-19381157ca92d1f81a259f332bf545969cb5bb35_8"></span><span class="anchor" id="line-8-3"></span></span>
<span class="line"><span class="LineNumber"><a href="#CA-19381157ca92d1f81a259f332bf545969cb5bb35_9">   9</a> </span><span class="LineAnchor" id="CA-19381157ca92d1f81a259f332bf545969cb5bb35_9"></span><span class="anchor" id="line-9-3"></span>        <span class="ResWord">if</span> (<span class="ID">in</span> != <span class="ResWord">NULL</span>) {</span>
<span class="line"><span class="LineNumber"><a href="#CA-19381157ca92d1f81a259f332bf545969cb5bb35_10">  10</a> </span><span class="LineAnchor" id="CA-19381157ca92d1f81a259f332bf545969cb5bb35_10"></span><span class="anchor" id="line-10-3"></span>                <span class="ResWord">double</span>          <span class="ID">sum</span> = <span class="Number">0</span>;</span>
<span class="line"><span class="LineNumber"><a href="#CA-19381157ca92d1f81a259f332bf545969cb5bb35_11">  11</a> </span><span class="LineAnchor" id="CA-19381157ca92d1f81a259f332bf545969cb5bb35_11"></span><span class="anchor" id="line-11-3"></span>                <span class="ResWord">double</span>          <span class="ID">sum2</span> = <span class="Number">0</span>;</span>
<span class="line"><span class="LineNumber"><a href="#CA-19381157ca92d1f81a259f332bf545969cb5bb35_12">  12</a> </span><span class="LineAnchor" id="CA-19381157ca92d1f81a259f332bf545969cb5bb35_12"></span><span class="anchor" id="line-12-3"></span>                <span class="ResWord">double</span>          <span class="ID">x</span>;</span>
<span class="line"><span class="LineNumber"><a href="#CA-19381157ca92d1f81a259f332bf545969cb5bb35_13">  13</a> </span><span class="LineAnchor" id="CA-19381157ca92d1f81a259f332bf545969cb5bb35_13"></span><span class="anchor" id="line-13-3"></span>                <span class="ResWord">int</span>             <span class="ID">n</span> = <span class="Number">0</span>;</span>
<span class="line"><span class="LineNumber"><a href="#CA-19381157ca92d1f81a259f332bf545969cb5bb35_14">  14</a> </span><span class="LineAnchor" id="CA-19381157ca92d1f81a259f332bf545969cb5bb35_14"></span><span class="anchor" id="line-14-3"></span></span>
<span class="line"><span class="LineNumber"><a href="#CA-19381157ca92d1f81a259f332bf545969cb5bb35_15">  15</a> </span><span class="LineAnchor" id="CA-19381157ca92d1f81a259f332bf545969cb5bb35_15"></span><span class="anchor" id="line-15-3"></span>                <span class="ResWord">while</span> (<span class="ID">fscanf</span>(<span class="ID">in</span>, <span class="String">"</span><span class="String">%lf</span><span class="String">"</span>, &amp;<span class="ID">x</span>) == <span class="Number">1</span>) {</span>
<span class="line"><span class="LineNumber"><a href="#CA-19381157ca92d1f81a259f332bf545969cb5bb35_16">  16</a> </span><span class="LineAnchor" id="CA-19381157ca92d1f81a259f332bf545969cb5bb35_16"></span><span class="anchor" id="line-16-3"></span>                        <span class="ID">sum</span> += <span class="ID">x</span>;</span>
<span class="line"><span class="LineNumber"><a href="#CA-19381157ca92d1f81a259f332bf545969cb5bb35_17">  17</a> </span><span class="LineAnchor" id="CA-19381157ca92d1f81a259f332bf545969cb5bb35_17"></span><span class="anchor" id="line-17-3"></span>                        <span class="ID">sum2</span> += <span class="ID">x</span> * <span class="ID">x</span>;</span>
<span class="line"><span class="LineNumber"><a href="#CA-19381157ca92d1f81a259f332bf545969cb5bb35_18">  18</a> </span><span class="LineAnchor" id="CA-19381157ca92d1f81a259f332bf545969cb5bb35_18"></span><span class="anchor" id="line-18-3"></span>                        <span class="ID">n</span>++;</span>
<span class="line"><span class="LineNumber"><a href="#CA-19381157ca92d1f81a259f332bf545969cb5bb35_19">  19</a> </span><span class="LineAnchor" id="CA-19381157ca92d1f81a259f332bf545969cb5bb35_19"></span><span class="anchor" id="line-19-3"></span>                }</span>
<span class="line"><span class="LineNumber"><a href="#CA-19381157ca92d1f81a259f332bf545969cb5bb35_20">  20</a> </span><span class="LineAnchor" id="CA-19381157ca92d1f81a259f332bf545969cb5bb35_20"></span><span class="anchor" id="line-20-3"></span></span>
<span class="line"><span class="LineNumber"><a href="#CA-19381157ca92d1f81a259f332bf545969cb5bb35_21">  21</a> </span><span class="LineAnchor" id="CA-19381157ca92d1f81a259f332bf545969cb5bb35_21"></span><span class="anchor" id="line-21-3"></span>                <span class="ID">fclose</span>(<span class="ID">in</span>);</span>
<span class="line"><span class="LineNumber"><a href="#CA-19381157ca92d1f81a259f332bf545969cb5bb35_22">  22</a> </span><span class="LineAnchor" id="CA-19381157ca92d1f81a259f332bf545969cb5bb35_22"></span><span class="anchor" id="line-22-3"></span></span>
<span class="line"><span class="LineNumber"><a href="#CA-19381157ca92d1f81a259f332bf545969cb5bb35_23">  23</a> </span><span class="LineAnchor" id="CA-19381157ca92d1f81a259f332bf545969cb5bb35_23"></span><span class="anchor" id="line-23-3"></span>                <span class="ID">printf</span>(<span class="String">"</span><span class="SPChar">\t</span><span class="String">n=%d, sum=%g, avg=%g std_dev=%g</span><span class="SPChar">\n</span><span class="String">"</span>,</span>
<span class="line"><span class="LineNumber"><a href="#CA-19381157ca92d1f81a259f332bf545969cb5bb35_24">  24</a> </span><span class="LineAnchor" id="CA-19381157ca92d1f81a259f332bf545969cb5bb35_24"></span><span class="anchor" id="line-24-3"></span>                       <span class="ID">n</span>, <span class="ID">sum</span>, <span class="ID">sum</span> / <span class="ID">n</span>, <span class="ID">sqrt</span>(<span class="ID">n</span> * <span class="ID">sum2</span> - <span class="ID">sum</span> * <span class="ID">sum</span>) / <span class="ID">n</span></span>
<span class="line"><span class="LineNumber"><a href="#CA-19381157ca92d1f81a259f332bf545969cb5bb35_25">  25</a> </span><span class="LineAnchor" id="CA-19381157ca92d1f81a259f332bf545969cb5bb35_25"></span><span class="anchor" id="line-25-3"></span>                      );</span>
<span class="line"><span class="LineNumber"><a href="#CA-19381157ca92d1f81a259f332bf545969cb5bb35_26">  26</a> </span><span class="LineAnchor" id="CA-19381157ca92d1f81a259f332bf545969cb5bb35_26"></span><span class="anchor" id="line-26-3"></span>                <span class="ResWord">return</span> <span class="Number">0</span>;</span>
<span class="line"><span class="LineNumber"><a href="#CA-19381157ca92d1f81a259f332bf545969cb5bb35_27">  27</a> </span><span class="LineAnchor" id="CA-19381157ca92d1f81a259f332bf545969cb5bb35_27"></span><span class="anchor" id="line-27-3"></span>        } <span class="ResWord">else</span></span>
<span class="line"><span class="LineNumber"><a href="#CA-19381157ca92d1f81a259f332bf545969cb5bb35_28">  28</a> </span><span class="LineAnchor" id="CA-19381157ca92d1f81a259f332bf545969cb5bb35_28"></span><span class="anchor" id="line-28-3"></span>                <span class="ResWord">return</span> <span class="Number">1</span>;</span>
<span class="line"><span class="LineNumber"><a href="#CA-19381157ca92d1f81a259f332bf545969cb5bb35_29">  29</a> </span><span class="LineAnchor" id="CA-19381157ca92d1f81a259f332bf545969cb5bb35_29"></span><span class="anchor" id="line-29-3"></span>}</span>
</pre></div></div><span class="anchor" id="line-283"></span><span class="anchor" id="line-284"></span><p class="line874">Pewnych wyjaśnień wymagają instrukcje umieszczone w liniach 7,15 i 24. <span class="anchor" id="line-285"></span><span class="anchor" id="line-286"></span></p><p class="line862">W linii 7 otwieramy do odczytu (argument <tt class="backtick">"r"</tt>)
 plik, którego nazwę (ścieżkę) podał użytkownik jako pierwszy argument 
programu. Oczywiście musimy się wcześniej upewnić, czy użytkownik w 
ogóle jakiś argument podał (<tt class="backtick">argc&nbsp;&gt;&nbsp;1</tt>). Jeżeli nie podał, to będziemy czytać liczby ze standardowego strumienia wejściowego <tt class="backtick">stdin</tt>. <span class="anchor" id="line-287"></span><span class="anchor" id="line-288"></span></p><p class="line862">W linii 15 próbujemy czytać kolejne liczby ze strumienia <tt class="backtick">in</tt>. Jeżeli funkcji <tt class="backtick">fscanf</tt> uda się przeczytać kolejną liczbę <tt class="backtick">double</tt> (format <tt class="backtick">"%lf"</tt>)
 to zwróci jako wynik 1 (liczbę przeczytanych danych) - zwrócenie 
wartości innej niż 1 oznacza, że plik się "skończył" lub napotkano coś 
innego, niż liczba. Przeczytana liczba jest "pakowana" do zmiennej <tt class="backtick">x</tt>. Nieco tajemniczo wyglądające oznaczenie <tt class="backtick">&amp;x</tt> pozwala funkcji <tt class="backtick">fscanf</tt> zmodyfikować zmienną <tt class="backtick">x</tt> (a nie jej kopię). Więcej o symbolu <tt class="backtick">&amp;</tt> powiemy na kolejnych zajęciach. <span class="anchor" id="line-289"></span><span class="anchor" id="line-290"></span></p><p class="line862">Linia
 24 to obliczenie i wypisanie wartości średniej i odchylenia 
standardowego. Ta druga wielkość liczona jest tutaj w pewien specjalny 
sposób, który pozwala uniknąć dwukrotnego przeglądania ciągu liczb (jak 
wymagałby definicyjny wzór na odchylenie standardowe). Algorytm ten nie 
jest pozbawiony wad, ale to raczej temat na wykład z metod numerycznych 
lub obliczeń naukowych. Zainteresowanych problemem odsyłamy do wykładu <a class="nonexistent" href="http://wikidyd.iem.pw.edu.pl/ASC">Advanced Scientific Computations</a>. Zwróćmy jeszcze tylko uwagę, że w wyrażeniu używamy standardowej funkcji matematycznej <tt class="backtick">sqrt</tt> obliczającej pierwiastek kwadratowy. To właśnie ze względu na tę funkcję wciągamy do naszego programu plik nagłówkowy <tt class="backtick">math.h</tt> (linia nr 2). <span class="anchor" id="line-291"></span><span class="anchor" id="line-292"></span></p><p class="line874">Przed
 kompilacją i uruchomieniem trzeciego programu przygotujemy dla niego 
dane testowe. Korzystając z programu drugiego utworzymy trzy pliki o 
różnej długości: <span class="anchor" id="line-293"></span><span class="anchor" id="line-294"></span><span class="anchor" id="line-295"></span><span class="anchor" id="line-296"></span><span class="anchor" id="line-297"></span></p><pre><span class="anchor" id="line-1-5"></span>volt:~/lmp/lmp2/gr1&gt; ./a.out 1000 0 10 &gt; tysiac
<span class="anchor" id="line-2-3"></span>volt:~/lmp/lmp2/gr1&gt; ./a.out 1000000 0 10 &gt; milion
<span class="anchor" id="line-3-3"></span>volt:~/lmp/lmp2/gr1&gt; ./a.out 10000000 0 10 &gt; 10milionow</pre><span class="anchor" id="line-298"></span><span class="anchor" id="line-299"></span><p class="line874">Przy okazji kompilacji trzeciego programu posnamy dwie kolejne opcje kompilatora:  <span class="anchor" id="line-300"></span></p><ul><li><p class="line891"><tt class="backtick">-o</tt> pozwalającą wybrać inną, niż <tt class="backtick">a.out</tt> nazwę pliku wykonywalnego (nazwiemy nasz program <tt class="backtick">stat</tt>)  <span class="anchor" id="line-301"></span></p></li><li><p class="line862">'-l'
 pozwalającą dołączyć do kodu zawartość przygotowanej wcześniej 
biblioteki - my musimy dołączyć bibliotekę matematyczną, gdzie znajduje 
się funkcja <tt class="backtick">sqrt</tt>, a więc użyjemy tej opcji z argumentem <tt class="backtick">m</tt> - czyli <tt class="backtick">-lm</tt>. <span class="anchor" id="line-302"></span><span class="anchor" id="line-303"></span></p></li></ul><p class="line874">Po tych wyjaśnieniach powinni Państwo bez problemów zrozumieć poniższy kod: <span class="anchor" id="line-304"></span><span class="anchor" id="line-305"></span></p><p class="line867"><span class="anchor" id="line-306"></span><span class="anchor" id="line-307"></span><span class="anchor" id="line-308"></span><span class="anchor" id="line-309"></span><span class="anchor" id="line-310"></span><span class="anchor" id="line-311"></span><span class="anchor" id="line-312"></span><span class="anchor" id="line-313"></span><span class="anchor" id="line-314"></span></p><pre><span class="anchor" id="line-1-6"></span>volt:~/lmp/lmp2/gr1&gt; cc -o stat p3.c -lm -Wall -ansi -pedantic
<span class="anchor" id="line-2-4"></span>volt:~/lmp/lmp2/gr1&gt; ./stat 10milionow
<span class="anchor" id="line-3-4"></span>        n=10000000, sum=5.00144e+07, avg=5.00144 std_dev=2.88669
<span class="anchor" id="line-4-3"></span>volt:~/lmp/lmp2/gr1&gt; ./stat milion
<span class="anchor" id="line-5-3"></span>        n=1000000, sum=5.00101e+06, avg=5.00101 std_dev=2.88681
<span class="anchor" id="line-6-2"></span>volt:~/lmp/lmp2/gr1&gt; ./stat tysiac
<span class="anchor" id="line-7-1"></span>        n=1000, sum=5093.66, avg=5.09366 std_dev=2.83198
<span class="anchor" id="line-8-1"></span>volt:~/lmp/lmp2/gr1&gt;</pre><span class="anchor" id="line-315"></span><span class="anchor" id="line-316"></span><p class="line862">Przy pomocy polecenia <tt class="backtick">time</tt> sprawdźmy jeszcze, jak zmienia się czas wykonania naszego programu w zależności od wielkości danych: <span class="anchor" id="line-317"></span><span class="anchor" id="line-318"></span><span class="anchor" id="line-319"></span><span class="anchor" id="line-320"></span><span class="anchor" id="line-321"></span><span class="anchor" id="line-322"></span><span class="anchor" id="line-323"></span><span class="anchor" id="line-324"></span><span class="anchor" id="line-325"></span><span class="anchor" id="line-326"></span><span class="anchor" id="line-327"></span><span class="anchor" id="line-328"></span></p><pre><span class="anchor" id="line-1-7"></span>volt:~/lmp/lmp2/gr1&gt; time ./stat tysiac
<span class="anchor" id="line-2-5"></span>        n=1000, sum=5093.66, avg=5.09366 std_dev=2.83198
<span class="anchor" id="line-3-5"></span>./stat tysiac  0,00s user 0,00s system 62% cpu 0,005 total
<span class="anchor" id="line-4-4"></span>volt:~/lmp/lmp2/gr1&gt; time ./stat milion
<span class="anchor" id="line-5-4"></span>        n=1000000, sum=5.00101e+06, avg=5.00101 std_dev=2.88681
<span class="anchor" id="line-6-3"></span>./stat milion  0,29s user 0,02s system 99% cpu 0,308 total
<span class="anchor" id="line-7-2"></span>volt:~/lmp/lmp2/gr1&gt; time ./stat 10milionow
<span class="anchor" id="line-8-2"></span>        n=10000000, sum=5.00144e+07, avg=5.00144 std_dev=2.88669
<span class="anchor" id="line-9-1"></span>./stat 10milionow  2,87s user 0,14s system 99% cpu 3,015 total
<span class="anchor" id="line-10-1"></span>volt:~/lmp/lmp2/gr1&gt;</pre><span class="anchor" id="line-329"></span><p class="line867">
</p><h5 id="Program_na_zaliczenie">Program na zaliczenie</h5>
<span class="anchor" id="line-330"></span><span class="anchor" id="line-331"></span><p class="line874">Do wyboru przez prowadzącego <span class="anchor" id="line-332"></span></p><ul><li>przerobić
 trzeci program tak, aby czytał dane do wektora, a następnie dopisać 
funkcję obliczającą wartość średnią lub odchylenie standardowe dla 
wektora, <span class="anchor" id="line-333"></span></li><li>przerobić 
trzeci program tak, aby czytał dane do wektora, a następnie dopisać 
funkcję obliczającą wartość minimalną lub maksymalną z wektora, <span class="anchor" id="line-334"></span></li><li>przerobić trzeci program tak, aby czytał dane do wektora, a następnie dopisać funkcję obliczającą długość euklidesową wektora. <span class="anchor" id="line-335"></span><span class="anchor" id="line-336"></span></li></ul><p class="line867"></p><hr class="hr4"><p class="line874"> <span class="anchor" id="line-337"></span>To już prawie wszystko, ale nie wolno nam zapomnieć, że <span class="anchor" id="line-338"></span></p><div><table><tbody><tr>  <td style="border-width: 0px; ; width: 66%"><p class="line862">materiały zostały opracowane w ramach realizacji Programu Rozwojowego Politechniki Warszawskiej. </p></td>
  <td style="border-width: 0px;  text-align: right;"><p class="line862"> <img alt="http://prpw.iem.pw.edu.pl/images/KAPITAL_LUDZKI.gif" class="external_image" src="LMP_2%20-%20wikidyd%20-%20IETiSIP,%20Wydzial%20Elektryczny%20Politechniki%20Warszawskiej_files/KAPITAL_LUDZKI.gif" title="http://prpw.iem.pw.edu.pl/images/KAPITAL_LUDZKI.gif"> <img alt="http://prpw.iem.pw.edu.pl/images/EU+EFS_P-kolor.gif" class="external_image" src="LMP_2%20-%20wikidyd%20-%20IETiSIP,%20Wydzial%20Elektryczny%20Politechniki%20Warszawskiej_files/EUEFS_P-kolor.gif" title="http://prpw.iem.pw.edu.pl/images/EU+EFS_P-kolor.gif"> </p></td>
</tr>
<tr>  <td colspan="2" style="border-width: 0px;  text-align: center;"><span class="anchor" id="line-339"></span><p class="line891"><small><a class="http" href="http://www.pr.pw.edu.pl/"><img alt="http://www.pr.pw.edu.pl/" class="external_image" src="LMP_2%20-%20wikidyd%20-%20IETiSIP,%20Wydzial%20Elektryczny%20Politechniki%20Warszawskiej_files/small_logo_prpw.jpg" title="http://www.pr.pw.edu.pl/"></a> jest projektem współfinansowanym przez Unię Europejską w ramach <a class="http" href="http://www.efs.gov.pl/">Europejskiego Funduszu społecznego</a>
 (działanie 4.1.1 Programu Operacyjnego Kapitał Ludzki) i ma na celu 
poprawę jakości kształcenia oraz dostosowanie oferty dydaktycznej 
Politechniki Warszawskiej do potrzeb rynku pracy. Będzie on realizowany 
przez Uczelnię w latach 2008-2015.</small> </p></td>
</tr>
</tbody></table></div><span class="anchor" id="line-340"></span><span class="anchor" id="bottom"></span></div><p id="pageinfo" class="info" dir="ltr" lang="en">wikidyd - IETiSIP, Wydzial Elektryczny Politechniki Warszawskiej: LMP/2  (last edited 2011-09-28 09:35:54 by <span title="JacekStarzyński @ oer.iem.pw.edu.pl[194.29.146.107]"><a href="http://wikidyd.iem.pw.edu.pl/JacekStarzy%C5%84ski" title="JacekStarzyński @ oer.iem.pw.edu.pl[194.29.146.107]">JacekStarzyński</a></span>)</p>

<div id="pagebottom"></div>
</div>


<div id="footer">
<ul id="credits">
<li><a href="http://moinmo.in/" title="This site uses the MoinMoin Wiki software.">MoinMoin Powered</a></li><li><a href="http://moinmo.in/Python" title="MoinMoin is written in Python.">Python Powered</a></li><li><a href="http://moinmo.in/GPL" title="MoinMoin is GPL licensed.">GPL licensed</a></li><li><a href="http://validator.w3.org/check?uri=referer" title="Click here to validate this page.">Valid HTML 4.01</a></li>
</ul>


</div>



<div id="link64_vdp_tabid" style="display:none;">1026</div></body><div style="display:none" id="sp_console_event"></div></html>