<!DOCTYPE html PUBLIC "-//W3C//DTD HTML 4.01//EN" "http://www.w3.org/TR/html4/strict.dtd">
<html><head>
<meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
<meta name="robots" content="index,nofollow">

<title>LMP/1 - wikidyd - IETiSIP, Wydzial Elektryczny Politechniki Warszawskiej</title>
<script type="text/javascript" src="LMP_1%20-%20wikidyd%20-%20IETiSIP,%20Wydzial%20Elektryczny%20Politechniki%20Warszawskiej_files/common.js"></script>

<script type="text/javascript">
<!--
var search_hint = "Search";
//-->
</script>


<link rel="stylesheet" type="text/css" charset="utf-8" media="all" href="LMP_1%20-%20wikidyd%20-%20IETiSIP,%20Wydzial%20Elektryczny%20Politechniki%20Warszawskiej_files/common.css">
<link rel="stylesheet" type="text/css" charset="utf-8" media="screen" href="LMP_1%20-%20wikidyd%20-%20IETiSIP,%20Wydzial%20Elektryczny%20Politechniki%20Warszawskiej_files/screen.css">
<link rel="stylesheet" type="text/css" charset="utf-8" media="print" href="LMP_1%20-%20wikidyd%20-%20IETiSIP,%20Wydzial%20Elektryczny%20Politechniki%20Warszawskiej_files/print.css">
<link rel="stylesheet" type="text/css" charset="utf-8" media="projection" href="LMP_1%20-%20wikidyd%20-%20IETiSIP,%20Wydzial%20Elektryczny%20Politechniki%20Warszawskiej_files/projection.css">

<!-- css only for MS IE6/IE7 browsers -->
<!--[if lt IE 8]>
   <link rel="stylesheet" type="text/css" charset="utf-8" media="all" href="/moin_static193/rightsidebar/css/msie.css">
<![endif]-->





<link rel="Start" href="http://wikidyd.iem.pw.edu.pl/WikiDyd">
<link rel="Alternate" title="Wiki Markup" href="http://wikidyd.iem.pw.edu.pl/LMP/1?action=raw">
<link rel="Alternate" media="print" title="Print View" href="http://wikidyd.iem.pw.edu.pl/LMP/1?action=print">
<link rel="Up" href="http://wikidyd.iem.pw.edu.pl/LMP">
<link rel="Appendix" title="lmp1.tgz" href="http://wikidyd.iem.pw.edu.pl/LMP/1?action=AttachFile&amp;do=view&amp;target=lmp1.tgz">
<link rel="Search" href="http://wikidyd.iem.pw.edu.pl/FindPage">
<link rel="Index" href="http://wikidyd.iem.pw.edu.pl/TitleIndex">
<link rel="Glossary" href="http://wikidyd.iem.pw.edu.pl/WordIndex">
<link rel="Help" href="http://wikidyd.iem.pw.edu.pl/HelpOnFormatting">
</head>

<body dir="ltr" lang="en">

<div id="header">

<form id="searchform" method="get" action="/LMP/1">
<div>
<input name="action" value="fullsearch" type="hidden">
<input name="context" value="180" type="hidden">
<label style="display: none;" for="searchinput">Search:</label>
<input class="disabled" id="searchinput" name="value" value="Search" size="20" onfocus="searchFocus(this)" onblur="searchBlur(this)" onkeyup="searchChange(this)" onchange="searchChange(this)" alt="Search" type="text">
<input disabled="disabled" id="titlesearch" name="titlesearch" value="Titles" alt="Search Titles" type="submit">
<input disabled="disabled" id="fullsearch" name="fullsearch" value="Text" alt="Search Full Text" type="submit">
</div>
</form>
<script type="text/javascript">
<!--// Initialize search form
var f = document.getElementById('searchform');
f.getElementsByTagName('label')[0].style.display = 'none';
var e = document.getElementById('searchinput');
searchChange(e);
searchBlur(e);
//-->
</script>


<div id="locationline">
<div id="interwiki"><span><a href="http://wikidyd.iem.pw.edu.pl/WikiDyd" rel="nofollow">wikidyd - IETiSIP, Wydzial Elektryczny Politechniki Warszawskiej</a></span></div>

<ul id="pagelocation">
<li><a href="http://wikidyd.iem.pw.edu.pl/LMP">LMP</a></li><li><a class="backlink" href="http://wikidyd.iem.pw.edu.pl/LMP/1?action=fullsearch&amp;context=180&amp;value=linkto%3A%22LMP%2F1%22" rel="nofollow" title="Click to do a full-text search for this title">1</a></li>
</ul>

</div>

</div>

<div id="sidebar">
<div class="sidepanel">
<h1>Wiki</h1>

<ul id="navibar">
<li class="wikilink"><a href="http://wikidyd.iem.pw.edu.pl/RecentChanges">RecentChanges</a></li><li class="wikilink"><a href="http://wikidyd.iem.pw.edu.pl/FindPage">FindPage</a></li><li class="wikilink"><a href="http://wikidyd.iem.pw.edu.pl/HelpContents">HelpContents</a></li><li class="current"><a href="http://wikidyd.iem.pw.edu.pl/LMP/1">LMP/1</a></li>
</ul>

</div>
<div class="sidepanel">
<h1>Page</h1>
<ul class="editbar"><li><span class="disabled">Immutable Page</span></li><li class="toggleCommentsButton" style="display:none;"><a href="#" class="nbcomment" onclick="toggleComments();return false;">Comments</a></li><li><a class="nbinfo" href="http://wikidyd.iem.pw.edu.pl/LMP/1?action=info" rel="nofollow">Info</a></li><li><a class="nbattachments" href="http://wikidyd.iem.pw.edu.pl/LMP/1?action=AttachFile" rel="nofollow">Attachments</a></li><li>
<form class="actionsmenu" method="GET" action="/LMP/1">
<div>
    
    <select name="action" onchange="if ((this.selectedIndex != 0) &amp;&amp;
                      (this.options[this.selectedIndex].disabled == false)) {
                this.form.submit();
            }
            this.selectedIndex = 0;">
        <option selected="selected" value="show">More Actions:</option><option value="raw">Raw Text</option>
<option value="print">Print View</option>
<option value="refresh">Delete Cache</option>
<option value="show" disabled="disabled" class="disabled">------------------------</option>
<option value="SpellCheck">Check Spelling</option>
<option value="LikePages">Like Pages</option>
<option value="LocalSiteMap">Local Site Map</option>
<option value="show" disabled="disabled" class="disabled">------------------------</option>
<option value="RenamePage" disabled="disabled" class="disabled">Rename Page</option>
<option value="DeletePage" disabled="disabled" class="disabled">Delete Page</option>
<option value="show" disabled="disabled" class="disabled">------------------------</option>
<option value="show" disabled="disabled" class="disabled">Subscribe User</option>
<option value="show" disabled="disabled" class="disabled">------------------------</option>
<option value="show" disabled="disabled" class="disabled">Remove Spam</option>
<option value="show" disabled="disabled" class="disabled">Revert to this revision</option>
<option value="PackagePages">Package Pages</option>
<option value="SyncPages">Sync Pages</option>
<option value="show" disabled="disabled" class="disabled">------------------------</option>
<option value="Load">Load</option>
<option value="Save">Save</option>
<option value="SlideShow">SlideShow</option>
    </select>
    
    
</div>
<script type="text/javascript">
<!--// Init menu
actionsMenuInit('More Actions:');
//-->
</script>
</form>
</li></ul>

</div>
<div class="sidepanel">
<h1>User</h1>
<ul id="username"><li><a href="http://wikidyd.iem.pw.edu.pl/LMP/1?action=login" id="login" rel="nofollow">Login</a></li></ul>
</div>
</div>

<div id="page" dir="ltr" lang="en">
<div dir="ltr" id="content" lang="en"><span class="anchor" id="top"></span>
<span class="anchor" id="line-1"></span><div><table><tbody><tr>  <td style="border-width: 0px; ; width: 66%"><p class="line862">Materiały zostały opracowane w ramach realizacji Programu Rozwojowego Politechniki Warszawskiej. </p></td>
  <td style="border-width: 0px;  text-align: right;"><p class="line862"> <img alt="http://prpw.iem.pw.edu.pl/images/KAPITAL_LUDZKI.gif" class="external_image" src="LMP_1%20-%20wikidyd%20-%20IETiSIP,%20Wydzial%20Elektryczny%20Politechniki%20Warszawskiej_files/KAPITAL_LUDZKI.gif" title="http://prpw.iem.pw.edu.pl/images/KAPITAL_LUDZKI.gif"> <img alt="http://prpw.iem.pw.edu.pl/images/EU+EFS_P-kolor.gif" class="external_image" src="LMP_1%20-%20wikidyd%20-%20IETiSIP,%20Wydzial%20Elektryczny%20Politechniki%20Warszawskiej_files/EUEFS_P-kolor.gif" title="http://prpw.iem.pw.edu.pl/images/EU+EFS_P-kolor.gif"> </p></td>
</tr>
<tr>  <td colspan="2" style="border-width: 0px;  text-align: center;"><span class="anchor" id="line-2"></span><p class="line891"><small><a class="http" href="http://www.pr.pw.edu.pl/"><img alt="http://www.pr.pw.edu.pl/" class="external_image" src="LMP_1%20-%20wikidyd%20-%20IETiSIP,%20Wydzial%20Elektryczny%20Politechniki%20Warszawskiej_files/small_logo_prpw.jpg" title="http://www.pr.pw.edu.pl/"></a> jest projektem współfinansowanym przez Unię Europejską w ramach <a class="http" href="http://www.efs.gov.pl/">Europejskiego Funduszu społecznego</a>
 (działanie 4.1.1 Programu Operacyjnego Kapitał Ludzki) i ma na celu 
poprawę jakości kształcenia oraz dostosowanie oferty dydaktycznej 
Politechniki Warszawskiej do potrzeb rynku pracy. Będzie on realizowany 
przez Uczelnię w latach 2008-2015.</small> </p></td>
</tr>
</tbody></table></div><span class="anchor" id="line-3"></span><p class="line867"></p><hr class="hr4"><p class="line874"> <span class="anchor" id="line-4"></span><span class="anchor" id="line-5"></span></p><p class="line867">
</p><h3 id="Laboratorium_metodyki_programowania">Laboratorium metodyki programowania</h3>
<span class="anchor" id="line-6"></span><p class="line867">
</p><h2 id="A.2BAQY-wiczenie_1:_.2BAVo-rodowisko_programistyczne_systemu_Unix.2FLinux">Ćwiczenie 1: Środowisko programistyczne systemu Unix/Linux</h2>
<span class="anchor" id="line-7"></span><span class="anchor" id="line-8"></span><p class="line867">
</p><h4 id="Scenariusz">Scenariusz</h4>
<span class="anchor" id="line-9"></span><ol type="a"><li>Student loguje się do systemu LOP (Laboratorium Otwartego Programowania). <span class="anchor" id="line-10"></span></li><li>Student tworzy katalog roboczy dla zajęć i przechodzi do tego katalogu. <span class="anchor" id="line-11"></span></li><li>Student pobiera z repozytorium kod programów. <span class="anchor" id="line-12"></span></li><li>Po
 wyjaśnieniach prowadzącego student przystępuje do kompilacji i 
uruchomienia pierwszego programu. Porównuje wynik działania z kodem 
źródłowym. <span class="anchor" id="line-13"></span></li><li>Student 
modyfikuje program według wskazówek prowadzącego (np. zmiana formatu 
wypisywania wyników). Powtarza próbę kompilacji i uruchomienia. <span class="anchor" id="line-14"></span></li><li>Student próbuje odtworzyć z pamięci pierwszy program. Kompiluje i uruchamia stworzony kod. <span class="anchor" id="line-15"></span></li><li>Student powtarza punkty d-f dla kolejnych programów. <span class="anchor" id="line-16"></span></li><li>Ćwiczenie zaliczeniowe: student pisze program według zamówienia prowadzącego. <span class="anchor" id="line-17"></span><span class="anchor" id="line-18"></span></li></ol><p class="line867">
</p><h4 id="Opis_szczeg.2BAPMBQg-owy">Opis szczegółowy</h4>
<span class="anchor" id="line-19"></span><span class="anchor" id="line-20"></span><p class="line874">W
 trakcie zajęć nauczymy się logować do systemu, poruszać w linuksowym 
(uniksowym) systemie plików, wykonywać podstawową edycję programu przy 
pomocy edytora vi(m) i kompilować proste programy w C. <span class="anchor" id="line-21"></span><span class="anchor" id="line-22"></span></p><p class="line867">
</p><h5 id="Rozpocz.2BARk-cie_pracy">Rozpoczęcie pracy</h5>
<span class="anchor" id="line-23"></span><span class="anchor" id="line-24"></span><p class="line862">Zajęcia
 będą prowadzone na komputerze stud.iem.pw.edu.pl. W celu rozpoczęcia 
pracy należy zalogować się na tym komputerze za pomocą usługi ssh. Można
 w tym celu wykorzystać albo dostępny w każdym praktycznie systemie 
Unix/Linux program <a class="http" href="http://www.openbsd.org/cgi-bin/man.cgi?query=ssh&amp;sektion=1">ssh</a> albo klienta SSH dla systemu Windows - <a class="http" href="http://www.chiark.greenend.org.uk/%7Esgtatham/putty/">PuTTY</a>.
 Na maszynach studenckich w IETiSIP PW można podnieść różne dystrybucje 
Uniksa/Linuksa lub system Windows, ale w każdej z nich jest 
zainstalowane oprogramowanie ssh.  <span class="anchor" id="line-25"></span><span class="anchor" id="line-26"></span></p><p class="line874">Do
 logowania na maszynie stud.iem.pw.edu.pl należy użyć takiego samego 
loginu i hasła jakie wykorzystywane sa do dostępu do usług wydziałowych 
(poczta, e-dziekanat, itd.). <span class="anchor" id="line-27"></span><span class="anchor" id="line-28"></span></p><p class="line874">Po zalogowaniu się należy utworzyć katalog roboczy: <span class="anchor" id="line-29"></span><span class="anchor" id="line-30"></span><span class="anchor" id="line-31"></span></p><pre><span class="anchor" id="line-1"></span> mkdir lmp</pre><span class="anchor" id="line-32"></span><p class="line874">i przejść do niego: <span class="anchor" id="line-33"></span><span class="anchor" id="line-34"></span><span class="anchor" id="line-35"></span></p><pre><span class="anchor" id="line-1-1"></span> cd lmp</pre><span class="anchor" id="line-36"></span><span class="anchor" id="line-37"></span><p class="line874">Inne
 polecenia powłoki (shella), które mogą być przydatne w trakcie pracy 
to: ls, cp, mv, rm, pwd, cat, less. Opis każdego polecenia można uzyskać
 w trakcie pracy przy pomocy komendy man: <span class="anchor" id="line-38"></span><span class="anchor" id="line-39"></span><span class="anchor" id="line-40"></span></p><pre><span class="anchor" id="line-1-2"></span> man mkdir</pre><span class="anchor" id="line-41"></span><span class="anchor" id="line-42"></span><p class="line874">Opisy poleceń można też znaleźć w następujących witrynach: <span class="anchor" id="line-43"></span></p><ul><li><p class="line891"><a class="http" href="http://pl.wikipedia.org/wiki/Polecenia_systemu_operacyjnego_Unix">wikipedia</a> <span class="anchor" id="line-44"></span></p></li><li><p class="line891"><a class="http" href="http://wapedia.mobi/pl/Polecenia_systemu_operacyjnego_Unix">wapedia</a> <span class="anchor" id="line-45"></span><span class="anchor" id="line-46"></span></p></li></ul><p class="line867"><span class="anchor" id="line-47"></span><span class="anchor" id="line-48"></span></p><div class="comment" style="display:none"><span class="anchor" id="line-1-1"></span><p class="line867"><a href="http://wikidyd.iem.pw.edu.pl/LMP/1/SVN">Pobranie kodu z repozytorium svn</a> </p></div><span class="anchor" id="line-49"></span><span class="anchor" id="line-50"></span><p class="line867">
</p><h5 id="Kod_do_zaj.2BARkBBw-">Kod do zajęć</h5>
<span class="anchor" id="line-51"></span><span class="anchor" id="line-52"></span><p class="line867"><a class="attachment" href="http://wikidyd.iem.pw.edu.pl/LMP/1?action=AttachFile&amp;do=view&amp;target=lmp1.tgz" title="">lmp1.tgz</a> <span class="anchor" id="line-53"></span><span class="anchor" id="line-54"></span></p><p class="line867">
</p><h5 id="Praca_nad_kodem">Praca nad kodem</h5>
<span class="anchor" id="line-55"></span><span class="anchor" id="line-56"></span><p class="line874">Większość
 czasu spędzimy wykonując w kółko trzy polecenia (pX.c to przykładowa 
nazwa pliku - w rzeczywistości będą to p1.c, p2.c itd.): <span class="anchor" id="line-57"></span><span class="anchor" id="line-58"></span><span class="anchor" id="line-59"></span><span class="anchor" id="line-60"></span><span class="anchor" id="line-61"></span></p><pre><span class="anchor" id="line-1-3"></span>vim pX.c
<span class="anchor" id="line-2"></span>cc -Wall -ansi -pedantic pX.c
<span class="anchor" id="line-3"></span>./a.out</pre><span class="anchor" id="line-62"></span><span class="anchor" id="line-63"></span><p class="line874">Pierwsze z tych poleceń: <span class="anchor" id="line-64"></span><span class="anchor" id="line-65"></span><span class="anchor" id="line-66"></span></p><pre><span class="anchor" id="line-1-4"></span>vim p1.c</pre><span class="anchor" id="line-67"></span><p class="line862">to uruchomienie edytora <a class="http" href="http://www.vim.org/about.php">vim</a>, którego będziemy używać (i uczyć się) w trakcie zajęć. <span class="anchor" id="line-68"></span><span class="anchor" id="line-69"></span></p><p class="line862">W większości systemów uniksopodobnych istnieje polecenie <strong>vimtutor</strong> uruchamiające półgodzinną, interaktywna lekcję vi/vim. Więcej o tym edytorze można się dowiedzieć z następujących dokumentów: <span class="anchor" id="line-70"></span></p><ul><li><p class="line891"><a class="http" href="http://newbie.linux.pl/wydruk.php?wydruk=208&amp;show=artykul">opis edytora vi</a>, <span class="anchor" id="line-71"></span></p></li><li><p class="line891"><a class="http" href="http://pl.wikipedia.org/wiki/Vi_%28program%29">wikipedia o vi</a>, <span class="anchor" id="line-72"></span></p></li><li><p class="line891"><a class="http" href="http://math.uni.lodz.pl/%7Epolrola/strony/so/opis_vi.pdf">opis vi do wydrukowania</a> <span class="anchor" id="line-73"></span></p></li><li><p class="line891"><a class="http" href="http://tnerual.eriogerg.free.fr/vim.html">karta referencyjna edytora vim (do wydrukowania, zalaminowania i noszenia pod ręką ;-)</a> <span class="anchor" id="line-74"></span><span class="anchor" id="line-75"></span></p></li></ul><p class="line874">Drugie polecenie <span class="anchor" id="line-76"></span><span class="anchor" id="line-77"></span><span class="anchor" id="line-78"></span></p><pre><span class="anchor" id="line-1-5"></span>cc -Wall -ansi -pedantic pX.c</pre><span class="anchor" id="line-79"></span><p class="line862">uruchamia kompilator języka C, który powinien (jeśli kompilacja się uda) utworzyć plik wykonywalny <strong>a.out</strong>, który uruchomimy trzecim poleceniem. <span class="anchor" id="line-80"></span><span class="anchor" id="line-81"></span></p><p class="line874">Kompilator języka C ma całą masę opcji, modyfikujących jego działanie. My będziemy prawie zawsze używać opcji: <span class="anchor" id="line-82"></span></p><ul><li><p class="line862">Wall - włączającej wszystkie (no - prawie wszystkie <img alt=";-)" src="LMP_1%20-%20wikidyd%20-%20IETiSIP,%20Wydzial%20Elektryczny%20Politechniki%20Warszawskiej_files/smile4.png" title=";-)" height="15" width="15"> ostrzeżenia <span class="anchor" id="line-83"></span></p></li><li><p class="line862">ansi - ograniczającej dopuszczalną składnie naszych programów do standardu <a class="http" href="http://en.wikipedia.org/wiki/ANSI_C">ANSI C</a> <span class="anchor" id="line-84"></span></p></li><li><p class="line862">pedantic - ograniczającej stosowanie rozszerzeń niezgodnych z <a class="http" href="http://c-faq.com/ansi/ansi1.html">ISO C</a> <span class="anchor" id="line-85"></span><span class="anchor" id="line-86"></span></p></li></ul><p class="line874">Inne opcje kompilatora poznamy w trakcie dalszych zajęć. <span class="anchor" id="line-87"></span><span class="anchor" id="line-88"></span></p><p class="line867">
</p><h5 id="Pierwszy_program">Pierwszy program</h5>
<span class="anchor" id="line-89"></span><span class="anchor" id="line-90"></span><p class="line874">Prześledźmy
 teraz kompilację i wykonanie pierwszego programu. Zrzut ekranu, który 
przedstawia poniższy listing wykonano przy zastąpieniu edytora vim przez
 program cat, który wypisuje na ekran zawartośc pliku: <span class="anchor" id="line-91"></span><span class="anchor" id="line-92"></span></p><p class="line867"><span class="anchor" id="line-93"></span><span class="anchor" id="line-94"></span><span class="anchor" id="line-95"></span><span class="anchor" id="line-96"></span><span class="anchor" id="line-97"></span><span class="anchor" id="line-98"></span><span class="anchor" id="line-99"></span><span class="anchor" id="line-100"></span><span class="anchor" id="line-101"></span><span class="anchor" id="line-102"></span><span class="anchor" id="line-103"></span><span class="anchor" id="line-104"></span></p><pre><span class="anchor" id="line-1-6"></span>volt:~/lmp/lmp1/gr1&gt; cat p1.c
<span class="anchor" id="line-2-1"></span>#include &lt;stdio.h&gt;
<span class="anchor" id="line-3-1"></span>
<span class="anchor" id="line-4"></span>int main ()
<span class="anchor" id="line-5"></span>{
<span class="anchor" id="line-6"></span>  printf ("Dzien dobry!");
<span class="anchor" id="line-7"></span>  return 0;
<span class="anchor" id="line-8"></span>}
<span class="anchor" id="line-9"></span>volt:~/lmp/lmp1/gr1&gt; cc -Wall -ansi -pedantic p1.c
<span class="anchor" id="line-10"></span>volt:~/lmp/lmp1/gr1&gt; ./a.out
<span class="anchor" id="line-11"></span>Dzien dobry!volt:~/lmp/lmp1/gr1&gt;</pre><span class="anchor" id="line-105"></span><span class="anchor" id="line-106"></span><p class="line874">Aby wyjaśnić zawartość powyższego okienka rozpocznijmy od analizy pierwszego programu. <span class="anchor" id="line-107"></span><span class="anchor" id="line-108"></span></p><p class="line874">p1.c: <span class="anchor" id="line-109"></span><span class="anchor" id="line-110"></span><span class="anchor" id="line-111"></span><span class="anchor" id="line-112"></span><span class="anchor" id="line-113"></span><span class="anchor" id="line-114"></span><span class="anchor" id="line-115"></span><span class="anchor" id="line-116"></span><span class="anchor" id="line-117"></span><span class="anchor" id="line-1-2"></span></p><div class="highlight cpp"><div class="codearea" dir="ltr" lang="en">
<script type="text/javascript">
function isnumbered(obj) {
  return obj.childNodes.length && obj.firstChild.childNodes.length && obj.firstChild.firstChild.className == 'LineNumber';
}
function nformat(num,chrs,add) {
  var nlen = Math.max(0,chrs-(''+num).length), res = '';
  while (nlen>0) { res += ' '; nlen-- }
  return res+num+add;
}
function addnumber(did, nstart, nstep) {
  var c = document.getElementById(did), l = c.firstChild, n = 1;
  if (!isnumbered(c)) {
    if (typeof nstart == 'undefined') nstart = 1;
    if (typeof nstep  == 'undefined') nstep = 1;
    var n = nstart;
    while (l != null) {
      if (l.tagName == 'SPAN') {
        var s = document.createElement('SPAN');
        var a = document.createElement('A');
        s.className = 'LineNumber';
        a.appendChild(document.createTextNode(nformat(n,4,'')));
        a.href = '#' + did + '_' + n;
        s.appendChild(a);
        s.appendChild(document.createTextNode(' '));
        n += nstep;
        if (l.childNodes.length) {
          l.insertBefore(s, l.firstChild);
        }
        else {
          l.appendChild(s);
        }
      }
      l = l.nextSibling;
    }
  }
  return false;
}
function remnumber(did) {
  var c = document.getElementById(did), l = c.firstChild;
  if (isnumbered(c)) {
    while (l != null) {
      if (l.tagName == 'SPAN' && l.firstChild.className == 'LineNumber') l.removeChild(l.firstChild);
      l = l.nextSibling;
    }
  }
  return false;
}
function togglenumber(did, nstart, nstep) {
  var c = document.getElementById(did);
  if (isnumbered(c)) {
    remnumber(did);
  } else {
    addnumber(did,nstart,nstep);
  }
  return false;
}
</script>

<script type="text/javascript">
document.write('<a href="#" onclick="return togglenumber(\'CA-bffedf1a0b65ea7efb34a0bd62bcf9012399a144\', 1, 1);" \
                class="codenumbers">Toggle line numbers<\/a>');
</script><a href="#" onclick="return togglenumber('CA-bffedf1a0b65ea7efb34a0bd62bcf9012399a144', 1, 1);" class="codenumbers">Toggle line numbers</a>
<pre dir="ltr" id="CA-bffedf1a0b65ea7efb34a0bd62bcf9012399a144" lang="en"><span class="line"><span class="LineNumber"><a href="#CA-bffedf1a0b65ea7efb34a0bd62bcf9012399a144_1">   1</a> </span><span class="LineAnchor" id="CA-bffedf1a0b65ea7efb34a0bd62bcf9012399a144_1"></span><span class="anchor" id="line-1-3"></span><span class="Preprc">#</span><span class="Preprc">include &lt;stdio.h&gt;</span><span class="Preprc"></span></span>
<span class="line"><span class="LineNumber"><a href="#CA-bffedf1a0b65ea7efb34a0bd62bcf9012399a144_2">   2</a> </span><span class="LineAnchor" id="CA-bffedf1a0b65ea7efb34a0bd62bcf9012399a144_2"></span><span class="anchor" id="line-2-1"></span><span class="Preprc"></span></span>
<span class="line"><span class="LineNumber"><a href="#CA-bffedf1a0b65ea7efb34a0bd62bcf9012399a144_3">   3</a> </span><span class="LineAnchor" id="CA-bffedf1a0b65ea7efb34a0bd62bcf9012399a144_3"></span><span class="anchor" id="line-3-1"></span><span class="ResWord">int</span> <span class="ID">main</span> ()</span>
<span class="line"><span class="LineNumber"><a href="#CA-bffedf1a0b65ea7efb34a0bd62bcf9012399a144_4">   4</a> </span><span class="LineAnchor" id="CA-bffedf1a0b65ea7efb34a0bd62bcf9012399a144_4"></span><span class="anchor" id="line-4-1"></span>{</span>
<span class="line"><span class="LineNumber"><a href="#CA-bffedf1a0b65ea7efb34a0bd62bcf9012399a144_5">   5</a> </span><span class="LineAnchor" id="CA-bffedf1a0b65ea7efb34a0bd62bcf9012399a144_5"></span><span class="anchor" id="line-5-1"></span>  <span class="ID">printf</span> (<span class="String">"</span><span class="String">Dzien dobry!</span><span class="String">"</span>);</span>
<span class="line"><span class="LineNumber"><a href="#CA-bffedf1a0b65ea7efb34a0bd62bcf9012399a144_6">   6</a> </span><span class="LineAnchor" id="CA-bffedf1a0b65ea7efb34a0bd62bcf9012399a144_6"></span><span class="anchor" id="line-6-1"></span>  <span class="ResWord">return</span> <span class="Number">0</span>;</span>
<span class="line"><span class="LineNumber"><a href="#CA-bffedf1a0b65ea7efb34a0bd62bcf9012399a144_7">   7</a> </span><span class="LineAnchor" id="CA-bffedf1a0b65ea7efb34a0bd62bcf9012399a144_7"></span><span class="anchor" id="line-7-1"></span>}</span>
</pre></div></div><span class="anchor" id="line-118"></span><p class="line862">Pierwsza linia pliku p1.c poleca kompilatorowi dołączenie do naszego programu pliku nagłówkowego <a class="http" href="http://en.wikipedia.org/wiki/Stdio.h">stdio.h</a>.
 Jest to potrzebne, jeśli kompilator ma skontrolować, czy poprawnie 
wywołujemy funkcje ze standardowej biblioteki wejścia/wyjścia. Linie 3-7
 definiują funkcję <tt class="backtick">main</tt>. Każdy program w C składa się z funkcji, które mogą się wzajemnie wywoływać. Łańcuch tych wywołań rozpoczyna się od funkcji <tt class="backtick">main</tt>,
 która jest wywoływana jako pierwsza, a więc to od niej zaczyna się nasz
 program. Wynika z tego, że każdy program w C zawiera co najmniej jedną 
funkcję - <tt class="backtick">main</tt>. <span class="anchor" id="line-119"></span><span class="anchor" id="line-120"></span></p><p class="line862">Nasza pierwsza funkcja <tt class="backtick">main</tt> nie robi zbyt wiele - w linii piątej wywołuje funkcję <tt class="backtick">printf</tt>, polecając jej wypisanie na standardowy <em>strumień wyjściowy</em> komunikatu <tt class="backtick">Dzien&nbsp;dobry!</tt>, <span class="anchor" id="line-121"></span>a w linii 6 zwraca do systemu operacyjnego wartość 0 - zwyczajowo oznacza to, że program zakończył się bez błędów. <span class="anchor" id="line-122"></span><span class="anchor" id="line-123"></span></p><p class="line874">Analizując wykonanie naszego programu: <span class="anchor" id="line-124"></span><span class="anchor" id="line-125"></span><span class="anchor" id="line-126"></span><span class="anchor" id="line-127"></span></p><pre><span class="anchor" id="line-1-7"></span>volt:~/lmp/lmp1/gr1&gt; ./a.out
<span class="anchor" id="line-2-2"></span>Dzien dobry!volt:~/lmp/lmp1/gr1&gt;</pre><span class="anchor" id="line-128"></span><p class="line862">zwracamy uwagę na niezbyt czytelną ostatnią linię. Wyświetlany przez nasz program napis <tt class="backtick">Dzien&nbsp;dobry!</tt> zlewa się w niej z tekstem zachęty <tt class="backtick">volt:~/lmp/lmp1/gr1&gt;</tt> wypisywanym przez interpreter poleceń (<em>shell</em>). Aby to poprawić, możemy za pomocą edytora dodać na końcu napisu <tt class="backtick">Dzien&nbsp;dobry!</tt> specjalną sekwencję znaków polecającą przejście do nowego wiersza. Zmodyfikowany program wygląda następująco: <span class="anchor" id="line-129"></span><span class="anchor" id="line-130"></span><span class="anchor" id="line-131"></span><span class="anchor" id="line-132"></span><span class="anchor" id="line-133"></span><span class="anchor" id="line-134"></span><span class="anchor" id="line-135"></span><span class="anchor" id="line-136"></span><span class="anchor" id="line-137"></span><span class="anchor" id="line-1-4"></span></p><div class="highlight cpp"><div class="codearea" dir="ltr" lang="en">
<script type="text/javascript">
document.write('<a href="#" onclick="return togglenumber(\'CA-646d8d4bfd0483068d52fa8a75afb43bf9cc4222\', 1, 1);" \
                class="codenumbers">Toggle line numbers<\/a>');
</script><a href="#" onclick="return togglenumber('CA-646d8d4bfd0483068d52fa8a75afb43bf9cc4222', 1, 1);" class="codenumbers">Toggle line numbers</a>
<pre dir="ltr" id="CA-646d8d4bfd0483068d52fa8a75afb43bf9cc4222" lang="en"><span class="line"><span class="LineNumber"><a href="#CA-646d8d4bfd0483068d52fa8a75afb43bf9cc4222_1">   1</a> </span><span class="LineAnchor" id="CA-646d8d4bfd0483068d52fa8a75afb43bf9cc4222_1"></span><span class="anchor" id="line-1-5"></span><span class="Preprc">#</span><span class="Preprc">include &lt;stdio.h&gt;</span><span class="Preprc"></span></span>
<span class="line"><span class="LineNumber"><a href="#CA-646d8d4bfd0483068d52fa8a75afb43bf9cc4222_2">   2</a> </span><span class="LineAnchor" id="CA-646d8d4bfd0483068d52fa8a75afb43bf9cc4222_2"></span><span class="anchor" id="line-2-2"></span><span class="Preprc"></span></span>
<span class="line"><span class="LineNumber"><a href="#CA-646d8d4bfd0483068d52fa8a75afb43bf9cc4222_3">   3</a> </span><span class="LineAnchor" id="CA-646d8d4bfd0483068d52fa8a75afb43bf9cc4222_3"></span><span class="anchor" id="line-3-2"></span><span class="ResWord">int</span> <span class="ID">main</span> ()</span>
<span class="line"><span class="LineNumber"><a href="#CA-646d8d4bfd0483068d52fa8a75afb43bf9cc4222_4">   4</a> </span><span class="LineAnchor" id="CA-646d8d4bfd0483068d52fa8a75afb43bf9cc4222_4"></span><span class="anchor" id="line-4-2"></span>{</span>
<span class="line"><span class="LineNumber"><a href="#CA-646d8d4bfd0483068d52fa8a75afb43bf9cc4222_5">   5</a> </span><span class="LineAnchor" id="CA-646d8d4bfd0483068d52fa8a75afb43bf9cc4222_5"></span><span class="anchor" id="line-5-2"></span>  <span class="ID">printf</span> (<span class="String">"</span><span class="String">Dzien dobry!</span><span class="SPChar">\n</span><span class="String">"</span>);</span>
<span class="line"><span class="LineNumber"><a href="#CA-646d8d4bfd0483068d52fa8a75afb43bf9cc4222_6">   6</a> </span><span class="LineAnchor" id="CA-646d8d4bfd0483068d52fa8a75afb43bf9cc4222_6"></span><span class="anchor" id="line-6-2"></span>  <span class="ResWord">return</span> <span class="Number">0</span>;</span>
<span class="line"><span class="LineNumber"><a href="#CA-646d8d4bfd0483068d52fa8a75afb43bf9cc4222_7">   7</a> </span><span class="LineAnchor" id="CA-646d8d4bfd0483068d52fa8a75afb43bf9cc4222_7"></span><span class="anchor" id="line-7-2"></span>}</span>
</pre></div></div><span class="anchor" id="line-138"></span><p class="line862">Różnica jest naprawdę niewielka - na końcu napisu w linii 5 dodaliśmy dwa znaki: <tt class="backtick">\n</tt> - jest to specjalna sekwencja, mówiąca funkcji <tt class="backtick">printf</tt>, że w miejscu jest wystąpienia powinien zostać wyprowadzony do strumienia wyjściowego znak nowej linii.  <span class="anchor" id="line-139"></span><span class="anchor" id="line-140"></span></p><p class="line874">Oto ślad kompilacji i uruchomienia poprawionego programu: <span class="anchor" id="line-141"></span><span class="anchor" id="line-142"></span><span class="anchor" id="line-143"></span><span class="anchor" id="line-144"></span><span class="anchor" id="line-145"></span><span class="anchor" id="line-146"></span></p><pre><span class="anchor" id="line-1-8"></span>volt:~/lmp/lmp1/gr1&gt; cc -Wall -ansi  p1.c
<span class="anchor" id="line-2-3"></span>volt:~/lmp/lmp1/gr1&gt; ./a.out
<span class="anchor" id="line-3-2"></span>Dzien dobry!
<span class="anchor" id="line-4-1"></span>volt:~/lmp/lmp1/gr1&gt;</pre><span class="anchor" id="line-147"></span><span class="anchor" id="line-148"></span><p class="line867">
</p><h5 id="Drugi_program">Drugi program</h5>
<span class="anchor" id="line-149"></span><p class="line862">Drugi program pozwoli nam pokazać, w jaki sposób język C manipuluje danymi. W funkcji <tt class="backtick">main</tt> pojawiają się zmienne, które inicjujemy, modyfikujemy i wypisujemy. <span class="anchor" id="line-150"></span><span class="anchor" id="line-151"></span></p><p class="line874">p2.c <span class="anchor" id="line-152"></span><span class="anchor" id="line-153"></span><span class="anchor" id="line-154"></span><span class="anchor" id="line-155"></span><span class="anchor" id="line-156"></span><span class="anchor" id="line-157"></span><span class="anchor" id="line-158"></span><span class="anchor" id="line-159"></span><span class="anchor" id="line-160"></span><span class="anchor" id="line-161"></span><span class="anchor" id="line-162"></span><span class="anchor" id="line-163"></span><span class="anchor" id="line-164"></span><span class="anchor" id="line-165"></span><span class="anchor" id="line-166"></span><span class="anchor" id="line-167"></span><span class="anchor" id="line-168"></span><span class="anchor" id="line-169"></span><span class="anchor" id="line-170"></span><span class="anchor" id="line-171"></span><span class="anchor" id="line-172"></span><span class="anchor" id="line-173"></span><span class="anchor" id="line-174"></span><span class="anchor" id="line-1-6"></span></p><div class="highlight cpp"><div class="codearea" dir="ltr" lang="en">
<script type="text/javascript">
document.write('<a href="#" onclick="return togglenumber(\'CA-983e2b612b57aa4b81122fc8982c2f76f87455e4\', 1, 1);" \
                class="codenumbers">Toggle line numbers<\/a>');
</script><a href="#" onclick="return togglenumber('CA-983e2b612b57aa4b81122fc8982c2f76f87455e4', 1, 1);" class="codenumbers">Toggle line numbers</a>
<pre dir="ltr" id="CA-983e2b612b57aa4b81122fc8982c2f76f87455e4" lang="en"><span class="line"><span class="LineNumber"><a href="#CA-983e2b612b57aa4b81122fc8982c2f76f87455e4_1">   1</a> </span><span class="LineAnchor" id="CA-983e2b612b57aa4b81122fc8982c2f76f87455e4_1"></span><span class="anchor" id="line-1-7"></span><span class="Preprc">#</span><span class="Preprc">include &lt;stdio.h&gt;</span><span class="Preprc"></span></span>
<span class="line"><span class="LineNumber"><a href="#CA-983e2b612b57aa4b81122fc8982c2f76f87455e4_2">   2</a> </span><span class="LineAnchor" id="CA-983e2b612b57aa4b81122fc8982c2f76f87455e4_2"></span><span class="anchor" id="line-2-3"></span><span class="Preprc"></span></span>
<span class="line"><span class="LineNumber"><a href="#CA-983e2b612b57aa4b81122fc8982c2f76f87455e4_3">   3</a> </span><span class="LineAnchor" id="CA-983e2b612b57aa4b81122fc8982c2f76f87455e4_3"></span><span class="anchor" id="line-3-3"></span><span class="ResWord">int</span> <span class="ID">main</span>()</span>
<span class="line"><span class="LineNumber"><a href="#CA-983e2b612b57aa4b81122fc8982c2f76f87455e4_4">   4</a> </span><span class="LineAnchor" id="CA-983e2b612b57aa4b81122fc8982c2f76f87455e4_4"></span><span class="anchor" id="line-4-3"></span>{</span>
<span class="line"><span class="LineNumber"><a href="#CA-983e2b612b57aa4b81122fc8982c2f76f87455e4_5">   5</a> </span><span class="LineAnchor" id="CA-983e2b612b57aa4b81122fc8982c2f76f87455e4_5"></span><span class="anchor" id="line-5-3"></span>        <span class="ResWord">int</span>             <span class="ID">i</span> = <span class="Number">0</span>;</span>
<span class="line"><span class="LineNumber"><a href="#CA-983e2b612b57aa4b81122fc8982c2f76f87455e4_6">   6</a> </span><span class="LineAnchor" id="CA-983e2b612b57aa4b81122fc8982c2f76f87455e4_6"></span><span class="anchor" id="line-6-3"></span>        <span class="ResWord">int</span>             <span class="ID">j</span> = <span class="Number">1</span>;</span>
<span class="line"><span class="LineNumber"><a href="#CA-983e2b612b57aa4b81122fc8982c2f76f87455e4_7">   7</a> </span><span class="LineAnchor" id="CA-983e2b612b57aa4b81122fc8982c2f76f87455e4_7"></span><span class="anchor" id="line-7-3"></span></span>
<span class="line"><span class="LineNumber"><a href="#CA-983e2b612b57aa4b81122fc8982c2f76f87455e4_8">   8</a> </span><span class="LineAnchor" id="CA-983e2b612b57aa4b81122fc8982c2f76f87455e4_8"></span><span class="anchor" id="line-8-1"></span>        <span class="ID">printf</span>(<span class="String">"</span><span class="String">i=%d</span><span class="SPChar">\n</span><span class="String">"</span>, <span class="ID">i</span>);</span>
<span class="line"><span class="LineNumber"><a href="#CA-983e2b612b57aa4b81122fc8982c2f76f87455e4_9">   9</a> </span><span class="LineAnchor" id="CA-983e2b612b57aa4b81122fc8982c2f76f87455e4_9"></span><span class="anchor" id="line-9-1"></span>        <span class="ID">printf</span>(<span class="String">"</span><span class="String">j=%d</span><span class="SPChar">\n</span><span class="String">"</span>, <span class="ID">j</span>);</span>
<span class="line"><span class="LineNumber"><a href="#CA-983e2b612b57aa4b81122fc8982c2f76f87455e4_10">  10</a> </span><span class="LineAnchor" id="CA-983e2b612b57aa4b81122fc8982c2f76f87455e4_10"></span><span class="anchor" id="line-10-1"></span>        <span class="ID">printf</span>(<span class="String">"</span><span class="String">i-j=%d</span><span class="SPChar">\n</span><span class="String">"</span>, <span class="ID">i</span> - <span class="ID">j</span>);</span>
<span class="line"><span class="LineNumber"><a href="#CA-983e2b612b57aa4b81122fc8982c2f76f87455e4_11">  11</a> </span><span class="LineAnchor" id="CA-983e2b612b57aa4b81122fc8982c2f76f87455e4_11"></span><span class="anchor" id="line-11-1"></span>        <span class="ID">i</span> = <span class="ID">j</span> + <span class="Number">1</span>;</span>
<span class="line"><span class="LineNumber"><a href="#CA-983e2b612b57aa4b81122fc8982c2f76f87455e4_12">  12</a> </span><span class="LineAnchor" id="CA-983e2b612b57aa4b81122fc8982c2f76f87455e4_12"></span><span class="anchor" id="line-12-1"></span>        <span class="ID">printf</span>(<span class="String">"</span><span class="String">j+1=%d</span><span class="SPChar">\n</span><span class="String">"</span>, <span class="ID">i</span>);</span>
<span class="line"><span class="LineNumber"><a href="#CA-983e2b612b57aa4b81122fc8982c2f76f87455e4_13">  13</a> </span><span class="LineAnchor" id="CA-983e2b612b57aa4b81122fc8982c2f76f87455e4_13"></span><span class="anchor" id="line-13-1"></span>        <span class="ID">j</span> -= <span class="Number">3</span>;</span>
<span class="line"><span class="LineNumber"><a href="#CA-983e2b612b57aa4b81122fc8982c2f76f87455e4_14">  14</a> </span><span class="LineAnchor" id="CA-983e2b612b57aa4b81122fc8982c2f76f87455e4_14"></span><span class="anchor" id="line-14-1"></span>        <span class="ID">printf</span>(<span class="String">"</span><span class="String">j-3=%d</span><span class="SPChar">\n</span><span class="String">"</span>, <span class="ID">j</span>);</span>
<span class="line"><span class="LineNumber"><a href="#CA-983e2b612b57aa4b81122fc8982c2f76f87455e4_15">  15</a> </span><span class="LineAnchor" id="CA-983e2b612b57aa4b81122fc8982c2f76f87455e4_15"></span><span class="anchor" id="line-15-1"></span>        <span class="ID">printf</span>(<span class="String">"</span><span class="String">j=j-3</span><span class="SPChar">\n</span><span class="String">"</span>);</span>
<span class="line"><span class="LineNumber"><a href="#CA-983e2b612b57aa4b81122fc8982c2f76f87455e4_16">  16</a> </span><span class="LineAnchor" id="CA-983e2b612b57aa4b81122fc8982c2f76f87455e4_16"></span><span class="anchor" id="line-16-1"></span>        <span class="ID">printf</span>(<span class="String">"</span><span class="String">j=%d</span><span class="SPChar">\n</span><span class="String">"</span>, <span class="ID">j</span>);</span>
<span class="line"><span class="LineNumber"><a href="#CA-983e2b612b57aa4b81122fc8982c2f76f87455e4_17">  17</a> </span><span class="LineAnchor" id="CA-983e2b612b57aa4b81122fc8982c2f76f87455e4_17"></span><span class="anchor" id="line-17-1"></span>        <span class="ID">printf</span>(<span class="String">"</span><span class="String">%d+%d=%d</span><span class="SPChar">\n</span><span class="String">"</span>, <span class="ID">i</span>, <span class="ID">j</span>, <span class="ID">i</span> + <span class="ID">j</span>);</span>
<span class="line"><span class="LineNumber"><a href="#CA-983e2b612b57aa4b81122fc8982c2f76f87455e4_18">  18</a> </span><span class="LineAnchor" id="CA-983e2b612b57aa4b81122fc8982c2f76f87455e4_18"></span><span class="anchor" id="line-18-1"></span>        <span class="ID">printf</span>(<span class="String">"</span><span class="String">%d*%d=%d</span><span class="SPChar">\n</span><span class="String">"</span>, <span class="ID">i</span>, <span class="ID">j</span>, <span class="ID">i</span> * <span class="ID">j</span>);</span>
<span class="line"><span class="LineNumber"><a href="#CA-983e2b612b57aa4b81122fc8982c2f76f87455e4_19">  19</a> </span><span class="LineAnchor" id="CA-983e2b612b57aa4b81122fc8982c2f76f87455e4_19"></span><span class="anchor" id="line-19-1"></span></span>
<span class="line"><span class="LineNumber"><a href="#CA-983e2b612b57aa4b81122fc8982c2f76f87455e4_20">  20</a> </span><span class="LineAnchor" id="CA-983e2b612b57aa4b81122fc8982c2f76f87455e4_20"></span><span class="anchor" id="line-20-1"></span>        <span class="ResWord">return</span> <span class="Number">0</span>;</span>
<span class="line"><span class="LineNumber"><a href="#CA-983e2b612b57aa4b81122fc8982c2f76f87455e4_21">  21</a> </span><span class="LineAnchor" id="CA-983e2b612b57aa4b81122fc8982c2f76f87455e4_21"></span><span class="anchor" id="line-21-1"></span>}</span>
</pre></div></div><span class="anchor" id="line-175"></span><span class="anchor" id="line-176"></span><p class="line862">Pierwszą cechą języka C, na którą zwracamy uwagę, to struktura funkcji <tt class="backtick">main</tt>.  <span class="anchor" id="line-177"></span><span class="anchor" id="line-178"></span></p><p class="line874">Definicja każdej funkcji składa się z nagłówka i ciała.   <span class="anchor" id="line-179"></span><span class="anchor" id="line-180"></span></p><p class="line862">Nagłówek naszej funkcji <tt class="backtick">main</tt> to linia 3, w której występują: <span class="anchor" id="line-181"></span></p><ul><li><p class="line862">określenie typu wyniku zwracanego przez funkcję: <tt class="backtick">int</tt> oznacza, iż <tt class="backtick">main</tt> zwraca liczbę całkowitą, <span class="anchor" id="line-182"></span></p></li><li><p class="line862">nazwa funkcji - jest to ciąg liter, cyfr i znaków podkreślenia (<tt class="backtick">_</tt>),
 zaczynający się od litery lub znaku podkreślenia (ale to ostatnie 
zarezerwujemy dla funkcji specjalnych - nasze funkcje będą miały nazwy 
zaczynające się od liter). Nazwa powinna opisywać (w miarę możliwości) 
rolę funkcji. <span class="anchor" id="line-183"></span></p></li><li><p class="line862">argumenty funkcji, czyli pewne wyrażenia występujące pomiędzy nawiasami <tt class="backtick">(</tt> i <tt class="backtick">)</tt>.
 Jeśli nie chcemy zajmować się argumentami funkcji (później powiemy 
dokładniej, o co chodzi), to nawiasy są po prostu puste - tak, jak w 
naszym przykładzie. <span class="anchor" id="line-184"></span><span class="anchor" id="line-185"></span></p></li></ul><p class="line862">Ciało funkcji to ciąg ujętych w nawiasy klamrowe (<tt class="backtick">{</tt> w linii 4 oraz <tt class="backtick">}</tt>
 w linii 21) instrukcji, wśród których wyróżniamy definicje zmiennych. 
Zgodnie ze standardem ANSI powinny one występować na początku bloku 
(czyli bezpośrednio po otwierającym nawiasie klamrowym) i tego będziemy 
się starali trzymać w naszych programach. W naszym przykładzie mamy dwie
 zmienne, <span class="anchor" id="line-186"></span>definiowane w 5 i 6 
linii. Definicja zmiennej mówi kompilatorowi, że powinien zarezerwować 
pewien obszar pamięci (odpowiedni do przechowywania obiektu danego typu)
 i nadać mu nazwę. Dalsze odwołania do tej nazwy pozwalają na 
modyfikację zawartości określonego przez nazwę fragmentu pamięci zgodnie
 z regułami określanymi przez typ zmiennej. <span class="anchor" id="line-187"></span><span class="anchor" id="line-188"></span></p><p class="line862">Nasze definicje zmiennych uzupełnione są przez nadanie im początkowych wartości - bez tego <tt class="backtick">i</tt> oraz <tt class="backtick">j</tt> przyjęłyby wartości przypadkowe. <span class="anchor" id="line-189"></span><span class="anchor" id="line-190"></span></p><p class="line862">Kolejne
 linie programu pokazują niektóre możliwości modyfikacji (linie 11 i 13)
 oraz wypisywania zmiennych. Do wypisywania zmiennych używamy znanej już
 funkcji <tt class="backtick">printf</tt>, ale teraz w napisach podawanych jako pierwszy argument tej funkcji występują sekwencje znaków <tt class="backtick">%d</tt>. Jeśli <tt class="backtick">printf</tt> napotka taką sekwencję, to pobiera z listy argumentów kolejne, zakładając, że są to liczby całkowite (litera <tt class="backtick">d</tt> w <tt class="backtick">%d</tt> pochodzi od angielskiego słowa <em>decimal</em> - "dziesiętnie"). W ten sposób odpowiednia zawartość pierwszego argumentu funkcji <tt class="backtick">printf</tt> pozwala wypisywać aktualną wartość zmiennych (jak np. w liniach 8 i 9) lub wyrażeń (linie 10, 16, 17). <span class="anchor" id="line-191"></span><span class="anchor" id="line-192"></span></p><p class="line874">Oto wynik kompilacji i uruchomienia drugiego programu: <span class="anchor" id="line-193"></span><span class="anchor" id="line-194"></span><span class="anchor" id="line-195"></span><span class="anchor" id="line-196"></span><span class="anchor" id="line-197"></span><span class="anchor" id="line-198"></span><span class="anchor" id="line-199"></span><span class="anchor" id="line-200"></span><span class="anchor" id="line-201"></span><span class="anchor" id="line-202"></span><span class="anchor" id="line-203"></span><span class="anchor" id="line-204"></span><span class="anchor" id="line-205"></span><span class="anchor" id="line-206"></span></p><pre><span class="anchor" id="line-1-9"></span>volt:~/lmp/lmp1/gr1&gt; cc -Wall -ansi  p2.c
<span class="anchor" id="line-2-4"></span>volt:~/lmp/lmp1/gr1&gt; ./a.out
<span class="anchor" id="line-3-3"></span>i=0
<span class="anchor" id="line-4-2"></span>j=1
<span class="anchor" id="line-5-1"></span>i-j=-1
<span class="anchor" id="line-6-1"></span>j+1=2
<span class="anchor" id="line-7-1"></span>j-3=-2
<span class="anchor" id="line-8-1"></span>j=j-3
<span class="anchor" id="line-9-1"></span>j=-2
<span class="anchor" id="line-10-1"></span>2+-2=0
<span class="anchor" id="line-11-1"></span>2*-2=-4
<span class="anchor" id="line-12"></span>volt:~/lmp/lmp1/gr1&gt;</pre><span class="anchor" id="line-207"></span><span class="anchor" id="line-208"></span><p class="line867">
</p><h5 id="Trzeci_program">Trzeci program</h5>
<span class="anchor" id="line-209"></span><span class="anchor" id="line-210"></span><p class="line862">Trzeci program wypisuje kody <a class="http" href="http://pl.wikipedia.org/wiki/ASCII">ASCII</a> odpowiadające wielkim literom alfabetu angielskiego. Demonstruje on najczęściej używaną w języku C pętlę - <tt class="backtick">for</tt> oraz pokazuje odpowiedniość małych liczb całkowitych i znaków: <span class="anchor" id="line-211"></span><span class="anchor" id="line-212"></span></p><p class="line874">p3.c <span class="anchor" id="line-213"></span><span class="anchor" id="line-214"></span><span class="anchor" id="line-215"></span><span class="anchor" id="line-216"></span><span class="anchor" id="line-217"></span><span class="anchor" id="line-218"></span><span class="anchor" id="line-219"></span><span class="anchor" id="line-220"></span><span class="anchor" id="line-221"></span><span class="anchor" id="line-222"></span><span class="anchor" id="line-223"></span><span class="anchor" id="line-224"></span><span class="anchor" id="line-225"></span><span class="anchor" id="line-226"></span><span class="anchor" id="line-1-8"></span></p><div class="highlight cpp"><div class="codearea" dir="ltr" lang="en">
<script type="text/javascript">
document.write('<a href="#" onclick="return togglenumber(\'CA-3c6e1ae742c490fafe2f9bcca6f0279ad4fabe66\', 1, 1);" \
                class="codenumbers">Toggle line numbers<\/a>');
</script><a href="#" onclick="return togglenumber('CA-3c6e1ae742c490fafe2f9bcca6f0279ad4fabe66', 1, 1);" class="codenumbers">Toggle line numbers</a>
<pre dir="ltr" id="CA-3c6e1ae742c490fafe2f9bcca6f0279ad4fabe66" lang="en"><span class="line"><span class="LineNumber"><a href="#CA-3c6e1ae742c490fafe2f9bcca6f0279ad4fabe66_1">   1</a> </span><span class="LineAnchor" id="CA-3c6e1ae742c490fafe2f9bcca6f0279ad4fabe66_1"></span><span class="anchor" id="line-1-9"></span><span class="Preprc">#</span><span class="Preprc">include &lt;stdio.h&gt;</span><span class="Preprc"></span></span>
<span class="line"><span class="LineNumber"><a href="#CA-3c6e1ae742c490fafe2f9bcca6f0279ad4fabe66_2">   2</a> </span><span class="LineAnchor" id="CA-3c6e1ae742c490fafe2f9bcca6f0279ad4fabe66_2"></span><span class="anchor" id="line-2-4"></span><span class="Preprc"></span></span>
<span class="line"><span class="LineNumber"><a href="#CA-3c6e1ae742c490fafe2f9bcca6f0279ad4fabe66_3">   3</a> </span><span class="LineAnchor" id="CA-3c6e1ae742c490fafe2f9bcca6f0279ad4fabe66_3"></span><span class="anchor" id="line-3-4"></span><span class="ResWord">int</span> <span class="ID">main</span>()</span>
<span class="line"><span class="LineNumber"><a href="#CA-3c6e1ae742c490fafe2f9bcca6f0279ad4fabe66_4">   4</a> </span><span class="LineAnchor" id="CA-3c6e1ae742c490fafe2f9bcca6f0279ad4fabe66_4"></span><span class="anchor" id="line-4-4"></span>{</span>
<span class="line"><span class="LineNumber"><a href="#CA-3c6e1ae742c490fafe2f9bcca6f0279ad4fabe66_5">   5</a> </span><span class="LineAnchor" id="CA-3c6e1ae742c490fafe2f9bcca6f0279ad4fabe66_5"></span><span class="anchor" id="line-5-4"></span>        <span class="ResWord">int</span>             <span class="ID">i</span>;</span>
<span class="line"><span class="LineNumber"><a href="#CA-3c6e1ae742c490fafe2f9bcca6f0279ad4fabe66_6">   6</a> </span><span class="LineAnchor" id="CA-3c6e1ae742c490fafe2f9bcca6f0279ad4fabe66_6"></span><span class="anchor" id="line-6-4"></span></span>
<span class="line"><span class="LineNumber"><a href="#CA-3c6e1ae742c490fafe2f9bcca6f0279ad4fabe66_7">   7</a> </span><span class="LineAnchor" id="CA-3c6e1ae742c490fafe2f9bcca6f0279ad4fabe66_7"></span><span class="anchor" id="line-7-4"></span>        <span class="ID">printf</span>(<span class="String">"</span><span class="String">Kody dziesiętne wielkich liter:</span><span class="SPChar">\n</span><span class="String">"</span>);</span>
<span class="line"><span class="LineNumber"><a href="#CA-3c6e1ae742c490fafe2f9bcca6f0279ad4fabe66_8">   8</a> </span><span class="LineAnchor" id="CA-3c6e1ae742c490fafe2f9bcca6f0279ad4fabe66_8"></span><span class="anchor" id="line-8-2"></span>        <span class="ResWord">for</span> (<span class="ID">i</span> = <span class="Char">'A'</span>; <span class="ID">i</span> &lt;= <span class="Char">'Z'</span>; <span class="ID">i</span>++)</span>
<span class="line"><span class="LineNumber"><a href="#CA-3c6e1ae742c490fafe2f9bcca6f0279ad4fabe66_9">   9</a> </span><span class="LineAnchor" id="CA-3c6e1ae742c490fafe2f9bcca6f0279ad4fabe66_9"></span><span class="anchor" id="line-9-2"></span>                <span class="ID">printf</span>(<span class="String">"</span><span class="String">%c - %d</span><span class="SPChar">\n</span><span class="String">"</span>, <span class="ID">i</span>, <span class="ID">i</span>);</span>
<span class="line"><span class="LineNumber"><a href="#CA-3c6e1ae742c490fafe2f9bcca6f0279ad4fabe66_10">  10</a> </span><span class="LineAnchor" id="CA-3c6e1ae742c490fafe2f9bcca6f0279ad4fabe66_10"></span><span class="anchor" id="line-10-2"></span></span>
<span class="line"><span class="LineNumber"><a href="#CA-3c6e1ae742c490fafe2f9bcca6f0279ad4fabe66_11">  11</a> </span><span class="LineAnchor" id="CA-3c6e1ae742c490fafe2f9bcca6f0279ad4fabe66_11"></span><span class="anchor" id="line-11-2"></span>        <span class="ResWord">return</span> <span class="Number">0</span>;</span>
<span class="line"><span class="LineNumber"><a href="#CA-3c6e1ae742c490fafe2f9bcca6f0279ad4fabe66_12">  12</a> </span><span class="LineAnchor" id="CA-3c6e1ae742c490fafe2f9bcca6f0279ad4fabe66_12"></span><span class="anchor" id="line-12-2"></span>}</span>
</pre></div></div><span class="anchor" id="line-227"></span><span class="anchor" id="line-228"></span><p class="line862">Zwróćmy uwagę, że w 9 linii wypisywana jest dwukrotnie wartość zmiennej <tt class="backtick">i</tt>, ale najpierw interpretowana jest jako znak (sekwencja <tt class="backtick">%c</tt>) a następnie jako liczba (<tt class="backtick">%d</tt>). Skutkuje to następującymi wynikami działania programu: <span class="anchor" id="line-229"></span><span class="anchor" id="line-230"></span><span class="anchor" id="line-231"></span><span class="anchor" id="line-232"></span><span class="anchor" id="line-233"></span><span class="anchor" id="line-234"></span><span class="anchor" id="line-235"></span><span class="anchor" id="line-236"></span><span class="anchor" id="line-237"></span><span class="anchor" id="line-238"></span><span class="anchor" id="line-239"></span><span class="anchor" id="line-240"></span><span class="anchor" id="line-241"></span><span class="anchor" id="line-242"></span><span class="anchor" id="line-243"></span><span class="anchor" id="line-244"></span><span class="anchor" id="line-245"></span><span class="anchor" id="line-246"></span><span class="anchor" id="line-247"></span><span class="anchor" id="line-248"></span><span class="anchor" id="line-249"></span><span class="anchor" id="line-250"></span><span class="anchor" id="line-251"></span><span class="anchor" id="line-252"></span><span class="anchor" id="line-253"></span><span class="anchor" id="line-254"></span><span class="anchor" id="line-255"></span><span class="anchor" id="line-256"></span><span class="anchor" id="line-257"></span><span class="anchor" id="line-258"></span><span class="anchor" id="line-259"></span><span class="anchor" id="line-260"></span></p><pre><span class="anchor" id="line-1-10"></span>volt:~/lmp/lmp1/gr1&gt; cc -Wall -ansi  p3.c
<span class="anchor" id="line-2-5"></span>volt:~/lmp/lmp1/gr1&gt; ./a.out
<span class="anchor" id="line-3-4"></span>Kody dziesiętne wielkich liter:
<span class="anchor" id="line-4-3"></span>A - 65
<span class="anchor" id="line-5-2"></span>B - 66
<span class="anchor" id="line-6-2"></span>C - 67
<span class="anchor" id="line-7-2"></span>D - 68
<span class="anchor" id="line-8-2"></span>E - 69
<span class="anchor" id="line-9-2"></span>F - 70
<span class="anchor" id="line-10-2"></span>G - 71
<span class="anchor" id="line-11-2"></span>H - 72
<span class="anchor" id="line-12-1"></span>I - 73
<span class="anchor" id="line-13"></span>J - 74
<span class="anchor" id="line-14"></span>K - 75
<span class="anchor" id="line-15"></span>L - 76
<span class="anchor" id="line-16"></span>M - 77
<span class="anchor" id="line-17"></span>N - 78
<span class="anchor" id="line-18"></span>O - 79
<span class="anchor" id="line-19"></span>P - 80
<span class="anchor" id="line-20"></span>Q - 81
<span class="anchor" id="line-21"></span>R - 82
<span class="anchor" id="line-22"></span>S - 83
<span class="anchor" id="line-23"></span>T - 84
<span class="anchor" id="line-24"></span>U - 85
<span class="anchor" id="line-25"></span>V - 86
<span class="anchor" id="line-26"></span>W - 87
<span class="anchor" id="line-27"></span>X - 88
<span class="anchor" id="line-28"></span>Y - 89
<span class="anchor" id="line-29"></span>Z - 90
<span class="anchor" id="line-30"></span>volt:~/lmp/lmp1/gr1&gt;</pre><span class="anchor" id="line-261"></span><span class="anchor" id="line-262"></span><p class="line867">
</p><h5 id="Czwarty_program">Czwarty program</h5>
<span class="anchor" id="line-263"></span><span class="anchor" id="line-264"></span><p class="line862">Czwarty
 program ma wypisywać znaki odpowiadające określonemu przez użytkownika 
zakresowi kodów ASCII. Pokazuje on możliwość komunikacji użytkownika z 
programem w C oraz nieco bardziej złożoną strukturę funkcji <tt class="backtick">main</tt>
 wymaganą ze względu na konieczność sprawdzenia poprawności danych 
wprowadzanych przez użytkownika. Program wygląda następująco: <span class="anchor" id="line-265"></span><span class="anchor" id="line-266"></span></p><p class="line874">p4.c <span class="anchor" id="line-267"></span><span class="anchor" id="line-268"></span><span class="anchor" id="line-269"></span><span class="anchor" id="line-270"></span><span class="anchor" id="line-271"></span><span class="anchor" id="line-272"></span><span class="anchor" id="line-273"></span><span class="anchor" id="line-274"></span><span class="anchor" id="line-275"></span><span class="anchor" id="line-276"></span><span class="anchor" id="line-277"></span><span class="anchor" id="line-278"></span><span class="anchor" id="line-279"></span><span class="anchor" id="line-280"></span><span class="anchor" id="line-281"></span><span class="anchor" id="line-282"></span><span class="anchor" id="line-283"></span><span class="anchor" id="line-284"></span><span class="anchor" id="line-285"></span><span class="anchor" id="line-286"></span><span class="anchor" id="line-287"></span><span class="anchor" id="line-288"></span><span class="anchor" id="line-289"></span><span class="anchor" id="line-290"></span><span class="anchor" id="line-291"></span><span class="anchor" id="line-1-10"></span></p><div class="highlight cpp"><div class="codearea" dir="ltr" lang="en">
<script type="text/javascript">
document.write('<a href="#" onclick="return togglenumber(\'CA-ebcda5650a252563ae03fb853e6a66738be69b97\', 1, 1);" \
                class="codenumbers">Toggle line numbers<\/a>');
</script><a href="#" onclick="return togglenumber('CA-ebcda5650a252563ae03fb853e6a66738be69b97', 1, 1);" class="codenumbers">Toggle line numbers</a>
<pre dir="ltr" id="CA-ebcda5650a252563ae03fb853e6a66738be69b97" lang="en"><span class="line"><span class="LineNumber"><a href="#CA-ebcda5650a252563ae03fb853e6a66738be69b97_1">   1</a> </span><span class="LineAnchor" id="CA-ebcda5650a252563ae03fb853e6a66738be69b97_1"></span><span class="anchor" id="line-1-11"></span><span class="Preprc">#</span><span class="Preprc">include &lt;stdio.h&gt;                       </span><span class="Preprc"></span></span>
<span class="line"><span class="LineNumber"><a href="#CA-ebcda5650a252563ae03fb853e6a66738be69b97_2">   2</a> </span><span class="LineAnchor" id="CA-ebcda5650a252563ae03fb853e6a66738be69b97_2"></span><span class="anchor" id="line-2-5"></span><span class="Preprc"></span><span class="Preprc">#</span><span class="Preprc">include &lt;stdlib.h&gt;                      </span><span class="Preprc"></span></span>
<span class="line"><span class="LineNumber"><a href="#CA-ebcda5650a252563ae03fb853e6a66738be69b97_3">   3</a> </span><span class="LineAnchor" id="CA-ebcda5650a252563ae03fb853e6a66738be69b97_3"></span><span class="anchor" id="line-3-5"></span><span class="Preprc"></span></span>
<span class="line"><span class="LineNumber"><a href="#CA-ebcda5650a252563ae03fb853e6a66738be69b97_4">   4</a> </span><span class="LineAnchor" id="CA-ebcda5650a252563ae03fb853e6a66738be69b97_4"></span><span class="anchor" id="line-4-5"></span><span class="ResWord">int</span> <span class="ID">main</span>(<span class="ResWord">int</span> <span class="ID">argc</span>, <span class="ResWord">char</span> *<span class="ID">argv</span>[])</span>
<span class="line"><span class="LineNumber"><a href="#CA-ebcda5650a252563ae03fb853e6a66738be69b97_5">   5</a> </span><span class="LineAnchor" id="CA-ebcda5650a252563ae03fb853e6a66738be69b97_5"></span><span class="anchor" id="line-5-5"></span>{                           </span>
<span class="line"><span class="LineNumber"><a href="#CA-ebcda5650a252563ae03fb853e6a66738be69b97_6">   6</a> </span><span class="LineAnchor" id="CA-ebcda5650a252563ae03fb853e6a66738be69b97_6"></span><span class="anchor" id="line-6-5"></span></span>
<span class="line"><span class="LineNumber"><a href="#CA-ebcda5650a252563ae03fb853e6a66738be69b97_7">   7</a> </span><span class="LineAnchor" id="CA-ebcda5650a252563ae03fb853e6a66738be69b97_7"></span><span class="anchor" id="line-7-5"></span>        <span class="ResWord">if</span> (<span class="ID">argc</span> == <span class="Number">3</span>) {</span>
<span class="line"><span class="LineNumber"><a href="#CA-ebcda5650a252563ae03fb853e6a66738be69b97_8">   8</a> </span><span class="LineAnchor" id="CA-ebcda5650a252563ae03fb853e6a66738be69b97_8"></span><span class="anchor" id="line-8-3"></span>                <span class="ResWord">int</span>             <span class="ID">a</span> = <span class="ID">atoi</span>(<span class="ID">argv</span>[<span class="Number">1</span>]);</span>
<span class="line"><span class="LineNumber"><a href="#CA-ebcda5650a252563ae03fb853e6a66738be69b97_9">   9</a> </span><span class="LineAnchor" id="CA-ebcda5650a252563ae03fb853e6a66738be69b97_9"></span><span class="anchor" id="line-9-3"></span>                <span class="ResWord">int</span>             <span class="ID">b</span> = <span class="ID">atoi</span>(<span class="ID">argv</span>[<span class="Number">2</span>]);</span>
<span class="line"><span class="LineNumber"><a href="#CA-ebcda5650a252563ae03fb853e6a66738be69b97_10">  10</a> </span><span class="LineAnchor" id="CA-ebcda5650a252563ae03fb853e6a66738be69b97_10"></span><span class="anchor" id="line-10-3"></span>                <span class="ResWord">int</span>             <span class="ID">i</span>;                </span>
<span class="line"><span class="LineNumber"><a href="#CA-ebcda5650a252563ae03fb853e6a66738be69b97_11">  11</a> </span><span class="LineAnchor" id="CA-ebcda5650a252563ae03fb853e6a66738be69b97_11"></span><span class="anchor" id="line-11-3"></span></span>
<span class="line"><span class="LineNumber"><a href="#CA-ebcda5650a252563ae03fb853e6a66738be69b97_12">  12</a> </span><span class="LineAnchor" id="CA-ebcda5650a252563ae03fb853e6a66738be69b97_12"></span><span class="anchor" id="line-12-3"></span>                <span class="ResWord">if</span> (<span class="ID">a</span> &lt;= <span class="Number">0</span> || <span class="ID">b</span> &lt;= <span class="ID">a</span> || <span class="ID">b</span> &gt; <span class="Number">255</span>)</span>
<span class="line"><span class="LineNumber"><a href="#CA-ebcda5650a252563ae03fb853e6a66738be69b97_13">  13</a> </span><span class="LineAnchor" id="CA-ebcda5650a252563ae03fb853e6a66738be69b97_13"></span><span class="anchor" id="line-13-2"></span>                        <span class="ResWord">return</span> <span class="Number">2</span>;               </span>
<span class="line"><span class="LineNumber"><a href="#CA-ebcda5650a252563ae03fb853e6a66738be69b97_14">  14</a> </span><span class="LineAnchor" id="CA-ebcda5650a252563ae03fb853e6a66738be69b97_14"></span><span class="anchor" id="line-14-2"></span></span>
<span class="line"><span class="LineNumber"><a href="#CA-ebcda5650a252563ae03fb853e6a66738be69b97_15">  15</a> </span><span class="LineAnchor" id="CA-ebcda5650a252563ae03fb853e6a66738be69b97_15"></span><span class="anchor" id="line-15-2"></span>                <span class="ID">printf</span>(<span class="String">"</span><span class="String">Znaki odpowiadające kodom z zakresu %d - %d:</span><span class="SPChar">\n</span><span class="String">"</span>, <span class="ID">a</span>, <span class="ID">b</span>);</span>
<span class="line"><span class="LineNumber"><a href="#CA-ebcda5650a252563ae03fb853e6a66738be69b97_16">  16</a> </span><span class="LineAnchor" id="CA-ebcda5650a252563ae03fb853e6a66738be69b97_16"></span><span class="anchor" id="line-16-2"></span>                <span class="ResWord">for</span> (<span class="ID">i</span> = <span class="ID">a</span>; <span class="ID">i</span> &lt;= <span class="ID">b</span>; <span class="ID">i</span>++)</span>
<span class="line"><span class="LineNumber"><a href="#CA-ebcda5650a252563ae03fb853e6a66738be69b97_17">  17</a> </span><span class="LineAnchor" id="CA-ebcda5650a252563ae03fb853e6a66738be69b97_17"></span><span class="anchor" id="line-17-2"></span>                        <span class="ID">printf</span>(<span class="String">"</span><span class="String">%d -&gt;  '%c`</span><span class="SPChar">\n</span><span class="String">"</span>, <span class="ID">i</span>, <span class="ID">i</span>);</span>
<span class="line"><span class="LineNumber"><a href="#CA-ebcda5650a252563ae03fb853e6a66738be69b97_18">  18</a> </span><span class="LineAnchor" id="CA-ebcda5650a252563ae03fb853e6a66738be69b97_18"></span><span class="anchor" id="line-18-2"></span></span>
<span class="line"><span class="LineNumber"><a href="#CA-ebcda5650a252563ae03fb853e6a66738be69b97_19">  19</a> </span><span class="LineAnchor" id="CA-ebcda5650a252563ae03fb853e6a66738be69b97_19"></span><span class="anchor" id="line-19-2"></span>                <span class="ResWord">return</span> <span class="Number">0</span>;</span>
<span class="line"><span class="LineNumber"><a href="#CA-ebcda5650a252563ae03fb853e6a66738be69b97_20">  20</a> </span><span class="LineAnchor" id="CA-ebcda5650a252563ae03fb853e6a66738be69b97_20"></span><span class="anchor" id="line-20-2"></span>        } <span class="ResWord">else</span> {</span>
<span class="line"><span class="LineNumber"><a href="#CA-ebcda5650a252563ae03fb853e6a66738be69b97_21">  21</a> </span><span class="LineAnchor" id="CA-ebcda5650a252563ae03fb853e6a66738be69b97_21"></span><span class="anchor" id="line-21-2"></span>                <span class="ResWord">return</span> <span class="Number">1</span>;</span>
<span class="line"><span class="LineNumber"><a href="#CA-ebcda5650a252563ae03fb853e6a66738be69b97_22">  22</a> </span><span class="LineAnchor" id="CA-ebcda5650a252563ae03fb853e6a66738be69b97_22"></span><span class="anchor" id="line-22-1"></span>        }</span>
<span class="line"><span class="LineNumber"><a href="#CA-ebcda5650a252563ae03fb853e6a66738be69b97_23">  23</a> </span><span class="LineAnchor" id="CA-ebcda5650a252563ae03fb853e6a66738be69b97_23"></span><span class="anchor" id="line-23-1"></span>}</span>
</pre></div></div><span class="anchor" id="line-292"></span><span class="anchor" id="line-293"></span><p class="line862">Pierwszą istotną różnicą w stosunku do poprzednich programów są argumenty funkcji <tt class="backtick">main</tt> (linia 4): <span class="anchor" id="line-294"></span><span class="anchor" id="line-295"></span><span class="anchor" id="line-296"></span><span class="anchor" id="line-1-12"></span></p><div class="highlight cpp"><div class="codearea" dir="ltr" lang="en">
<script type="text/javascript">
document.write('<a href="#" onclick="return togglenumber(\'CA-babd6511a9c77b1c62581c9c207f815df1aa1977\', 1, 1);" \
                class="codenumbers">Toggle line numbers<\/a>');
</script><a href="#" onclick="return togglenumber('CA-babd6511a9c77b1c62581c9c207f815df1aa1977', 1, 1);" class="codenumbers">Toggle line numbers</a>
<pre dir="ltr" id="CA-babd6511a9c77b1c62581c9c207f815df1aa1977" lang="en"><span class="line"><span class="LineNumber"><a href="#CA-babd6511a9c77b1c62581c9c207f815df1aa1977_1">   1</a> </span><span class="LineAnchor" id="CA-babd6511a9c77b1c62581c9c207f815df1aa1977_1"></span><span class="anchor" id="line-1-13"></span><span class="ResWord">int</span> <span class="ID">main</span>(<span class="ResWord">int</span> <span class="ID">argc</span>, <span class="ResWord">char</span> *<span class="ID">argv</span>[])</span>
</pre></div></div><span class="anchor" id="line-297"></span><p class="line862">Całkowita zmienna <tt class="backtick">argc</tt>
 określa liczbę argumentów podanych przy uruchomieniu programu. Zmienna 
ta ma zawsze wartość dodatnią - 1 oznacza, że program został uruchomiony
 bez argumentów, 2 - z jednym argumentem, 3 - z dwoma, itd. <span class="anchor" id="line-298"></span><span class="anchor" id="line-299"></span></p><p class="line862">Zmienna <tt class="backtick">argv</tt> to wektor (tablica) zawierająca <em>napisy</em>. Dokładniejsze wyjaśnienie znaczenia <tt class="backtick">char&nbsp;*</tt> musimy odłożyć na później, ale na ten moment zupełnie wystarczy Państwu przekonanie, że <tt class="backtick">char&nbsp;*</tt> to "napis". Język C dostarcza pokaźnego zbioru funkcji, które potrafią przetwarzać napisy - jedną z takich funkcji jest <tt class="backtick">atoi</tt>,
 która potrafi zamienić napis na liczbę całkowitą (o ile oczywiście 
napis składa się wyłącznie z cyfr, ewentualnie poprzedzonych znakiem <tt class="backtick">+</tt> lub <tt class="backtick">-</tt>). Umieszczenie na początku naszego programu polecenia  <span class="anchor" id="line-300"></span><span class="anchor" id="line-301"></span><span class="anchor" id="line-302"></span><span class="anchor" id="line-1-14"></span></p><div class="highlight cpp"><div class="codearea" dir="ltr" lang="en">
<script type="text/javascript">
document.write('<a href="#" onclick="return togglenumber(\'CA-8cfc3009fef9237706824b738ba58d66b8419f0e\', 1, 1);" \
                class="codenumbers">Toggle line numbers<\/a>');
</script><a href="#" onclick="return togglenumber('CA-8cfc3009fef9237706824b738ba58d66b8419f0e', 1, 1);" class="codenumbers">Toggle line numbers</a>
<pre dir="ltr" id="CA-8cfc3009fef9237706824b738ba58d66b8419f0e" lang="en"><span class="line"><span class="LineNumber"><a href="#CA-8cfc3009fef9237706824b738ba58d66b8419f0e_1">   1</a> </span><span class="LineAnchor" id="CA-8cfc3009fef9237706824b738ba58d66b8419f0e_1"></span><span class="anchor" id="line-1-15"></span><span class="Preprc">#</span><span class="Preprc">include &lt;stdlib.h&gt;</span><span class="Preprc"></span></span>
<span class="line"><span class="LineNumber"><a href="#CA-8cfc3009fef9237706824b738ba58d66b8419f0e_2">   2</a> </span><span class="LineAnchor" id="CA-8cfc3009fef9237706824b738ba58d66b8419f0e_2"></span><span class="anchor" id="line-2-6"></span><span class="Preprc"></span></span>
</pre></div></div><span class="anchor" id="line-303"></span><p class="line874">umożliwia kompilatorowi sprawdzenie, czy prawidłowo wywołujemy tę funkcję. <span class="anchor" id="line-304"></span><span class="anchor" id="line-305"></span></p><p class="line862">Ponieważ
 nasz program wymaga podania przez użytkownika dwóch argumentów 
(początku i końca zakresu kodów ASCII), a więc działanie funkcji <tt class="backtick">main</tt> rozpoczyna się od sprawdzenia, czy <span class="anchor" id="line-306"></span>zmienna <tt class="backtick">argc</tt> ma wartość 3 (linia 7). Jeżeli tak, to przystępujemy do działania, jeśli nie - kończymy funkcję <tt class="backtick">main</tt>, sygnalizując błąd przez zwrócenie wartości różnej od zera (linia 21). <span class="anchor" id="line-307"></span><span class="anchor" id="line-308"></span></p><p class="line862">Działanie
 naszego programu będzie wymagało zadeklarowania trzech zmiennych 
(wystarczyłyby dwie, ale trzy pozwolą zapisać kod łatwiejszy do 
zrozumienia), a więc definiujemy na początku bloku (zwróćmy uwagę, że 
nie musi to być blok - ciało funkcji) zmienne <tt class="backtick">a</tt> i <tt class="backtick">b</tt> (początek i koniec przedziału) oraz <tt class="backtick">i</tt> (posłuży do iterowania po kodach z przedziału). Zmienne <tt class="backtick">a</tt> i <tt class="backtick">b</tt> są natychmiast inicjowane przy pomocy wartości zwracanych przez funkcję <tt class="backtick">atoi</tt>.
 Jak już wspomnieliśmy wyżej, funkcja ta przekształca napis na liczbę - 
zakładamy, że użytkownik powinien określić początek przedziału jako 
pierwszy, a koniec jako drugi argument wywołania. Tablice w języku C są 
indeksowane poczynając od zera i w naszym przypadku <tt class="backtick">argv[0]'&nbsp;powinien&nbsp;zawierać&nbsp;nazwę&nbsp;programu,&nbsp;który&nbsp;wywołana&nbsp;(zapewne&nbsp;będzie&nbsp;to&nbsp;napis&nbsp;</tt>./a.out<tt class="backtick">),&nbsp;</tt>argv[1]<tt class="backtick">&nbsp;-&nbsp;napis&nbsp;określający&nbsp;początek&nbsp;i&nbsp;wreszcie&nbsp;</tt>argv[2]`
 - napis określający koniec przedziału. Dla ułatwienia zrozumienia tych 
wywodów spróbujcie sobie Państwo wyobrazić, że wywołanie programu w 
postaci: <span class="anchor" id="line-309"></span><span class="anchor" id="line-310"></span><span class="anchor" id="line-311"></span></p><pre><span class="anchor" id="line-1-11"></span>volt:~/lmp/lmp1/gr1&gt; ./a.out 48 57</pre><span class="anchor" id="line-312"></span><p class="line862">Powoduje wypełnienie <tt class="backtick">argc</tt> i <tt class="backtick">argv</tt> następującymi wartościami: <span class="anchor" id="line-313"></span><span class="anchor" id="line-314"></span><span class="anchor" id="line-315"></span><span class="anchor" id="line-316"></span><span class="anchor" id="line-317"></span><span class="anchor" id="line-318"></span></p><pre><span class="anchor" id="line-1-12"></span> argc     &lt;-- 3
<span class="anchor" id="line-2-6"></span> argv[0]  &lt;--- "./a.out"
<span class="anchor" id="line-3-5"></span> argv[1]  &lt;--- "48"
<span class="anchor" id="line-4-4"></span> argv[2]  &lt;--- "57"</pre><span class="anchor" id="line-319"></span><p class="line862">Zwróćmy też uwagę, że <tt class="backtick">48</tt> i <tt class="backtick">"48"</tt> to dwa zupełnie różne obiekty - pierwszy jest liczbą całkowitą (48), a drugi to trzy bajty: pierwszy bajt zawiera znak <tt class="backtick">'4'</tt> (czyli liczbę 52, która jest kodem tego znaku w ASCII), drugi bajt zawiera znak <tt class="backtick">'8'</tt> (czyli liczbę 56), a trzeci bajt liczbę 0 oznaczającą koniec napisu. <span class="anchor" id="line-320"></span><span class="anchor" id="line-321"></span></p><p class="line862">W
 12 linii naszego programu sprawdzamy, czy użytkownik podał właściwe 
wartości a i b. Oczekujemy, że  0 &lt; a &lt; b &lt; 255, w przeciwnym 
razie kończymy program zwracając różną od zera wartość 2, sygnalizującą 
kolejny błąd (linia 13). <span class="anchor" id="line-322"></span><span class="anchor" id="line-323"></span></p><p class="line862">Jeżeli warunek instrukcji <tt class="backtick">if</tt> z linii 12 okazał się fałszywy i nie wykonaliśmy instrukcji <tt class="backtick">return</tt>
 z linii 13, to możemy przejść do zasadniczych obliczeń, realizowanych w
 liniach 15-17 i po ich zakończeniu zwrócić wartość 0 (linia 19) 
oznaczającą, że program zakończył się pomyślnie. <span class="anchor" id="line-324"></span><span class="anchor" id="line-325"></span></p><p class="line862">Obejrzyjmy teraz ślad kompilacji i kilku uruchomień naszego programu. Występujące w kilku liniach poniższego śladu polecenie <strong>echo $?</strong>
 pozwala wypisać na ekran wartość zwróconą przez ostatnio uruchomiony 
program - możemy się w ten sposób przekonać, że zwracanie warości 
sygnalizujących błędne dane wejściowe rzeczywiście działa: <span class="anchor" id="line-326"></span><span class="anchor" id="line-327"></span></p><p class="line867"><span class="anchor" id="line-328"></span><span class="anchor" id="line-329"></span><span class="anchor" id="line-330"></span><span class="anchor" id="line-331"></span><span class="anchor" id="line-332"></span><span class="anchor" id="line-333"></span><span class="anchor" id="line-334"></span><span class="anchor" id="line-335"></span><span class="anchor" id="line-336"></span><span class="anchor" id="line-337"></span><span class="anchor" id="line-338"></span><span class="anchor" id="line-339"></span><span class="anchor" id="line-340"></span><span class="anchor" id="line-341"></span><span class="anchor" id="line-342"></span><span class="anchor" id="line-343"></span><span class="anchor" id="line-344"></span><span class="anchor" id="line-345"></span><span class="anchor" id="line-346"></span><span class="anchor" id="line-347"></span><span class="anchor" id="line-348"></span><span class="anchor" id="line-349"></span><span class="anchor" id="line-350"></span><span class="anchor" id="line-351"></span><span class="anchor" id="line-352"></span><span class="anchor" id="line-353"></span><span class="anchor" id="line-354"></span><span class="anchor" id="line-355"></span><span class="anchor" id="line-356"></span><span class="anchor" id="line-357"></span></p><pre><span class="anchor" id="line-1-13"></span>volt:~/lmp/lmp1/gr1&gt; cc -Wall -ansi  p4.c
<span class="anchor" id="line-2-7"></span>volt:~/lmp/lmp1/gr1&gt; ./a.out              
<span class="anchor" id="line-3-6"></span>volt:~/lmp/lmp1/gr1&gt; echo $?              
<span class="anchor" id="line-4-5"></span>1                                         
<span class="anchor" id="line-5-3"></span>volt:~/lmp/lmp1/gr1&gt; ./a.out 10 9         
<span class="anchor" id="line-6-3"></span>volt:~/lmp/lmp1/gr1&gt; echo $?              
<span class="anchor" id="line-7-3"></span>2                                         
<span class="anchor" id="line-8-3"></span>volt:~/lmp/lmp1/gr1&gt; ./a.out 65 70        
<span class="anchor" id="line-9-3"></span>Znaki odpowiadające kodom z zakresu 65 - 70:
<span class="anchor" id="line-10-3"></span>65 -&gt;  'A`                                  
<span class="anchor" id="line-11-3"></span>66 -&gt;  'B`                                  
<span class="anchor" id="line-12-2"></span>67 -&gt;  'C`                                  
<span class="anchor" id="line-13-1"></span>68 -&gt;  'D`                                  
<span class="anchor" id="line-14-1"></span>69 -&gt;  'E`                                  
<span class="anchor" id="line-15-1"></span>70 -&gt;  'F`                                  
<span class="anchor" id="line-16-1"></span>volt:~/lmp/lmp1/gr1&gt; ./a.out 48 57        
<span class="anchor" id="line-17-1"></span>Znaki odpowiadające kodom z zakresu 48 - 57:
<span class="anchor" id="line-18-1"></span>48 -&gt;  '0`                                  
<span class="anchor" id="line-19-1"></span>49 -&gt;  '1`                                  
<span class="anchor" id="line-20-1"></span>50 -&gt;  '2`                                  
<span class="anchor" id="line-21-1"></span>51 -&gt;  '3`                                  
<span class="anchor" id="line-22-1"></span>52 -&gt;  '4`                                  
<span class="anchor" id="line-23-1"></span>53 -&gt;  '5`                                  
<span class="anchor" id="line-24-1"></span>54 -&gt;  '6`                                  
<span class="anchor" id="line-25-1"></span>55 -&gt;  '7`                                  
<span class="anchor" id="line-26-1"></span>56 -&gt;  '8`                                  
<span class="anchor" id="line-27-1"></span>57 -&gt;  '9`                                  
<span class="anchor" id="line-28-1"></span>volt:~/lmp/lmp1/gr1&gt; echo $?
<span class="anchor" id="line-29-1"></span>0</pre><span class="anchor" id="line-358"></span><span class="anchor" id="line-359"></span><p class="line867">
</p><h5 id="Pi.2BAQU-ty_program">Piąty program</h5>
<span class="anchor" id="line-360"></span><span class="anchor" id="line-361"></span><p class="line874">Ostatni
 program to zadanie, które rozwiązują Państwo jako test zaliczeniowy. 
Polega ono na napisaniu prostego programu realizującego określoną przez 
prowadzącego funkcjonalność. Na przykład: <span class="anchor" id="line-362"></span><span class="anchor" id="line-363"></span></p><ul><li>Proszę napisać program, który obliczy i wypisze na ekran sumę liczb podanych jako argumenty wywołania. <span class="anchor" id="line-364"></span></li><li>Proszę
 napisać program, który obliczy i wypisze na ekran różnicę dwóch liczb 
podanych jako argumenty wywołania. Program powinien zwracać 1, jeśli 
zostanie wywołany z niewłaściwą liczbą argumentów. <span class="anchor" id="line-365"></span></li><li>Proszę
 napisać program, który obliczy i wypisze na ekran wszystkie liczby 
całkowite z zakresu podanego jako argumenty wywołania. Program powinien 
zwracać 1, jeśli zostanie wywołany z niewłaściwą liczbą argumentów. <span class="anchor" id="line-366"></span><span class="anchor" id="line-367"></span></li></ul><p class="line867"></p><hr class="hr4"><p class="line874"> <span class="anchor" id="line-368"></span>I to już prawie wszystko, ale nie wolno nam zapomnieć, że <span class="anchor" id="line-369"></span></p><div><table><tbody><tr>  <td style="border-width: 0px; ; width: 66%"><p class="line862">materiały zostały opracowane w ramach realizacji Programu Rozwojowego Politechniki Warszawskiej. </p></td>
  <td style="border-width: 0px;  text-align: right;"><p class="line862"> <img alt="http://prpw.iem.pw.edu.pl/images/KAPITAL_LUDZKI.gif" class="external_image" src="LMP_1%20-%20wikidyd%20-%20IETiSIP,%20Wydzial%20Elektryczny%20Politechniki%20Warszawskiej_files/KAPITAL_LUDZKI.gif" title="http://prpw.iem.pw.edu.pl/images/KAPITAL_LUDZKI.gif"> <img alt="http://prpw.iem.pw.edu.pl/images/EU+EFS_P-kolor.gif" class="external_image" src="LMP_1%20-%20wikidyd%20-%20IETiSIP,%20Wydzial%20Elektryczny%20Politechniki%20Warszawskiej_files/EUEFS_P-kolor.gif" title="http://prpw.iem.pw.edu.pl/images/EU+EFS_P-kolor.gif"> </p></td>
</tr>
<tr>  <td colspan="2" style="border-width: 0px;  text-align: center;"><span class="anchor" id="line-370"></span><p class="line891"><small><a class="http" href="http://www.pr.pw.edu.pl/"><img alt="http://www.pr.pw.edu.pl/" class="external_image" src="LMP_1%20-%20wikidyd%20-%20IETiSIP,%20Wydzial%20Elektryczny%20Politechniki%20Warszawskiej_files/small_logo_prpw.jpg" title="http://www.pr.pw.edu.pl/"></a> jest projektem współfinansowanym przez Unię Europejską w ramach <a class="http" href="http://www.efs.gov.pl/">Europejskiego Funduszu społecznego</a>
 (działanie 4.1.1 Programu Operacyjnego Kapitał Ludzki) i ma na celu 
poprawę jakości kształcenia oraz dostosowanie oferty dydaktycznej 
Politechniki Warszawskiej do potrzeb rynku pracy. Będzie on realizowany 
przez Uczelnię w latach 2008-2015.</small> </p></td>
</tr>
</tbody></table></div><span class="anchor" id="line-371"></span><span class="anchor" id="bottom"></span></div><p id="pageinfo" class="info" dir="ltr" lang="en">wikidyd - IETiSIP, Wydzial Elektryczny Politechniki Warszawskiej: LMP/1  (last edited 2011-09-28 09:30:36 by <span title="JacekStarzyński @ oer.iem.pw.edu.pl[194.29.146.107]"><a href="http://wikidyd.iem.pw.edu.pl/JacekStarzy%C5%84ski" title="JacekStarzyński @ oer.iem.pw.edu.pl[194.29.146.107]">JacekStarzyński</a></span>)</p>

<div id="pagebottom"></div>
</div>


<div id="footer">
<ul id="credits">
<li><a href="http://moinmo.in/" title="This site uses the MoinMoin Wiki software.">MoinMoin Powered</a></li><li><a href="http://moinmo.in/Python" title="MoinMoin is written in Python.">Python Powered</a></li><li><a href="http://moinmo.in/GPL" title="MoinMoin is GPL licensed.">GPL licensed</a></li><li><a href="http://validator.w3.org/check?uri=referer" title="Click here to validate this page.">Valid HTML 4.01</a></li>
</ul>


</div>



</body><div data="{&quot;a&quot;:&quot;setShowingSafe&quot;,&quot;f&quot;:false}" style="display:none" id="sp_console_event"></div></html>